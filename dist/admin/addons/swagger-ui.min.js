var vanillaadmin =
(window["webpackJsonpvanillaadmin"] = window["webpackJsonpvanillaadmin"] || []).push([[9],{

/***/ 10:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ debugUtils["a" /* debug */]; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ debugUtils["b" /* logDebug */]; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ debugUtils["c" /* logDebugConditionnal */]; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* reexport */ debugUtils["d" /* logError */]; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* reexport */ debugUtils["e" /* logWarning */]; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ flattenObject; });
__webpack_require__.d(__webpack_exports__, "q", function() { return /* reexport */ simplifyFraction; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ hashString; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ labelize; });
__webpack_require__.d(__webpack_exports__, "r", function() { return /* reexport */ slugify; });
__webpack_require__.d(__webpack_exports__, "p", function() { return /* reexport */ sanitizeUrl; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ capitalizeFirstLetter; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ OS; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ guessOperatingSystem; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ indexArrayByKey; });
__webpack_require__.d(__webpack_exports__, "o", function() { return /* reexport */ notEmpty; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ ensureString; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ forceInt; });

// UNUSED EXPORTS: isFileImage, spaceshipCompare, unflattenObject, resolvePromisesSequentially, uuidv4, stableObjectHash, compare, normalizeString, splitStringLoosely, matchAtMention, promiseTimeout, mergeAndReplaceArrays, isInstanceOfOneOf

// EXTERNAL MODULE: ./packages/vanilla-utils/src/debugUtils.ts
var debugUtils = __webpack_require__(34);

// CONCATENATED MODULE: ./packages/vanilla-utils/src/fileUtils.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/** This should mirror extensions allowed in Vanilla\ImageResizer.php */

var IMAGE_REGEX = /^image\/(gif|jpe?g|png)/i;
/**
 * A filter for use with [].filter
 *
 * Matches only image image type files.
 * @private
 *
 * @param file - A File object.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/File
 *
 * @returns Whether or not the file is an acceptable image
 */

function isFileImage(file) {
  if (IMAGE_REGEX.test(file.type)) {
    return true;
  }

  Object(debugUtils["b" /* logDebug */])("Filtered out non-image file: ", file.name);
  return false;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(8);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(38);

// EXTERNAL MODULE: ./node_modules/lodash/set.js
var set = __webpack_require__(72);
var set_default = /*#__PURE__*/__webpack_require__.n(set);

// CONCATENATED MODULE: ./packages/vanilla-utils/src/logicUtils.ts



/**
 * @author Adam Charron <adam.c@vanillaforums.com>
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license gpl-2.0-only
 */

function spaceshipCompare(a, b) {
  if (a > b) {
    return 1;
  } else if (a < b) {
    return -1;
  } else {
    return 0;
  }
}
function flattenObject(obj) {
  var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  return Object.keys(obj).reduce(function (acc, key) {
    var prefix = delimiter.length ? delimiter + "." : "";

    if (Object(esm_typeof["a" /* default */])(obj[key]) === "object" && !Array.isArray(obj[key]) && obj[key] !== null) {
      Object.assign(acc, flattenObject(obj[key], prefix + key));
    } else {
      acc[prefix + key] = obj[key];
    }

    return acc;
  }, {});
}
function unflattenObject(original) {
  var result = {};

  for (var _i = 0, _Object$entries = Object.entries(original); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = Object(slicedToArray["a" /* default */])(_Object$entries[_i], 2),
        key = _Object$entries$_i[0],
        value = _Object$entries$_i[1];

    set_default()(result, key, value);
  }

  return result;
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/mathUtils.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Get various information about a fraction.
 *
 * @param numerator The fraction numerator.
 * @param denominator The fraction denominator.
 */
function simplifyFraction(numerator, denominator) {
  var findGCD = function findGCD(a, b) {
    return b ? findGCD(b, a % b) : a;
  };

  var gcd = findGCD(numerator, denominator);
  numerator = numerator / gcd;
  denominator = denominator / gcd;
  return {
    numerator: numerator,
    denominator: denominator,
    shorthand: denominator + ":" + numerator
  };
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/promiseUtils.ts
/**
 * Utility functions related to promises/async.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Resolve an array of functions that return promises sequentially.
 *
 * @param promiseFunctions - The functions to execute.
 *
 * @returns An array of all results in sequential order.
 *
 * @example
 * const urls = ['/url1', '/url2', '/url3']
 * const functions = urls.map(url => () => fetch(url))
 * resolvePromisesSequentially(funcs)
 *   .then(console.log)
 *   .catch(console.error)
 */
function resolvePromisesSequentially(promiseFunctions) {
  if (!Array.isArray(promiseFunctions)) {
    throw new Error("First argument needs to be an array of Promises");
  }

  return new Promise(function (resolve, reject) {
    var count = 0;
    var results = [];

    function iterationFunction(previousPromise, currentPromise) {
      return previousPromise.then(function (result) {
        if (count++ !== 0) {
          results = results.concat(result);
        }

        return currentPromise(result, results, count);
      }).catch(function (err) {
        return reject(err);
      });
    }

    promiseFunctions = promiseFunctions.concat(function () {
      return Promise.resolve();
    });
    promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(function () {
      resolve(results);
    });
  });
}
// EXTERNAL MODULE: ./node_modules/lodash/mergeWith.js
var mergeWith = __webpack_require__(73);
var mergeWith_default = /*#__PURE__*/__webpack_require__.n(mergeWith);

// CONCATENATED MODULE: ./packages/vanilla-utils/src/stringUtils.ts
/**
 * Utilities related to strings.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * A simple, fast method of hashing a string. Similar to Java's hash function.
 * https://stackoverflow.com/a/7616484/1486603
 *
 * @param str - The string to hash.
 *
 * @returns The hash code returned.
 */

function hashString(str) {
  function hashReduce(prevHash, currVal) {
    // tslint:disable-next-line:no-bitwise
    return (prevHash << 5) - prevHash + currVal.charCodeAt(0);
  }

  return str.split("").reduce(hashReduce, 0);
}
/**
 * Generate a RFC4122 compliant uuid. NOTE!!! Not cryptographically secure.
 *
 * This does not use a true random source (Eg. using Math.random()).
 * To use a better source would require dropping IE in order to use the crypto module.
 */

function uuidv4() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
    var r = Math.random() * 16 | 0,
        v = c == "x" ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
}
/**
 * Convert a camel case variable to a title case label.
 *
 * @param str - The string to labelize.
 * @returns Returns a new string suitable for a label.
 */

function labelize(str) {
  /**
   * $labelCode = preg_replace('`(?<![A-Z0-9])([A-Z0-9])`', ' $1', $labelCode);
   * $labelCode = preg_replace('`([A-Z0-9])(?=[a-z])`', ' $1', $labelCode);
   * $labelCode = preg_replace('`\s+`', ' ', $labelCode);
   * $labelCode = ucfirst(trim($labelCode));
   */
  var label = str.replace(/([^A-Z0-9])([A-Z0-9])/, "$1 $2");
  label = label.replace(/([A-Z0-9])(?=[a-z])/, " $1");
  label = label.replace(/[_-]/, " ");
  label = label.replace(/\s+/, " ");
  var parts = label.split(" ");
  label = parts.map(function (s) {
    return s.charAt(0).toLocaleUpperCase() + s.slice(1);
  }).join(" ");
  return label;
}
/**
 * Hash an object into a short key, that is stable no matter what order the parameters are.
 */

function stableObjectHash(obj) {
  // Sort the object first.
  var ordered = {};
  Object.keys(obj).sort().forEach(function (key) {
    ordered[key] = obj[key];
  });
  return hashString(JSON.stringify(ordered));
}

/**
 * Utility for sorting values. Similar to the <=> operator in PHP.
 *
 * @param val1 The first value to compare.
 * @param val2 The second value to compare.
 *
 * @returns -1, 0, or 1
 */
function compare(val1, val2) {
  if (typeof val1 === "string" && typeof val2 === "string") {
    return val1.localeCompare(val2);
  } else {
    if (val1 > val2) {
      return 1;
    } else if (val1 < val2) {
      return -1;
    }

    return 0;
  }
}
/**
 * Parse a string into a URL friendly format.
 *
 * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber
 *
 * @param str The string to parse.
 */

function slugify(str, options) {
  var whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\s]+/g : /[-\s]+/g;
  return str.normalize("NFD") // Normalize accented characters into ASCII equivalents
  .replace(/[^\w\s$*_+~.()'"\-!:@]/g, "") // REmove characters that don't URL encode well
  .trim() // Trim whitespace
  .replace(whiteSpaceNormalizeRegexp, "-") // Normalize whitespace
  .toLocaleLowerCase(); // Convert to locale aware lowercase.
}
function normalizeString(str) {
  return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
/**
 * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.
 *
 * This will still return pieces with accents.
 *
 * @param toSplit The string to split.
 * @param splitWith The string to split with.
 */

function splitStringLoosely(toSplit, splitWith) {
  var normalizedName = normalizeString(toSplit);
  var normalizedSplitTerm = normalizeString(splitWith);
  var normalizedPieces = normalizedName.split(new RegExp("(".concat(normalizedSplitTerm, ")"), "i"));
  var charactersUsed = 0;
  return normalizedPieces.map(function (piece) {
    var start = charactersUsed;
    charactersUsed += piece.length;
    return toSplit.substring(start, charactersUsed);
  });
}

/**
 * Custom matching to allow quotation marks in the matching string as well as spaces.
 * Spaces make things more complicated.
 *
 * @param subtext - The string to be tested.
 * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?
 * @returns Matching string if successful.  Null on failure to match.
 */
function matchAtMention(subtext) {
  var shouldStartWithSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var requireQuotesForWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  // Split the string at the lines to allow for a simpler regex.
  var lines = subtext.split("\n");
  var lastLine = lines[lines.length - 1]; // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!

  /**
   * Put together the non-excluded characters.
   *
   * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.
   *
   * @returns {string} A Regex string.
   */

  function nonExcludedCharacters(excludeWhiteSpace) {
    var excluded = "[^" + '"' + // Quote character
    "\\u0000-\\u001f\\u007f-\\u009f" + // Control characters
    "\\u2028"; // Line terminator

    if (excludeWhiteSpace) {
      excluded += "\\s";
    }

    excluded += "]";
    return excluded;
  }

  var regexStr = "@" + // @ Symbol triggers the match
  "(" + // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.
  '"(' + nonExcludedCharacters(false) + '+?)"?' + "|" + // Or
  // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.
  "(" + nonExcludedCharacters(requireQuotesForWhitespace) + '+?)"?' + ")" + "(?:\\n|$)"; // Newline terminates.
  // Determined by at.who library

  if (shouldStartWithSpace) {
    regexStr = "(?:^|\\s)" + regexStr;
  }

  var regex = new RegExp(regexStr, "gi");
  var match = regex.exec(lastLine);

  if (match) {
    return {
      rawMatch: match[0],
      match: match[2] || match[1] // Return either of the matching groups (quoted or unquoted).

    };
  } // No match


  return null;
}
var SAFE_PROTOCOL_REGEX = /^(http:\/\/|https:\/\/|tel:|mailto:\/\/|\/|#)/;
/**
 * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.
 *
 * Allowed protocols
 * - "http://",
 * - "https://",
 * - "tel:",
 * - "mailto://",
 * - "#"
 *
 * @param url The url to sanitize.
 */

function sanitizeUrl(url) {
  if (url.match(SAFE_PROTOCOL_REGEX)) {
    return url;
  } else {
    return "unsafe:" + url;
  }
}
/**
 * Capitalize the first character of a string.
 *
 * @param str The string to modify.
 */

function capitalizeFirstLetter(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
/**
 * Simple utility function for waiting some duration in promise.
 *
 * @param duration The amount of time to wait.
 */

function promiseTimeout(duration) {
  return new Promise(function (resolve) {
    setTimeout(resolve, duration);
  });
}

function mergeCustomizer(into, source) {
  if (Array.isArray(into) || Array.isArray(source)) {
    return source;
  }
}
/**
 * Merge 2 objects, but replace arrays instead of merging them.
 */


function mergeAndReplaceArrays(item1, item2) {
  return mergeWith_default()({}, item1, item2, mergeCustomizer);
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/systemUtils.ts
/**
 * Utilities related to the user's system.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var OS;
/**
 * Provide relatively rough detection of mobile OS.
 *
 * This is not even close to perfect but can be used to try and offer,
 * OS specific input elements for things like datetimes.
 */

(function (OS) {
  OS["IOS"] = "ios";
  OS["ANDROID"] = "android";
  OS["UNKNOWN"] = "unkwown";
})(OS || (OS = {}));

function guessOperatingSystem() {
  var userAgent = navigator.userAgent || navigator.vendor || window.opera;

  if (/android/i.test(userAgent)) {
    return OS.ANDROID;
  } // iOS detection from: http://stackoverflow.com/a/9039885/177710


  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
    return OS.IOS;
  }

  return OS.UNKNOWN;
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/typeUtils.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Determine if an instance is an instance of any of the listed classes.
 *
 * @param needle The instance.
 * @param haystack The classes to check.
 */
function isInstanceOfOneOf(needle, haystack) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = haystack[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var classItem = _step.value;

      if (needle instanceof classItem) {
        return true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}
/**
 * Transform an array of objects and an map of objets with a given key.
 *
 * Objects that do not contain the given key are dropped.
 *
 * @param array The array to go through.
 * @param key The key to lookup.
 */

function indexArrayByKey(array, key) {
  var object = {};
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = array[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var item = _step2.value;

      if (key in item) {
        if (!(item[key] in object)) {
          object[item[key]] = [];
        }

        object[item[key]].push(item);
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return object;
}
function notEmpty(value) {
  return value !== null && value !== undefined;
}
function ensureString(maybeString) {
  if (typeof maybeString !== "string") throw new TypeError("Expected maybeString to have type string");
  return maybeString;
}
function forceInt(value, fallback) {
  var _value;

  var result = Number.parseInt((_value = value) !== null && _value !== void 0 ? _value : "", 10);
  return Number.isNaN(result) ? fallback : result;
}
// CONCATENATED MODULE: ./packages/vanilla-utils/index.ts
/**
 * General utility functions.
 * This file should have NO external dependencies other than javascript.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */









/***/ }),

/***/ 127:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return embedMenuClasses; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _library_styles_globalStyleVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var _library_styles_styleHelpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13);
/* harmony import */ var _library_styles_ColorsUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
/* harmony import */ var _library_styles_styleUnit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
/* harmony import */ var _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7);
/* harmony import */ var _library_styles_styleUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12);
/* harmony import */ var _library_styles_themeCache__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9);
/* harmony import */ var _vanilla_library_src_scripts_styles_shadowHelpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(57);
/* harmony import */ var csx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(3);
/* harmony import */ var csx__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(csx__WEBPACK_IMPORTED_MODULE_9__);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/*
 * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */









var embedMenuClasses = Object(_library_styles_themeCache__WEBPACK_IMPORTED_MODULE_7__[/* useThemeCache */ "c"])(function () {
  var style = Object(_library_styles_styleUtils__WEBPACK_IMPORTED_MODULE_6__[/* styleFactory */ "d"])("embedMenu");
  var globalVars = Object(_library_styles_globalStyleVars__WEBPACK_IMPORTED_MODULE_1__[/* globalVariables */ "b"])();
  var root = style(_objectSpread({
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    top: 0,
    left: Object(csx__WEBPACK_IMPORTED_MODULE_9__["percent"])(50)
  }, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].margin({
    horizontal: "auto"
  }), {
    transform: "translate(-50%, -50%)",
    background: _library_styles_ColorsUtils__WEBPACK_IMPORTED_MODULE_3__[/* ColorsUtils */ "a"].colorOut(globalVars.mainColors.bg)
  }, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].border(), {}, Object(_vanilla_library_src_scripts_styles_shadowHelpers__WEBPACK_IMPORTED_MODULE_8__[/* shadowOrBorderBasedOnLightness */ "b"])(), {
    zIndex: 100
  }, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].padding({
    vertical: 4,
    horizontal: 2
  }), {}, {
    "&.isOpened": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    },
    "& > *": _objectSpread({}, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].margin({
      horizontal: 4
    }))
  }));
  var form = style("form", {
    display: "block",
    width: Object(csx__WEBPACK_IMPORTED_MODULE_9__["percent"])(100)
  });
  var imageContainer = style("imageContainer", {
    position: "relative"
  }); // Extra specific and defensive here because it's within userContent styles.

  var paragraph = style("paragraph", _objectSpread({}, {
    "&&": _objectSpread({}, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].padding({
      all: 0,
      top: Object(_library_styles_styleHelpers__WEBPACK_IMPORTED_MODULE_2__["importantUnit"])(globalVars.gutter.quarter)
    }), {}, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].font({
      weight: globalVars.fonts.weights.normal,
      lineHeight: globalVars.lineHeights.base,
      color: globalVars.meta.colors.fg,
      size: globalVars.fonts.size.medium,
      align: "left"
    }))
  }));
  var verticalPadding = style("verticalPadding", _objectSpread({}, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_5__[/* Mixins */ "a"].padding({
    vertical: Object(_library_styles_styleUnit__WEBPACK_IMPORTED_MODULE_4__[/* styleUnit */ "a"])(globalVars.gutter.half)
  })));
  return {
    root: root,
    form: form,
    imageContainer: imageContainer,
    paragraph: paragraph,
    verticalPadding: verticalPadding
  };
});

/***/ }),

/***/ 128:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditorEventWall; });
/* unused harmony export isEditorWalledEvent */
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

var EDITOR_WALLED_EVENT = "isEditorWalledEvent";
var EDITOR_EVENT_WALL_CLASS = "editorEventWall";
/**
 * A react component that prevents events from propagating up to quill.
 *
 * This marks events so they can be ignored by our own event handlers in quill.
 * Currently this is only implemented for the EmbedSelectionModule. See usages of isEditorWalledEvent
 */

function EditorEventWall(props) {
  var ref = Object(react__WEBPACK_IMPORTED_MODULE_1__["useRef"])(null);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(function () {
    var current = ref.current;

    if (!current) {
      return;
    }

    current.addEventListener("click", eventFlagger);
    current.addEventListener("mouseup", eventFlagger); // current.addEventListener("mousedown", eventFlagger);

    current.addEventListener("keydown", eventFlagger);
    return function () {
      current.removeEventListener("click", eventFlagger);
      current.removeEventListener("mouseup", eventFlagger); // current.removeEventListener("mousedown", eventFlagger);

      current.removeEventListener("keydown", eventFlagger);
    };
  }, [ref]);
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])({
    ref: ref
  }, props, {
    onClick: function onClick(e) {
      e.preventDefault();
    },
    className: EDITOR_EVENT_WALL_CLASS
  }));
}
/**
 * Event listener that flags items originating from inside of HTMLElement inside an event wall.
 * @param event
 */

var eventFlagger = function eventFlagger(event) {
  event[EDITOR_WALLED_EVENT] = true;
};
/**
 * Determine if an event has been marked to be walled.
 */


function isEditorWalledEvent(event) {
  return !!event[EDITOR_WALLED_EVENT];
}

/***/ }),

/***/ 147:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./en-SG": 83,
	"./en-SG.js": 83,
	"./en-au": 84,
	"./en-au.js": 84,
	"./en-ca": 85,
	"./en-ca.js": 85,
	"./en-gb": 86,
	"./en-gb.js": 86,
	"./en-ie": 87,
	"./en-ie.js": 87,
	"./en-il": 88,
	"./en-il.js": 88,
	"./en-nz": 89,
	"./en-nz.js": 89
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 147;

/***/ }),

/***/ 169:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return blockQuoteVariables; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return blockQuoteCSS; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _library_styles_styleUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12);
/* harmony import */ var _library_styles_themeCache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9);
/* harmony import */ var _library_styles_globalStyleVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(11);
/* harmony import */ var _library_styles_styleShim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20);
/* harmony import */ var _library_styles_ColorsUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5);
/* harmony import */ var _library_styles_styleHelpersBorders__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62);
/* harmony import */ var _library_styles_styleUnit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2);
/* harmony import */ var _dashboard_compatibilityStyles_cssOut__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67);
/* harmony import */ var _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(7);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/*
 * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license Proprietary
 */









var blockQuoteVariables = Object(_library_styles_themeCache__WEBPACK_IMPORTED_MODULE_2__[/* useThemeCache */ "c"])(function () {
  var globalVars = Object(_library_styles_globalStyleVars__WEBPACK_IMPORTED_MODULE_3__[/* globalVariables */ "b"])();
  var makeThemeVars = Object(_library_styles_styleUtils__WEBPACK_IMPORTED_MODULE_1__[/* variableFactory */ "e"])("blockQuote");
  var colors = makeThemeVars("colors", {
    fg: globalVars.mainColors.fg,
    border: {
      color: globalVars.mixBgAndFg(0.23)
    }
  });
  return {
    colors: colors
  };
});
var blockQuoteCSS = Object(_library_styles_themeCache__WEBPACK_IMPORTED_MODULE_2__[/* useThemeCache */ "c"])(function () {
  var globalVars = Object(_library_styles_globalStyleVars__WEBPACK_IMPORTED_MODULE_3__[/* globalVariables */ "b"])();
  var vars = blockQuoteVariables();
  Object(_library_styles_styleShim__WEBPACK_IMPORTED_MODULE_4__[/* cssRule */ "b"])(".blockquote", _objectSpread({
    display: "block",
    margin: Object(_library_styles_styleUnit__WEBPACK_IMPORTED_MODULE_7__[/* styleUnit */ "a"])(0)
  }, _library_styles_Mixins__WEBPACK_IMPORTED_MODULE_9__[/* Mixins */ "a"].padding({
    all: 3,
    left: 18
  }), {
    borderLeft: Object(_library_styles_styleHelpersBorders__WEBPACK_IMPORTED_MODULE_6__[/* singleBorder */ "b"])({
      color: vars.colors.border.color,
      width: 6
    }),
    boxSizing: "border-box",
    verticalAlign: "middle"
  }));
  Object(_library_styles_styleShim__WEBPACK_IMPORTED_MODULE_4__[/* cssRule */ "b"])(".blockquote-content", _objectSpread({}, {
    "& > *:first-child": {
      marginTop: Object(_library_styles_styleUnit__WEBPACK_IMPORTED_MODULE_7__[/* styleUnit */ "a"])(0)
    },
    "& > *:last-child": {
      marginBottom: Object(_library_styles_styleUnit__WEBPACK_IMPORTED_MODULE_7__[/* styleUnit */ "a"])(0)
    }
  }));
  Object(_dashboard_compatibilityStyles_cssOut__WEBPACK_IMPORTED_MODULE_8__[/* cssOut */ "a"])(".embedLink-excerpt", {
    color: _library_styles_ColorsUtils__WEBPACK_IMPORTED_MODULE_5__[/* ColorsUtils */ "a"].colorOut(globalVars.mainColors.fg)
  });
});

/***/ }),

/***/ 195:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return EmbedMenuContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmbedMenu; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _rich_editor_editor_pieces_embedMenuStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(127);
/* harmony import */ var _rich_editor_editor_pieces_EditorEventWall__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(128);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_5__);



/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */




var EmbedMenuContext = Object(react__WEBPACK_IMPORTED_MODULE_2__["createContext"])({
  selected: undefined,
  setSelected: function setSelected() {}
});

/**
 * Renders an embed menu and manages it's context.
 */
function EmbedMenu(props) {
  var _classNames;

  var children = props.children;
  var classes = Object(_rich_editor_editor_pieces_embedMenuStyles__WEBPACK_IMPORTED_MODULE_3__[/* embedMenuClasses */ "a"])();

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(),
      _useState2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(_useState, 2),
      selected = _useState2[0],
      setSelected = _useState2[1];

  var menuRef = Object(react__WEBPACK_IMPORTED_MODULE_2__["useRef"])(null);
  return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(EmbedMenuContext.Provider, {
    value: {
      selected: selected,
      setSelected: setSelected
    }
  }, react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_rich_editor_editor_pieces_EditorEventWall__WEBPACK_IMPORTED_MODULE_4__[/* EditorEventWall */ "a"], null, react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    role: "toolbar",
    ref: menuRef,
    className: classnames__WEBPACK_IMPORTED_MODULE_5___default()((_classNames = {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_classNames, classes.root, true), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_classNames, "isOpened", selected != null), _classNames))
  }, children)));
}

/***/ }),

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ localeStore_setCurrentLocale; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ getCurrentLocale; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ getJSLocaleKey; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ loadLocales; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ translationDebug; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ loadTranslations; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ translate; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ t; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ LocaleProvider; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ ContentTranslationProvider_ContentTranslationProvider; });

// UNUSED EXPORTS: LocaleDisplayer, getLocales, onLocaleChange, clearLocales, clearTranslations, useLocaleInfo, useContentTranslator, TranslationPropertyType, NullContentTranslator

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(8);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__(32);

// CONCATENATED MODULE: ./packages/vanilla-i18n/src/localeStore.ts


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var localeStore_currentLocale = "en";
var localeStore = [];
var callbacks = [];
/**
 * Get the available locales.
 */

function getLocales() {
  return localeStore;
}
/**
 * Register a handler for if the locales change.
 * @param callback
 */

function onLocaleChange(callback) {
  callbacks.push(callback);
}
/**
 * Set the current locale.
 */

function localeStore_setCurrentLocale(localeKey) {
  localeStore_currentLocale = localeKey;
  callbacks.forEach(function (callback) {
    return callback();
  });
}
/**
 * Get the current locale.
 */

function getCurrentLocale() {
  return localeStore_currentLocale;
}
/**
 * Get the current locale in format accepted by Javascript localization functions.
 *
 * PHP canonicalized locales use `_` for the regional separator.
 * Javascript uses `-`.
 */

function getJSLocaleKey() {
  return localeStore_currentLocale.replace("_", "-");
}
/**
 * Load a group of locales.
 */

function loadLocales(locales) {
  localeStore = [].concat(Object(toConsumableArray["a" /* default */])(localeStore), Object(toConsumableArray["a" /* default */])(locales));
  callbacks.forEach(function (callback) {
    return callback();
  });
}
/**
 * Clear the loaded locales.
 */

function clearLocales() {
  localeStore = [];
  callbacks.forEach(function (callback) {
    return callback();
  });
}
// EXTERNAL MODULE: ./packages/vanilla-utils/index.ts + 7 modules
var vanilla_utils = __webpack_require__(10);

// CONCATENATED MODULE: ./packages/vanilla-i18n/src/LocaleProvider.tsx


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */



var LocaleContext = react_default.a.createContext({
  locales: [],
  currentLocale: null
});
function LocaleProvider(props) {
  var _useState = Object(react["useState"])(getLocales()),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      locales = _useState2[0],
      setLocales = _useState2[1];

  var _useState3 = Object(react["useState"])(getCurrentLocale()),
      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),
      currentLocale = _useState4[0],
      setCurrentLocale = _useState4[1];

  if (!currentLocale) {
    Object(vanilla_utils["n" /* logWarning */])("No locale loaded for <LocaleProvider />");
  }

  Object(react["useEffect"])(function () {
    setLocales(getLocales());
    setCurrentLocale(getCurrentLocale());
    onLocaleChange(function () {
      setLocales(getLocales());
      setCurrentLocale(getCurrentLocale());
    });
  }, [setLocales, setCurrentLocale]);
  return react_default.a.createElement(LocaleContext.Provider, {
    value: {
      locales: locales,
      currentLocale: currentLocale
    }
  }, props.children);
}
function useLocaleInfo() {
  return Object(react["useContext"])(LocaleContext);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/vanilla-i18n/src/translationStore.ts


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

var translationStore = null;
var internalTranslationDebugValue = false;
/**
 * Get or set the debug flag.
 *
 * @param newValue - The new value of debug.
 * @returns the current debug setting.
 */

function translationDebug(newValue) {
  if (newValue !== undefined) {
    internalTranslationDebugValue = newValue;
  }

  return internalTranslationDebugValue;
}
/**
 * Load a set of key value pairs as translation resources.
 */

function loadTranslations(translations) {
  translationStore = _objectSpread({}, translations);
}
/**
 * Clear all translation resources.
 */

function clearTranslations() {
  translationStore = null;
}
/**
 * Translate a string into the current locale.
 *
 * @param str - The string to translate.
 * @param defaultTranslation - The default translation to use.
 *
 * @returns Returns the translation or the default.
 */

function translate(str, defaultTranslation) {
  // Codes that begin with @ are considered literals.
  if (str.substr(0, 1) === "@") {
    return str.substr(1);
  }

  var fallback = defaultTranslation !== undefined ? defaultTranslation : str;

  if (!translationStore) {
    // Test environment allows top level static initialization.
    var message = "Attempted to translate a value '".concat(str, "' before the translation store was initialized.");

    switch ("production") {
      case "production":
        Object(vanilla_utils["n" /* logWarning */])(message);
        break;

      case "development":
        throw new Error(message + " Don't use t() in the top level of a file or a static property.");

      case "test":
        // Tests (like storybook and unit testing) don't need to actually bootstrap a full translation store all the time.
        break;
    }

    return fallback;
  }

  if (translationStore[str] !== undefined) {
    return translationStore[str];
  }

  if (translationDebug()) {
    return "☢️☢️☢️" + fallback + "☢️☢️☢️";
  } else {
    return fallback;
  }
}
/**
 * The t function is an alias for translate.
 */

var t = translate;
// CONCATENATED MODULE: ./packages/vanilla-i18n/src/LocaleDisplayer.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license Proprietary
 */




/**
 * Component for displaying a locale translated into a different locale.
 *
 * Currently this relies on the subcommuntiies endpoint to provide all translations for active locale.s
 */
function LocaleDisplayer(props) {
  var _useLocaleInfo = useLocaleInfo(),
      locales = _useLocaleInfo.locales,
      currentLocale = _useLocaleInfo.currentLocale;

  if (!currentLocale) {
    return null;
  }

  var selectedLocale = null;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = locales[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var locale = _step.value;

      if (locale.localeKey === props.localeContent) {
        selectedLocale = locale;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (!selectedLocale) {
    return react_default.a.createElement("span", {
      lang: props.displayLocale
    }, "Unknown Language ", props.localeContent);
  }

  var fullLocaleName = selectedLocale.displayNames[props.displayLocale || currentLocale];

  if (!fullLocaleName) {
    fullLocaleName = translate(props.localeContent);
  }

  return react_default.a.createElement("span", {
    lang: props.displayLocale
  }, fullLocaleName);
}
// CONCATENATED MODULE: ./packages/vanilla-i18n/src/ContentTranslator.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

// Subtypes
var TranslationPropertyType;

(function (TranslationPropertyType) {
  TranslationPropertyType["TEXT"] = "text";
  TranslationPropertyType["TEXT_MULTILINE"] = "";
})(TranslationPropertyType || (TranslationPropertyType = {}));

var ContentTranslator_NullContentTranslator = function NullContentTranslator(props) {
  Object(vanilla_utils["m" /* logError */])("Rendering a Null Content translator. Be sure to check `shouldDisplay` before rendering.");
  return null;
};
// CONCATENATED MODULE: ./packages/vanilla-i18n/src/ContentTranslationProvider.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */



var context = react_default.a.createContext({
  shouldDisplay: false,
  Translator: ContentTranslator_NullContentTranslator
});
var _TranslationComponent = null;
/**
 * Provider of the translation component.
 */

var ContentTranslationProvider_ContentTranslationProvider = function ContentTranslationProvider(props) {
  var _useLocaleInfo = useLocaleInfo(),
      locales = _useLocaleInfo.locales;

  return react_default.a.createElement(context.Provider, {
    value: {
      shouldDisplay: _TranslationComponent !== null && locales.length > 1,
      Translator: _TranslationComponent !== null ? _TranslationComponent : ContentTranslator_NullContentTranslator
    }
  }, props.children);
};

ContentTranslationProvider_ContentTranslationProvider.setTranslator = function (Translator) {
  _TranslationComponent = Translator;
};

function useContentTranslator() {
  return Object(react["useContext"])(context);
}
// CONCATENATED MODULE: ./packages/vanilla-i18n/src/index.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */







/***/ }),

/***/ 26:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ convertToSafeEmojiCharacters; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ EscapeListener_EscapeListener; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ delegateEvent; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ FocusWatcher_FocusWatcher; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ escapeHTML; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ ensureScript; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ prepareShadowRoot; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ TabHandler_TabHandler; });

// UNUSED EXPORTS: getFormData, toggleAttribute, setData, getData, isEmojiSupported, removeDelegatedEvent, removeAllDelegatedEvents, getDraggedFile, getPastedFile, unescapeHTML, browserEscapesNoScript, ensureHtmlElement, hideElement, unhideElement, elementIsVisible, getElementHeight

// EXTERNAL MODULE: ./node_modules/focus-visible/dist/focus-visible.js
var focus_visible = __webpack_require__(124);

// EXTERNAL MODULE: ./node_modules/smoothscroll-polyfill/dist/smoothscroll.js
var smoothscroll = __webpack_require__(70);
var smoothscroll_default = /*#__PURE__*/__webpack_require__.n(smoothscroll);

// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/domData.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Get the form data out of a form element.
 *
 * @param formElement - The element to get the data out of.
 *
 * @returns {Object}
 */
function getFormData(formElement) {
  if (!(formElement instanceof HTMLFormElement)) {
    return {};
  }

  var data = new FormData(formElement);
  var result = {};
  data.forEach(function (key, value) {
    result[key] = value;
  });
  return result;
}
/**
 * Toggle any attribute on an element.
 *
 * @param element - The element to toggle on.
 * @param attribute - The attribute to toggle.
 */

function toggleAttribute(element, attribute) {
  var newValue = element.getAttribute(attribute) === "false";
  element.setAttribute(attribute, newValue ? "true" : "false");
}
var dataMap = new WeakMap();
/**
 * Set a piece of data specific to a DOM Element. Similar to `$.data`.
 *
 * @param element - The DOM Element to assosciate the data with.
 * @param key - The key to assosciate the data with.
 * @param value - The value to store.
 */

function setData(element, key, value) {
  var initialValue = dataMap.has(element) ? dataMap.get(element) : {};
  initialValue[key] = value;
  dataMap.set(element, initialValue);
}
/**
 * Get a piece of data specific to a DOM Element. Similar to `$.data`.
 *
 * @param element - The DOM Element to lookup.
 * @param key - The key to lookup.
 * @param defaultValue - A value to use if the element or key aren't found.
 */

function getData(element, key, defaultValue) {
  if (dataMap.has(element) && dataMap.get(element)[key]) {
    return dataMap.get(element)[key];
  }

  var attributeString = "data-".concat(key);

  if (element.hasAttribute(attributeString)) {
    return element.getAttribute(attributeString);
  }

  return defaultValue;
}
// EXTERNAL MODULE: ./node_modules/twemoji/2/twemoji.npm.js
var twemoji_npm = __webpack_require__(71);
var twemoji_npm_default = /*#__PURE__*/__webpack_require__.n(twemoji_npm);

// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/emoji.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

var emojiSupportedCache = null;
/**
 * Determine if the browser/OS combo has support for real unicode emojis.
 */

function isEmojiSupported() {
  if (emojiSupportedCache !== null) {
    return emojiSupportedCache;
  }

  if (true) {
    // Test environment
    var canvas = document.createElement("canvas");

    if (canvas.getContext && canvas.getContext("2d")) {
      var ctx = document.createElement("canvas").getContext("2d");

      if (ctx) {
        ctx.fillText("😗", -2, 4);
        emojiSupportedCache = ctx.getImageData(0, 0, 1, 1).data[3] > 0;
      } else {
        emojiSupportedCache = false;
      }
    } else {
      emojiSupportedCache = false;
    }
  } else {}

  return emojiSupportedCache;
}
var emojiOptions = {
  className: "fallBackEmoji",
  size: "72x72"
};
/**
 * Returns either native emoji or fallback image
 *
 * @param stringOrNode - A DOM Node or string to convert.
 */

function convertToSafeEmojiCharacters(stringOrNode) {
  if (isEmojiSupported()) {
    return stringOrNode;
  }

  return twemoji_npm_default.a.parse(stringOrNode, emojiOptions);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(14);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/EscapeListener.ts



/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Register an keyboard listener for the escape key.
 */
var EscapeListener_EscapeListener =
/**
 * @param root - The element to watch for the escape listener in.
 * @param returnElement - The element to return to when escape is pressed.
 * @param callback
 */
function EscapeListener(root, returnElement, callback) {
  var _this = this;

  Object(classCallCheck["a" /* default */])(this, EscapeListener);

  this.root = root;
  this.returnElement = returnElement;
  this.callback = callback;

  Object(defineProperty["a" /* default */])(this, "start", function () {
    _this.root.addEventListener("keydown", _this.keydownListener);
  });

  Object(defineProperty["a" /* default */])(this, "stop", function () {
    _this.root.removeEventListener("keydown", _this.keydownListener);
  });

  Object(defineProperty["a" /* default */])(this, "keydownListener", function (event) {
    if (event.key === "Escape") {
      if (_this.root.contains(document.activeElement)) {
        event.preventDefault();
        _this.returnElement && _this.returnElement.focus();
        _this.callback && _this.callback(event);
      }
    }
  });
}
/**
 * Start the listeners.
 */
;
// EXTERNAL MODULE: ./packages/vanilla-utils/index.ts + 7 modules
var vanilla_utils = __webpack_require__(10);

// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/events.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

var delegatedEventListeners = {};
/**
 * Create an event listener using event delegation.
 *
 * @param eventName - The Event to listen for.
 * @param filterSelector - A CSS selector to match against.
 * @param callback - The callback function. This gets passed the fired event.
 * @param scopeSelector - And element to scope the event listener to.
 *
 * @returns The hash of the event. Save this to use removeDelegatedEvent().
 */

function delegateEvent(eventName, filterSelector, callback, scopeSelector) {
  var functionKey = eventName + filterSelector + callback.toString();
  var scope;

  if (typeof scopeSelector === "string") {
    scope = document.querySelector(scopeSelector);

    if (!scope) {
      throw new Error("Unable to find element in the document for scopeSelector: ".concat(scopeSelector));
    } else {
      functionKey += scopeSelector;
    }
  } else if (scopeSelector instanceof HTMLElement) {
    scope = scopeSelector;
  } else {
    scope = document;
  }

  var eventHash = Object(vanilla_utils["h" /* hashString */])(functionKey).toString();

  if (!Object.keys(delegatedEventListeners).includes(eventHash)) {
    var wrappedCallback = function wrappedCallback(event) {
      // Get the nearest DOMNode that matches the given selector.
      var match = filterSelector ? event.target.closest(filterSelector) : event.target;

      if (match) {
        // Call the callback with the matching element as the context.
        return callback.call(match, event, match);
      }
    };

    scope.addEventListener(eventName, wrappedCallback);
    delegatedEventListeners[eventHash] = {
      scope: scope,
      eventName: eventName,
      wrappedCallback: wrappedCallback
    };
  }

  return eventHash;
}
/**
 * Remove a delegated event listener.
 *
 * @param eventHash - The event hash passed from delegateEvent().
 */

function removeDelegatedEvent(eventHash) {
  if (delegatedEventListeners[eventHash]) {
    var _delegatedEventListen = delegatedEventListeners[eventHash],
        scope = _delegatedEventListen.scope,
        eventName = _delegatedEventListen.eventName,
        wrappedCallback = _delegatedEventListen.wrappedCallback;
    scope.removeEventListener(eventName, wrappedCallback);
    delete delegatedEventListeners[eventHash];
  }
}
/**
 * Remove all delegated event listeners that have been registered.
 */

function removeAllDelegatedEvents() {
  Object.keys(delegatedEventListeners).forEach(function (key) {
    removeDelegatedEvent(key);
  });
}
/**
 * Handler for files being dragged and dropped.
 *
 * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent
 */

function getDraggedFile(event) {
  if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {
    event.preventDefault();
    return event.dataTransfer.files;
  }
}
/**
 * Handler for files being pasted.
 *
 * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent
 */

function getPastedFile(event) {
  if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {
    var files = Array.from(event.clipboardData.items).map(function (item) {
      return item.getAsFile ? item.getAsFile() : null;
    }).filter(Boolean);

    if (files.length > 0) {
      event.preventDefault(); // Currently only 1 file is supported.

      var mainFile = files[0];
      return mainFile;
    }
  }
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(17);

// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/FocusWatcher.ts




/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Register a callback for focusin and focusin out events. The main improvement here over registering
 * the listeners yourself is that the events fire for the whole tree as 1 item instead of as
 * individual notes.
 *
 * This is particularly useful when you want to track focus leaving or enterring a component
 * without caring about the individual contents inside.
 */
var FocusWatcher_FocusWatcher =
/*#__PURE__*/
function () {
  /**
   * @param watchedNode - The watched dom node.
   * @param callback - A callback for when the tree focuses and blurs.
   */
  function FocusWatcher(watchedNode, changeHandler) {
    var _this = this;

    Object(classCallCheck["a" /* default */])(this, FocusWatcher);

    this.watchedNode = watchedNode;
    this.changeHandler = changeHandler;

    Object(defineProperty["a" /* default */])(this, "start", function () {
      _this.watchedNode.addEventListener("focusout", _this.handleFocusOut, true);

      _this.watchedNode.addEventListener("focusin", _this.handleFocusIn, true);

      document.addEventListener("click", _this.handleClick);
    });

    Object(defineProperty["a" /* default */])(this, "stop", function () {
      _this.watchedNode.removeEventListener("focusout", _this.handleFocusOut, true);

      _this.watchedNode.removeEventListener("focusin", _this.handleFocusIn, true);

      document.removeEventListener("click", _this.handleClick);
    });

    Object(defineProperty["a" /* default */])(this, "handleFocusOut", function (event) {
      _this.checkDomTreeHasFocus(event, _this.changeHandler);
    });

    Object(defineProperty["a" /* default */])(this, "handleFocusIn", function (event) {
      _this.checkDomTreeHasFocus(event, _this.changeHandler);
    });

    Object(defineProperty["a" /* default */])(this, "handleClick", function (event) {
      var triggeringElement = event.target;

      var wasClicked = _this.checkDomTreeWasClicked(triggeringElement);

      if (!wasClicked) {
        _this.changeHandler(false);
      }
    });
  }
  /**
   * Register the event listeners from this class.
   */


  Object(createClass["a" /* default */])(FocusWatcher, [{
    key: "checkDomTreeWasClicked",

    /**
     * Determine whether or not our DOM tree was clicked.
     */
    value: function checkDomTreeWasClicked(clickedElement) {
      return this.watchedNode && clickedElement && (this.watchedNode.contains(clickedElement) || this.watchedNode === clickedElement);
    }
    /**
     * Determine if the currently focused element is somewhere inside of (or the same as)
     * a given Element.
     *
     * @param watchedNode - The watched node to look in.
     */

  }, {
    key: "checkDomTreeHasFocus",
    value: function checkDomTreeHasFocus(event, callback) {
      var _this2 = this;

      setTimeout(function () {
        var possibleTargets = [// NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.
        document.activeElement, // IE11, Safari.
        event.relatedTarget, // Chrome (The actual standard)
        event.explicitOriginalTarget // Firefox
        ];
        var activeElement = null;

        for (var _i = 0, _possibleTargets = possibleTargets; _i < _possibleTargets.length; _i++) {
          var target = _possibleTargets[_i];

          if (target && target !== document.body) {
            activeElement = target;
            break;
          }
        }

        if (activeElement !== null) {
          var _document$getElementB;

          var isWatchedInBody = document.body.contains(_this2.watchedNode);
          var isFocusedInBody = document.body.contains(activeElement);
          var isModal = Boolean((_document$getElementB = document.getElementById("modals")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.contains(activeElement));

          var _hasFocus = Boolean(_this2.watchedNode && activeElement && (activeElement === _this2.watchedNode || _this2.watchedNode.contains(activeElement))); // We will only invalidate based on something actually getting focus.
          // Make sure we are still mounted before calling this.
          // It could happen that our flyout is unmounted in between the setTimeout call.
          // We might have focused on a modal which can't be in the watched tree.


          if (isWatchedInBody && isFocusedInBody) {
            callback(_hasFocus || isModal);
          }
        }
      }, 0);
    }
  }]);

  return FocusWatcher;
}();
// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/sanitization.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Use the browser's built-in functionality to quickly and safely escape a string.
 *
 * @param str - The string to escape.
 *
 * @returns Escaped HTML.
 */
function escapeHTML(str) {
  var div = document.createElement("div");
  div.appendChild(document.createTextNode(str));
  return div.innerHTML;
}
/**
 * Use the browser's built-in functionality to quickly unescape a string.
 * UNSAFE with unsafe strings; only use on previously-escaped ones!
 *
 * @param escapedString - A previously escaped string.
 *
 * @returns The unescaped string.
 */

function unescapeHTML(escapedString) {
  var div = document.createElement("div");
  div.innerHTML = escapedString;
  var child = div.childNodes[0];
  return child && child.nodeValue ? child.nodeValue : "";
}
/**
 * Determine if the browser is escaping the inner contents of our <noscript /> browser.
 */

function browserEscapesNoScript() {
  var ns = document.createElement("noscript");
  ns.innerHTML = "<test></test>";
  document.body.append(ns);
  var result = ns.innerHTML.startsWith("&lt;");
  ns.remove();
  return result;
}
/**
 * Get an HTML element from a CSS selector or DOM Node.
 *
 * @param selectorOrElement - A CSS selector or an HTML element.
 *
 * @throws If no element was found.
 * @returns An HTMLElement no matter what.
 */

function ensureHtmlElement(selectorOrElement) {
  if (typeof selectorOrElement === "string") {
    selectorOrElement = document.querySelector(selectorOrElement);
  }

  if (!(selectorOrElement instanceof HTMLElement)) {
    throw new Error("HTMLElement could not be found for ".concat(selectorOrElement, "."));
  }

  return selectorOrElement;
}
// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/scripts.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
// A weakmap so we can store multiple load callbacks per script.
var loadEventCallbacks = new WeakMap();
var rejectionCache = new Map();
/**
 * Dynamically load a javascript file.
 */

function ensureScript(scriptUrl) {
  return new Promise(function (resolve, reject) {
    var existingScript = document.querySelector("script[src='".concat(scriptUrl, "']"));

    if (rejectionCache.has(scriptUrl)) {
      reject(rejectionCache.get(scriptUrl));
    }

    if (existingScript && loadEventCallbacks.has(existingScript)) {
      // Add another resolveCallback into the weakmap.
      var callbacks = loadEventCallbacks.get(existingScript);
      callbacks && callbacks.push(resolve);
    } else {
      // The script doesn't exist. Lets create it.
      var head = document.getElementsByTagName("head")[0];
      var script = document.createElement("script");
      script.type = "text/javascript";
      script.src = scriptUrl;

      script.onerror = function (event) {
        var error = new Error("Failed to load a required embed script");
        rejectionCache.set(scriptUrl, error);
        reject(error);
      };

      var timeout = setTimeout(function () {
        var error = new Error("Loading of the script ".concat(scriptUrl, " has timed out."));
        rejectionCache.set(scriptUrl, error);
        reject(error);
      }, 10000);
      loadEventCallbacks.set(script, [resolve]);

      script.onload = function (event) {
        clearTimeout(timeout);
        var callbacks = loadEventCallbacks.get(script);
        callbacks && callbacks.forEach(function (callback) {
          return callback(event);
        });
        loadEventCallbacks.delete(script);
      };

      head.appendChild(script);
    }
  });
}
// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/shadowDom.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Prepare an element and it's contents for use in a shadow root.
 *
 * @param element
 * @param cloneElement - If true, clone the element into a `newElementTag`. Preserves CSS classes and IDs.
 *      Particularly useful for when the initial content is inside of a <noscript /> tag.
 * @param newElementTag
 */

function prepareShadowRoot(element) {
  var cloneElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var newElementTag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "div";
  var html = element.innerHTML; // This is likely a noscript tag.

  if (browserEscapesNoScript() || html.trim().startsWith("&lt;")) {
    html = unescapeHTML(html);
  } // Safari escapes the contents of the noscript.


  if (cloneElement) {
    var newElement = document.createElement(newElementTag); // Clone various attributes.

    newElement.classList.value = element.classList.value;
    newElement.id = element.id; // Insert the element & remove the old old.

    element.parentNode.insertBefore(newElement, element);
    element.remove();
    element = newElement;
  } else {
    // If we aren't making a new real root, we need to empty it out.
    // Otherwise we'll have duplicate contents.
    element.innerHTML = "";
  }

  var shadowHeader = element.attachShadow({
    mode: "open"
  });
  shadowHeader.innerHTML = html;
  return element;
}
// EXTERNAL MODULE: ./node_modules/tabbable/index.js
var tabbable = __webpack_require__(54);
var tabbable_default = /*#__PURE__*/__webpack_require__.n(tabbable);

// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/TabHandler.ts




/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * A class for handling tabbing inside of a container with various exclusions.
 *
 * The goal is here is to be able to programatically implement various tabbing behaviours
 * required for accessibility.
 */

var TabHandler_TabHandler =
/*#__PURE__*/
function () {
  Object(createClass["a" /* default */])(TabHandler, null, [{
    key: "isTabbable",

    /**
     * Determine if an element is tabbable.
     */
    value: function isTabbable(element) {
      var children = tabbable_default()(element.parentNode);
      return children.includes(element);
    }
    /**
     * Construct the handler. Don't be afraid to construct multiple of these.
     *
     * The elements in a particular TabHandler are very moment specific.
     * If the DOM changes underneath it it will likely no longer be valid.
     *
     * @param root - The root element to look in.
     * @param excludedElements - Elements to ignore.
     * @param excludedRoots - These element's children will be ignored.
     */

  }]);

  function TabHandler() {
    var _this = this;

    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.documentElement;
    var excludedElements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var excludedRoots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    Object(classCallCheck["a" /* default */])(this, TabHandler);

    this.excludedElements = excludedElements;
    this.excludedRoots = excludedRoots;

    Object(defineProperty["a" /* default */])(this, "tabbableElements", void 0);

    Object(defineProperty["a" /* default */])(this, "createExcludeFilterWithExemption", function (exemption) {
      return function (elementToFilter) {
        var elementIsActiveOrChildOfActive = exemption === elementToFilter || elementToFilter.contains(exemption);

        if (!elementIsActiveOrChildOfActive) {
          if (_this.excludedElements.includes(elementToFilter)) {
            return false;
          }

          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = _this.excludedRoots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var excludedRoot = _step.value;

              if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {
                return false;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }

        return true;
      };
    });

    Object(defineProperty["a" /* default */])(this, "filterAllExcluded", function (elementToFilter) {
      if (_this.excludedElements.includes(elementToFilter)) {
        return false;
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = _this.excludedRoots[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var excludedRoot = _step2.value;

          if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {
            return false;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return true;
    });

    this.tabbableElements = tabbable_default()(root);
  }
  /**
   * Get the next tabbable item within a given tabindex.
   *
   * WARNING: Performance can be poor if you pass many excluded roots and do not
   * sufficiently narrow the tree your are looking in.
   *
   * @param from - The currently focused element.
   * @param reverse - True to get the previous element instead.
   * @param allowLooping - Whether or not the focus should loop around from beginning <-> end.
   */


  Object(createClass["a" /* default */])(TabHandler, [{
    key: "getNext",
    value: function getNext() {
      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.activeElement;
      var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var allowLooping = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

      if (!(from instanceof HTMLElement)) {
        Object(vanilla_utils["m" /* logError */])("Unable to tab to next element, `fromElement` given is not valid: ", from);
        return null;
      }

      var tabbables = this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));
      var currentTabIndex = tabbables.indexOf(from);

      if (currentTabIndex < 0) {
        return null;
      }

      var targetIndex = reverse ? currentTabIndex - 1 : currentTabIndex + 1;

      if (allowLooping) {
        // Loop over the beginning and ends
        if (targetIndex < 0) {
          targetIndex = tabbables.length - 1;
        } else if (targetIndex >= tabbables.length) {
          targetIndex = 0;
        }
      }

      return tabbables[targetIndex] || null;
    }
    /**
     * Get all.
     */

  }, {
    key: "getAll",
    value: function getAll() {
      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.activeElement;

      if (!(from instanceof HTMLElement)) {
        Object(vanilla_utils["m" /* logError */])("Unable to tab to next element, `fromElement` given is not valid: ", from);
        return null;
      }

      return this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));
    }
    /**
     * Get the first focusable element.
     */

  }, {
    key: "getInitial",
    value: function getInitial() {
      var tabbables = this.tabbableElements.filter(this.filterAllExcluded);

      if (tabbables.length > 0) {
        return tabbables[0];
      } else {
        return null;
      }
    }
    /**
     * Get the last focusable element.
     */

  }, {
    key: "getLast",
    value: function getLast() {
      var tabbables = this.tabbableElements.filter(this.filterAllExcluded);

      if (tabbables.length > 0) {
        return tabbables[tabbables.length - 1];
      } else {
        return null;
      }
    }
    /**
     * Filter out all excluded elements. Allows 1 element and its parents to be exempted.
     *
     * The exemption is necessary so we can find our place
     * if the focus is already in an item that we are trying to exclude.
     *
     * @returns A filter for use with [].filter()
     */

  }]);

  return TabHandler;
}();
// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/visibility.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Add the hidden class and aria-hidden attribute to an Element.
 *
 * @param element - The DOM Element to modify.
 */
function hideElement(element) {
  element.classList.add("u-isHidden");
  element.setAttribute("aria-hidden", "true");
}
/**
 * Remove the hidden class and aria-hidden attribute to an Element.
 *
 * @param element - The DOM Element to modify.
 */

function unhideElement(element) {
  element.classList.remove("u-isHidden");
  element.removeAttribute("aria-hidden");
}
/**
 * Check if an element is visible or not.
 *
 * @param element - The element to check.
 *
 * @returns The visibility.
 */

function elementIsVisible(element) {
  return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);
}
/**
 * Calculate the height of element with simulated margin collapse.
 *
 * This is ideal for getting the calculate height of a fixed number of items. (not the entire parent).
 *
 * It considers:
 * - Element height
 * - Padding
 * - Borders
 * - Margins
 * - Margin collapsing.
 *
 * @param element - The element to measure
 * @param previousBottomMargin - The bottom margin of the previous element. You can use the returned bottom margin from this function to get this.
 */

function getElementHeight(element) {
  var previousBottomMargin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var height = element.getBoundingClientRect().height;

  var _window$getComputedSt = window.getComputedStyle(element),
      marginTop = _window$getComputedSt.marginTop,
      marginBottom = _window$getComputedSt.marginBottom;

  var topHeight = marginTop ? parseInt(marginTop, 10) : 0; // Simulate a margin-collapsed height.

  topHeight = Math.max(topHeight - previousBottomMargin, 0);
  var bottomHeight = marginBottom ? parseInt(marginBottom, 10) : 0;
  var finalHeight = height + topHeight + bottomHeight;
  return {
    height: finalHeight,
    bottomMargin: bottomHeight
  };
}
// CONCATENATED MODULE: ./packages/vanilla-dom-utils/src/index.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
// Some polyfills


smoothscroll_default.a.polyfill();











/***/ }),

/***/ 272:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageEmbedModal; });
/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var _library_forms_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43);
/* harmony import */ var _library_forms_buttonTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27);
/* harmony import */ var _library_forms_InputTextBlock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(136);
/* harmony import */ var _library_layout_frame_FrameBody__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(137);
/* harmony import */ var _library_layout_frame_FrameFooter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(139);
/* harmony import */ var _library_utility_appUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6);
/* harmony import */ var _rich_editor_editor_pieces_EditorEventWall__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(128);
/* harmony import */ var _rich_editor_editor_pieces_embedMenuStyles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(127);
/* harmony import */ var _vanilla_library_src_scripts_layout_frame_Frame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(140);
/* harmony import */ var _vanilla_library_src_scripts_layout_frame_FrameHeader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(117);
/* harmony import */ var _vanilla_library_src_scripts_modal_Modal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(143);
/* harmony import */ var _vanilla_library_src_scripts_modal_ModalSizes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(46);
/* harmony import */ var _vanilla_library_src_scripts_utility_idUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(33);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_14__);


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */















/**
 * A class for rendering Giphy embeds.
 */
function ImageEmbedModal(props) {
  var classes = Object(_rich_editor_editor_pieces_embedMenuStyles__WEBPACK_IMPORTED_MODULE_8__[/* embedMenuClasses */ "a"])();

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_14__["useState"])(props.initialAlt),
      _useState2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useState, 2),
      alt = _useState2[0],
      setAlt = _useState2[1];

  var inputRef = Object(react__WEBPACK_IMPORTED_MODULE_14__["useRef"])(null);
  var handleTextChange = Object(react__WEBPACK_IMPORTED_MODULE_14__["useCallback"])(function (event) {
    if (event) {
      event.stopPropagation();
      event.preventDefault();
      setAlt(event.target.value || "");
    }
  }, []); // Focus the input when opened.

  Object(react__WEBPACK_IMPORTED_MODULE_14__["useEffect"])(function () {
    var _inputRef$current;

    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
  }, []);

  var saveAndClose = function saveAndClose() {
    setAlt(alt);
    props.onSave({
      alt: alt
    });
    props.onClose();
  };

  var titleID = Object(_vanilla_library_src_scripts_utility_idUtils__WEBPACK_IMPORTED_MODULE_13__[/* useUniqueID */ "d"])("modalTitle");
  return react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_vanilla_library_src_scripts_modal_Modal__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"], {
    isVisible: props.isVisible,
    size: _vanilla_library_src_scripts_modal_ModalSizes__WEBPACK_IMPORTED_MODULE_12__[/* default */ "a"].SMALL,
    titleID: titleID,
    exitHandler: props.onClose
  }, react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_rich_editor_editor_pieces_EditorEventWall__WEBPACK_IMPORTED_MODULE_7__[/* EditorEventWall */ "a"], null, react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement("form", {
    className: classes.form
  }, react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_vanilla_library_src_scripts_layout_frame_Frame__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"], {
    header: react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_vanilla_library_src_scripts_layout_frame_FrameHeader__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"], {
      title: Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_6__[/* t */ "k"])("Alt Text"),
      titleID: titleID,
      closeFrame: saveAndClose
    }),
    body: react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_library_layout_frame_FrameBody__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], {
      className: classes.verticalPadding
    }, react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_library_forms_InputTextBlock__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], {
      label: Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_6__[/* t */ "k"])("Alternative text helps users with accessibility concerns and improves SEO."),
      labelClassName: classes.paragraph,
      inputProps: {
        required: true,
        value: alt,
        onChange: handleTextChange,
        inputRef: inputRef,
        placeholder: Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_6__[/* t */ "k"])("Example: Image of a Coffee"),
        onKeyPress: function onKeyPress(event) {
          if (event.key === "Enter") {
            event.preventDefault();
            event.stopPropagation();
            saveAndClose();
          }
        }
      }
    })),
    footer: react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_library_layout_frame_FrameFooter__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"], {
      justifyRight: true
    }, react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_library_forms_Button__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {
      baseClass: _library_forms_buttonTypes__WEBPACK_IMPORTED_MODULE_2__[/* ButtonTypes */ "a"].TEXT_PRIMARY,
      onClick: function onClick(e) {
        e.preventDefault();
        e.stopPropagation();
        saveAndClose();
      }
    }, Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_6__[/* t */ "k"])("Save")))
  }))));
}

/***/ }),

/***/ 29:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ mounting["a" /* applySharedPortalContext */]; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ mounting["c" /* mountReact */]; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ mounting["b" /* mountPortal */]; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ useDomNodeAttachment; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ DomNodeAttacher; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ useEscapeListener; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ useFocusWatcher; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ useLastValue; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ useMeasure; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ useThrowError; });

// UNUSED EXPORTS: createProvider, Hoverable, mountReactMultiple, useAsync, useAsyncFn, useCollisionDetector, useComponentDebug, useDelayedFunction, useInterval, useRouteChangePrompt, useTabKeyboardHandler, deconstructAttributesFromElement

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/createContextProvider.tsx
/**
 * @author Adam Charron <adam.c@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Create a react context, provider, and use function.
 */

function createProvider(defaultValue, valueCalculator, displayName) {
  var context = react_default.a.createContext(defaultValue);

  var useContextValue = function useContextValue() {
    Object(react["useContext"])(context);
  };

  function CreatedProvider(props) {
    var value = valueCalculator(props);
    return react_default.a.createElement(context.Provider, {
      value: value
    }, props.children);
  }

  return [CreatedProvider, useContextValue];
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(14);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(17);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(22);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(23);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(16);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__(24);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/Hoverable.tsx








/**
 * @author Adam Charron <adam.c@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * Component with render props for handling a hover after a certain duration.
 *
 * Simply spread the provided props over the element you want to track the hover of.
 *
 * @example
 * <Hoverable duration={250} onHover={myCallback}>
 *     {providedProps => {
 *          <div {...providedProps} className="someClass">
 *              // Some deeply neested child.
 *          </div>
 *     }}
 * </Hoverable>
 */
var Hoverable_Hoverable =
/*#__PURE__*/
function (_React$Component) {
  Object(inherits["a" /* default */])(Hoverable, _React$Component);

  function Hoverable() {
    var _getPrototypeOf2;

    var _this;

    Object(classCallCheck["a" /* default */])(this, Hoverable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = Object(possibleConstructorReturn["a" /* default */])(this, (_getPrototypeOf2 = Object(getPrototypeOf["a" /* default */])(Hoverable)).call.apply(_getPrototypeOf2, [this].concat(args)));

    Object(defineProperty["a" /* default */])(Object(assertThisInitialized["a" /* default */])(_this), "hoverTimeout", void 0);

    Object(defineProperty["a" /* default */])(Object(assertThisInitialized["a" /* default */])(_this), "hasExecuted", false);

    Object(defineProperty["a" /* default */])(Object(assertThisInitialized["a" /* default */])(_this), "handleHover", function (event) {
      if (_this.hasExecuted && _this.props.once) {
        return;
      }

      _this.hasExecuted = true;

      if (_this.props.onHover) {
        _this.props.onHover(event);
      }
    });

    Object(defineProperty["a" /* default */])(Object(assertThisInitialized["a" /* default */])(_this), "mouseEnterHandler", function (event) {
      _this.hoverTimeout = setTimeout(function () {
        _this.handleHover(event);
      }, _this.props.duration);
    });

    Object(defineProperty["a" /* default */])(Object(assertThisInitialized["a" /* default */])(_this), "mouseLeaveHandler", function (event) {
      _this.dismissTimeout();
    });

    return _this;
  }

  Object(createClass["a" /* default */])(Hoverable, [{
    key: "render",

    /**
     * @inheritdoc
     */
    value: function render() {
      return this.props.children({
        onMouseEnter: this.mouseEnterHandler,
        onMouseLeave: this.mouseLeaveHandler
      });
    }
    /**
     * @inheritdoc
     */

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.dismissTimeout();
    }
  }, {
    key: "dismissTimeout",

    /**
     * Cleanup timeouts and properties to reset.
     */
    value: function dismissTimeout() {
      this.hasExecuted = false;

      if (this.hoverTimeout) {
        clearTimeout(this.hoverTimeout);
      }
    }
  }]);

  return Hoverable;
}(react_default.a.Component);

Object(defineProperty["a" /* default */])(Hoverable_Hoverable, "defaultProps", {
  once: true
});
// EXTERNAL MODULE: ./packages/vanilla-react-utils/src/mounting.tsx
var mounting = __webpack_require__(66);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(8);

// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useMountedState.ts
/**
 * @author Dominic Lacaille <dominic.lacaille@vanillaforums.com>
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license gpl-2.0-only
 */

/**
 * Returns a function which returns true if the component is currently mounted.
 */

function useMountedState() {
  var mountedRef = Object(react["useRef"])(false);
  var get = Object(react["useCallback"])(function () {
    return mountedRef.current;
  }, []);
  Object(react["useEffect"])(function () {
    mountedRef.current = true;
    return function () {
      mountedRef.current = false;
    };
  });
  return get;
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useAsyncFn.ts



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @author Dominic Lacaille <dominic.lacaille@vanillaforums.com>
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license gpl-2.0-only
 */



/**
 * Uses an async function and returns a state of execution and a callback. *
 * Based on https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts
 */
function useAsyncFn(fn) {
  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var initialState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    status: "pending"
  };
  var lastCallId = Object(react["useRef"])(0);
  var isMounted = useMountedState();

  var _useState = Object(react["useState"])(initialState),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      state = _useState2[0],
      set = _useState2[1];

  var callback = Object(react["useCallback"])(function () {
    var callId = ++lastCallId.current;
    set(function (prevState) {
      return _objectSpread({}, prevState, {
        loading: true
      });
    });
    return fn.apply(void 0, arguments).then(function (data) {
      isMounted() && callId === lastCallId.current && set({
        data: data,
        status: "success"
      });
      return data;
    }, function (error) {
      isMounted() && callId === lastCallId.current && set({
        error: error,
        status: "error"
      });
      return error;
    });
  }, deps);
  return [state, callback];
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useAsync.ts


/**
 * @author Dominic Lacaille <dominic.lacaille@vanillaforums.com>
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license gpl-2.0-only
 */


/**
 * Uses an async function executed automatically.
 */

function useAsync(fn) {
  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var _useAsyncFn = useAsyncFn(fn, deps, {
    status: "loading"
  }),
      _useAsyncFn2 = Object(slicedToArray["a" /* default */])(_useAsyncFn, 2),
      state = _useAsyncFn2[0],
      callback = _useAsyncFn2[1];

  Object(react["useEffect"])(function () {
    callback();
  }, [callback]);
  return state;
}
// EXTERNAL MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.js
var ResizeObserver = __webpack_require__(90);
var ResizeObserver_default = /*#__PURE__*/__webpack_require__.n(ResizeObserver);

// EXTERNAL MODULE: ./node_modules/lodash/debounce.js
var debounce = __webpack_require__(55);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);

// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useMeasure.ts



function useMeasure_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function useMeasure_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { useMeasure_ownKeys(source, true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { useMeasure_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */



// DOMRectReadOnly.fromRect()
var EMPTY_RECT = {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  toJSON: function toJSON() {
    return "";
  }
};
/**
 * Utility hook for measuring a dom element.
 * Will return back measurements as a bounding rectangle for the element contained in a ref.
 *
 * @param ref The ref to measure.
 * @param adjustForScrollOffset If set, y values will be adjusted for the current scroll offset.
 * @param watchRef Used to trigger a remeasure if the ref changes.
 */

function useMeasure(ref) {
  var adjustForScrollOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var watchRef = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var _useState = Object(react["useState"])(EMPTY_RECT),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      bounds = _useState2[0],
      setContentRect = _useState2[1];

  var refWatch = watchRef ? ref.current : ref;
  Object(react["useLayoutEffect"])(function () {
    var animationFrameId = null;

    var measure = function measure() {
      animationFrameId = window.requestAnimationFrame(function () {
        if (!ref.current) {
          setContentRect(EMPTY_RECT);
          return;
        }

        var rect = ref.current.getBoundingClientRect();

        if (adjustForScrollOffset) {
          rect = useMeasure_objectSpread({}, rect, {
            y: rect.y + window.scrollY,
            top: rect.top + window.scrollY,
            bottom: rect.bottom + window.scrollY,
            width: rect.width,
            height: rect.height,
            right: rect.right,
            left: rect.left
          });
        }

        rect.toJSON = function () {
          return JSON.stringify({
            y: rect.y,
            top: rect.top,
            bottom: rect.bottom,
            width: rect.width,
            height: rect.height,
            right: rect.right,
            left: rect.left
          });
        };

        setContentRect(rect);
      });
    };

    var resizeListener = debounce_default()(function () {
      measure();
    }, 100);
    window.addEventListener("resize", resizeListener);
    var ro = new ResizeObserver_default.a(measure);

    if (ref.current) {
      ro.observe(ref.current);
    } else {
      setContentRect(EMPTY_RECT);
    }

    return function () {
      window.cancelAnimationFrame(animationFrameId);
      ro.disconnect();
      resizeListener.cancel();
      window.removeEventListener("resize", resizeListener);
      setContentRect(EMPTY_RECT);
    };
  }, [adjustForScrollOffset, refWatch, ref]);
  return bounds;
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useCollisionDetector.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * Detect if the edges of 2 measures are overlapping.
 *
 * If the edges are touching, but not overlapping, that doesn't count.
 */

function doRectsOverlap(rect1, rect2) {
  // For all docblocks here, [] represents rect1 and {} represents rect 2.
  if (isEmptyRect(rect1) || isEmptyRect(rect2)) {
    return false;
  }

  var hasHorizontalOverlap = false; //  [      { ]       }

  if (rect1.left <= rect2.left && rect1.right >= rect2.left) {
    hasHorizontalOverlap = true;
  } //  {    [  }   ]


  if (rect2.left <= rect1.left && rect2.right >= rect1.left) {
    hasHorizontalOverlap = true;
  } //  [   {} ]


  if (rect1.left <= rect2.left && rect1.right >= rect2.right) {
    hasHorizontalOverlap = true;
  } //  {  []   }


  if (rect2.left <= rect1.left && rect2.right >= rect1.right) {
    hasHorizontalOverlap = true;
  }

  var hasVerticalOverlap = false; // Verical version of  [      { ]       }

  if (rect1.top <= rect2.top && rect1.bottom >= rect2.top) {
    hasVerticalOverlap = true;
  } // Verical version of  {    [  }   ]


  if (rect2.top <= rect1.top && rect2.bottom >= rect1.top) {
    hasVerticalOverlap = true;
  } // Verical version of  [   {} ]


  if (rect1.top <= rect2.top && rect1.bottom >= rect2.bottom) {
    hasVerticalOverlap = true;
  } // Verical version of  {  []   }


  if (rect2.top <= rect1.top && rect2.bottom >= rect1.bottom) {
    hasVerticalOverlap = true;
  } // Both overlaps are required to make a collision.


  return hasVerticalOverlap && hasHorizontalOverlap;
}

function isEmptyRect(rect) {
  return rect.height === 0 || rect.width === 0;
}

function useCollisionDetector() {
  var collisionSourceRef = Object(react["useRef"])(null);
  var sourceMeasure = useMeasure(collisionSourceRef);
  var vBoundary1Ref = Object(react["useRef"])(null);
  var vBoundary1Measure = useMeasure(vBoundary1Ref);
  var vBoundary2Ref = Object(react["useRef"])(null);
  var vBoundary2Measure = useMeasure(vBoundary2Ref);
  var hBoundary1Ref = Object(react["useRef"])(null);
  var hBoundary1Measure = useMeasure(hBoundary1Ref);
  var hBoundary2Ref = Object(react["useRef"])(null);
  var hBoundary2Measure = useMeasure(hBoundary2Ref);
  var hasCollision = doRectsOverlap(sourceMeasure, vBoundary1Measure) || doRectsOverlap(sourceMeasure, vBoundary2Measure) || doRectsOverlap(sourceMeasure, hBoundary1Measure) || doRectsOverlap(sourceMeasure, hBoundary2Measure);
  Object(react["useDebugValue"])({
    hasCollision: hasCollision
  });
  return {
    collisionSourceRef: collisionSourceRef,
    hasCollision: hasCollision,
    vBoundary1Ref: vBoundary1Ref,
    vBoundary2Ref: vBoundary2Ref,
    hBoundary1Ref: hBoundary1Ref,
    hBoundary2Ref: hBoundary2Ref
  };
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useComponentDebug.tsx
/**
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Wrapper around useDebugValue.
 *
 * useDebugValue only works in other hooks, not directly in components.
 * As a result we need to wrap it in a custom hook.
 */

function useComponentDebug(debugValue) {
  return Object(react["useDebugValue"])(debugValue);
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useDelayedFunction.ts
/**
 * @author Dominic Lacaille <dominic.lacaille@vanillaforums.com>
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license gpl-2.0-only
 */

function useDelayedFunction(delay) {
  var timeoutId = Object(react["useRef"])();
  var stop = Object(react["useCallback"])(function () {
    if (timeoutId.current) {
      clearTimeout(timeoutId.current);
      timeoutId.current = undefined;
    }
  }, []);
  var start = Object(react["useCallback"])(function (handler) {
    stop();
    timeoutId.current = window.setTimeout(handler, delay);
  }, [delay, stop]);
  return {
    start: start,
    stop: stop
  };
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(19);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(39);

// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useDomNodeAttachment.tsx



/**
 * @author Adam Charron <adam.c@vanillaforums.com>
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license gpl-2.0-only
 */

function useDomNodeAttachment(domNodes) {
  var ref = Object(react["useRef"])();
  Object(react["useLayoutEffect"])(function () {
    if (domNodes && ref.current) {
      domNodes.forEach(function (node) {
        var _ref$current;

        (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.appendChild(node);
      });
    }
  }, [domNodes]);
  return ref;
}
function DomNodeAttacher(_props) {
  var nodes = _props.nodes,
      props = Object(objectWithoutProperties["a" /* default */])(_props, ["nodes"]);

  var ref = useDomNodeAttachment(nodes);
  return react_default.a.createElement("div", Object(esm_extends["a" /* default */])({}, props, {
    ref: ref
  }));
}
// EXTERNAL MODULE: ./packages/vanilla-dom-utils/src/index.ts + 10 modules
var src = __webpack_require__(26);

// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useEscapeListener.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * React hook for listening for an escape press on the keyboard inside root element.
 *
 * When escape is pressed, the return element will be focused if provided or the callback will will be called.
 */

function useEscapeListener(_ref) {
  var root = _ref.root,
      returnElement = _ref.returnElement,
      callback = _ref.callback;
  Object(react["useEffect"])(function () {
    if (root === null || returnElement === null) {
      // Bail out if these are null. That means we have unfilled refs. Undefined means they were not passed and we should use the defaults.
      return;
    }

    var actualRoot = root || document.documentElement;
    var escapeListener = new src["a" /* EscapeListener */](actualRoot, returnElement, callback);
    escapeListener.start();
    return escapeListener.stop;
  }, [root, returnElement, callback]);
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useFocusWatcher.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * React hook for creating and destroying a FocusWatcher. See FocusWatcher documentation.
 */

function useFocusWatcher(ref, changeHandler, bypass) {
  Object(react["useLayoutEffect"])(function () {
    if (bypass) {
      return;
    }

    if (ref.current !== null) {
      var focusWatcher = new src["b" /* FocusWatcher */](ref.current, changeHandler);
      focusWatcher.start();
      return focusWatcher.stop;
    }
  }, [ref, changeHandler, bypass]);
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useInterval.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

function useInterval(callback, delay) {
  var savedCallback = Object(react["useRef"])();
  Object(react["useEffect"])(function () {
    savedCallback.current = callback;
  }, [callback]);
  Object(react["useEffect"])(function () {
    var handler = function handler() {
      var _savedCallback$curren;

      (_savedCallback$curren = savedCallback.current) === null || _savedCallback$curren === void 0 ? void 0 : _savedCallback$curren.call(savedCallback);
    };

    if (delay !== null) {
      var id = setInterval(handler, delay);
      return function () {
        clearInterval(id);
      };
    }
  }, [delay]);
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useLastValue.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Keep a reference to the previous value of something. (during the previous render).
 *
 * @param value
 */

function useLastValue(value) {
  var ref = Object(react["useRef"])();
  Object(react["useEffect"])(function () {
    return void (ref.current = value);
  }, [value]);
  return ref.current;
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useRouteChangePrompt.tsx
/**
 * @copyright 2009-2020 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Hook for triggering a a browser confirmation prompt if the user tries to navigate away or close the page.
 *
 * It is only possible to do this using nature browser UI, which is only a "message" can be provided and not a react component.
 */

function useRouteChangePrompt(message) {
  var disabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var onWindowOrTabClose = Object(react["useCallback"])(function (event) {
    if (disabled) {
      return;
    }

    event.preventDefault();
    event.returnValue = message;
    return message;
  }, [disabled, message]);
  Object(react["useEffect"])(function () {
    if (disabled) {
      return;
    }

    window.addEventListener("beforeunload", onWindowOrTabClose);
    return function () {
      window.removeEventListener("beforeunload", onWindowOrTabClose);
    };
  }, [disabled, onWindowOrTabClose, message]);
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useTabKeyboardHandler.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * React hook for handling tabbing inside of a container with various exclusions.
 *
 * The goal is here is to be able to programatically implement various tabbing behaviours
 * required for accessibility.
 */

function useTabKeyboardHandler() {
  var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.documentElement;
  var excludedElements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var excludedRoots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var makeTabHandler = Object(react["useCallback"])(function () {
    if (!root) {
      return;
    }

    return new src["c" /* TabHandler */](root, excludedElements, excludedRoots);
  }, [root, excludedElements, excludedRoots]);
  /**
   * Handle shift tab key presses.
   *
   * - Focuses the previous element in the modal.
   * - Loops if we are at the beginning
   *
   * @param event The react event.
   */

  var handleShiftTab = Object(react["useCallback"])(function (event) {
    var tabHandler = makeTabHandler();

    if (!tabHandler) {
      return;
    }

    var nextElement = tabHandler.getNext(undefined, true);

    if (nextElement) {
      event.preventDefault();
      event.stopPropagation();
      nextElement.focus();
    }
  }, [makeTabHandler]);
  /**
   * Handle tab key presses.
   *
   * - Focuses the next element in the modal.
   * - Loops if we are at the end.
   *
   * @param event The react event.
   */

  var handleTab = Object(react["useCallback"])(function (event) {
    var tabHandler = makeTabHandler();

    if (!tabHandler) {
      return;
    }

    var nextElement = tabHandler.getNext();

    if (nextElement) {
      event.preventDefault();
      event.stopPropagation();
      nextElement.focus();
    }
  }, [makeTabHandler]);
  /**
   * Handle tab keyboard presses.
   */

  var handleTabbing = Object(react["useCallback"])(function (event) {
    var tabKey = 9;

    if (event.shiftKey && event.keyCode === tabKey) {
      handleShiftTab(event);
    } else if (!event.shiftKey && event.keyCode === tabKey) {
      handleTab(event);
    }
  }, [handleShiftTab, handleTab]);
  return handleTabbing;
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/useThrowError.ts


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Return a throw function for use inside of custom hooks & useEffect.
 *
 * This needed because throwing inside of `useEffect` does not propagate up to error boundaries.
 * @see https://github.com/facebook/react/issues/11334
 */

function useThrowError() {
  var _useState = Object(react["useState"])(null),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      error = _useState2[0],
      setError = _useState2[1];

  if (error) {
    throw error;
  }

  return setError;
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/deconstructAttributesFromElement.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Deconstructs all attributes from HTML element to recreate it in React
 * This helps to avoid using dangerouslySetInnerHTML
 *
 * @param element - The element to deconstruct
 * @param options - Additionnal options. By default, "class" is replaced with "className".
 * @returns object - the attributes of that element
 */
function deconstructAttributesFromElement(element, options) {
  var _ref = options || {},
      _ref$classAsClassName = _ref.classAsClassName,
      classAsClassName = _ref$classAsClassName === void 0 ? true : _ref$classAsClassName,
      _ref$hrefAsTo = _ref.hrefAsTo,
      hrefAsTo = _ref$hrefAsTo === void 0 ? false : _ref$hrefAsTo;

  var attrs = {};
  Object.values(element.attributes).forEach(function (attr) {
    attrs[attr.name] = attr.value;
  }); // If this is to be used in React, we want to replace "class" with "className"

  if (classAsClassName && attrs.hasOwnProperty("class")) {
    attrs["className"] = attrs["class"];
    delete attrs["class"];
  } // If this is to be used with <SmartLink/> OR <Link>. Do not use for regular <a/> tags.


  if (hrefAsTo && attrs.hasOwnProperty("href")) {
    attrs["to"] = attrs["href"];
    delete attrs["href"];
  }

  return attrs;
}
// CONCATENATED MODULE: ./packages/vanilla-react-utils/src/index.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */




















/***/ }),

/***/ 34:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return debug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return logDebug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return logDebugConditionnal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return logError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return logWarning; });
/**
 * Utility function related to logging/debugging.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var internalDebugValue = false;
/**
 * Get or set the debug flag.
 *
 * @param newValue - The new value of debug.
 * @returns the current debug setting.
 */

function debug(newValue) {
  if (newValue !== undefined) {
    internalDebugValue = newValue;
  }

  return internalDebugValue;
}
/**
 * Log something to console.
 * This only prints in debug mode.
 *
 * @param value - The value to log.
 */

function logDebug() {
  if (internalDebugValue) {
    var _console;

    // eslint-disable-next-line no-console
    (_console = console).log.apply(_console, arguments);
  }
}
/**
 * Log something to console.
 * This only prints in debug mode, and if outputLog is true.
 *
 * @param outputLog - Condition to render log
 * @param value - The value to log.
 */

function logDebugConditionnal() {
  var outputLog = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  if (internalDebugValue && outputLog) {
    var _console2;

    for (var _len = arguments.length, value = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      value[_key - 1] = arguments[_key];
    }

    // eslint-disable-next-line no-console
    (_console2 = console).log.apply(_console2, value);
  }
}
/**
 * Log an error to console.
 * This will not run in test mode _unless_ debug is set to true.
 *
 * @param value - The value to log.
 */

function logError() {
  var _console3;

  if (!internalDebugValue && "production" === "test") {
    return;
  } // eslint-disable-next-line no-console


  (_console3 = console).error.apply(_console3, arguments);
}
/**
 * Log a warning to console.
 * This will not run in test mode _unless_ debug is set to true.
 *
 * @param value - The value to log.
 */

function logWarning() {
  var _console4;

  if (!internalDebugValue || "production" === "test") {
    return;
  } // eslint-disable-next-line no-console


  (_console4 = console).warn.apply(_console4, arguments);
}

/***/ }),

/***/ 49:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ richEditorClasses; });

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(1);

// EXTERNAL MODULE: ./library/src/scripts/styles/ColorsUtils.ts
var ColorsUtils = __webpack_require__(5);

// EXTERNAL MODULE: ./library/src/scripts/styles/styleHelpers.ts
var styleHelpers = __webpack_require__(13);

// EXTERNAL MODULE: ./library/src/scripts/styles/styleUnit.ts
var styleUnit = __webpack_require__(2);

// EXTERNAL MODULE: ./library/src/scripts/styles/Mixins.ts
var Mixins = __webpack_require__(7);

// EXTERNAL MODULE: ./library/src/scripts/styles/globalStyleVars.ts
var globalStyleVars = __webpack_require__(11);

// EXTERNAL MODULE: ./library/src/scripts/styles/styleUtils.ts + 1 modules
var styleUtils = __webpack_require__(12);

// EXTERNAL MODULE: ./library/src/scripts/styles/themeCache.ts
var themeCache = __webpack_require__(9);

// EXTERNAL MODULE: ./node_modules/csx/lib/index.js
var lib = __webpack_require__(3);

// EXTERNAL MODULE: ./library/src/scripts/forms/formElementStyles.ts
var formElementStyles = __webpack_require__(40);

// EXTERNAL MODULE: ./library/src/scripts/styles/animationHelpers.ts
var animationHelpers = __webpack_require__(238);

// CONCATENATED MODULE: ./plugins/rich-editor/src/scripts/editor/richEditorVariables.ts
/*
 * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */






var richEditorVariables = Object(themeCache["c" /* useThemeCache */])(function () {
  var globalVars = Object(globalStyleVars["b" /* globalVariables */])();
  var varsFormElements = Object(formElementStyles["a" /* formElementsVariables */])();
  var makeThemeVars = Object(styleUtils["e" /* variableFactory */])("richEditor");
  var animations = Object(animationHelpers["a" /* standardAnimations */])();
  var colors = makeThemeVars("colors", {
    bg: globalVars.mainColors.bg,
    outline: globalVars.mainColors.primary.fade(0.6)
  });
  var spacing = makeThemeVars("spacing", {
    paddingLeft: 36,
    paddingRight: 36,
    paddingTop: 12,
    paddingBottom: 12,
    embedMenu: 0
  });
  var sizing = makeThemeVars("sizing", {
    minHeight: 200,
    emojiSize: 40
  });
  var menuButton = makeThemeVars("menuButton", {
    size: 42
  });
  var paragraphMenuHandle = makeThemeVars("paragraphMenuHandle", {
    size: 28,
    offset: -varsFormElements.border.width + 1
  });
  var insertLink = makeThemeVars("insertLink", {
    width: 287
  });
  var flyout = makeThemeVars("flyout", {
    padding: {
      vertical: 12,
      horizontal: 12
    },
    maxHeight: Object(lib["viewHeight"])(100),
    height: menuButton.size
  });
  var nub = makeThemeVars("nub", {
    width: 12
  });
  var menu = makeThemeVars("menu", {
    borderWidth: 1,
    offset: nub.width * 2
  });
  var pilcrow = makeThemeVars("pilcrow", {
    offset: 0,
    fontSize: 14,
    animation: {
      duration: ".3s",
      name: animations.fadeIn,
      timing: "ease-out",
      iterationCount: 1
    }
  });
  var emojiGroup = makeThemeVars("emojiGroup", {
    paddingLeft: 3,
    offset: -(varsFormElements.border.width + menu.borderWidth * 2)
  });
  var embedMenu = makeThemeVars("embedMenu", {
    padding: 0,
    mobile: {
      border: {
        color: globalVars.mainColors.primary
      },
      transition: {
        duration: ".15s",
        timing: "ease-out"
      }
    }
  });
  var embedButton = makeThemeVars("embedButton", {
    display: "block",
    offset: -varsFormElements.border.width
  });
  var text = makeThemeVars("text", {
    offset: 0,
    placeholder: {
      color: globalVars.mixBgAndFg(0.5)
    }
  });
  var title = makeThemeVars("titleInput", {
    height: globalVars.fonts.size.title + globalVars.gutter.half,
    fontSize: globalVars.fonts.size.title,
    placeholder: {
      color: globalVars.mixBgAndFg(0.5)
    }
  });
  var scrollContainer = makeThemeVars("scrollContainer", {
    overshoot: 48
  });
  var emojiBody = makeThemeVars("emojiBody", {
    height: 252,
    padding: {
      horizontal: 3,
      top: 3,
      bottom: 0
    }
  });
  var emojiHeader = makeThemeVars("emojiHeader", {
    padding: {
      horizontal: 12,
      vertical: 4
    }
  });
  var emojiFooter = makeThemeVars("emojiFooter", {
    height: menuButton.size
  });
  var buttonContents = makeThemeVars("buttonContents", {
    state: {
      bg: globalVars.mainColors.primary.fade(0.1)
    }
  });
  var iconWrap = makeThemeVars("iconWrap", {
    width: 32,
    height: 32
  });
  var richEditorWidth = 8 * sizing.emojiSize;
  var modernFrame = makeThemeVars("modernFrame", {
    padding: 16,
    margin: 16
  });
  return {
    colors: colors,
    spacing: spacing,
    sizing: sizing,
    menuButton: menuButton,
    paragraphMenuHandle: paragraphMenuHandle,
    insertLink: insertLink,
    flyout: flyout,
    nub: nub,
    menu: menu,
    pilcrow: pilcrow,
    emojiGroup: emojiGroup,
    embedButton: embedButton,
    text: text,
    title: title,
    embedMenu: embedMenu,
    scrollContainer: scrollContainer,
    emojiBody: emojiBody,
    buttonContents: buttonContents,
    emojiHeader: emojiHeader,
    emojiFooter: emojiFooter,
    iconWrap: iconWrap,
    richEditorWidth: richEditorWidth,
    modernFrame: modernFrame
  };
});
// EXTERNAL MODULE: ./library/src/scripts/forms/buttonMixins.ts
var buttonMixins = __webpack_require__(65);

// EXTERNAL MODULE: ./library/src/scripts/layout/panelLayoutStyles.ts + 1 modules
var panelLayoutStyles = __webpack_require__(44);

// CONCATENATED MODULE: ./plugins/rich-editor/src/scripts/editor/richEditorStyles.ts


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/*
 * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */












var richEditorClasses = Object(themeCache["c" /* useThemeCache */])(function (legacyMode) {
  var _objectSpread3;

  var globalVars = Object(globalStyleVars["b" /* globalVariables */])();
  var style = Object(styleUtils["d" /* styleFactory */])("richEditor");
  var vars = richEditorVariables();
  var formVars = Object(formElementStyles["a" /* formElementsVariables */])();
  var mediaQueries = Object(panelLayoutStyles["b" /* layoutVariables */])().mediaQueries();
  var root = style(_objectSpread({
    position: "relative",
    display: "block"
  }, {
    "&.isDisabled": _objectSpread({}, {
      "&, &.richEditor-button": {
        cursor: Object(lib["important"])("progress")
      }
    }),
    ".richEditor-textWrap, .richEditor-frame": {
      display: "flex",
      flexDirection: "column",
      flexGrow: 1,
      position: "relative"
    },
    "& .ql-clipboard": _objectSpread({}, Mixins["a" /* Mixins */].absolute.srOnly(), {
      position: "fixed" // Fixed https://github.com/quilljs/quill/issues/1374#issuecomment-415333651

    }),
    ".richEditor-nextInput, .iconButton, .richEditor-button": _objectSpread({}, Object(styleHelpers["singleLineEllipsis"])(), {}, Object(styleHelpers["appearance"])(), {
      position: "relative",
      border: 0,
      padding: 0,
      background: "none",
      textAlign: "left"
    }),
    ".Close-x": {
      display: "block",
      cursor: "pointer"
    },
    ".content-wrapper": {
      height: Object(lib["percent"])(100)
    },
    ".embedDialogue": {
      position: "relative"
    }
  }));
  var iconWrap = style("iconWrap", _objectSpread({}, Object(styleHelpers["pointerEvents"])(), {
    content: Object(lib["quote"])("")
  }, styleHelpers["absolutePosition"].middleOfParent(), {
    width: Object(styleUnit["a" /* styleUnit */])(vars.iconWrap.width),
    height: Object(styleUnit["a" /* styleUnit */])(vars.iconWrap.width)
  }, Mixins["a" /* Mixins */].border({
    radius: 3,
    color: globalVars.elementaryColors.transparent
  })));
  var paragraphMenu = style("paragraphMenu", _objectSpread({
    position: "absolute",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    top: Object(styleUnit["a" /* styleUnit */])(vars.pilcrow.offset),
    left: 0,
    marginLeft: Object(styleUnit["a" /* styleUnit */])(-globalVars.gutter.quarter - (!legacyMode ? globalVars.gutter.size * 2 : 0)),
    transform: "translateX(-100%) translateY(-50%)",
    height: Object(styleUnit["a" /* styleUnit */])(vars.paragraphMenuHandle.size),
    width: Object(styleUnit["a" /* styleUnit */])(vars.paragraphMenuHandle.size),
    animationName: vars.pilcrow.animation.name,
    animationDuration: vars.pilcrow.animation.duration,
    animationTimingFunction: vars.pilcrow.animation.timing,
    animationIterationCount: vars.pilcrow.animation.iterationCount,
    zIndex: 10
  }, {
    ".richEditor-button&.isActive:hover": {
      cursor: "default"
    },
    "&.isMenuInset": {
      transform: Object(lib["translateY"])("-50%")
    }
  }));
  var paragraphMenuMobile = style("paragraphMenu-mobile", {
    position: "relative",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    top: Object(lib["important"])(0)
  });
  var menuBar = style("menuBar", {
    position: "relative",
    width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size * 4),
    fontSize: Object(styleUnit["a" /* styleUnit */])(globalVars.fonts.size.medium),
    overflow: "hidden",
    zIndex: 1
  });
  var menuBarToggles = style("menuBarToggles", {
    position: "relative",
    display: "flex",
    justifyContent: "space-between",
    flexWrap: "nowrap",
    width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size * 4)
  });
  var paragraphMenuHandle = style("paragraphMenuHandle", _objectSpread({}, Object(styleHelpers["appearance"])(), {}, Object(styleHelpers["userSelect"])(), {
    background: "transparent",
    border: 0,
    display: "block",
    cursor: "pointer",
    width: Object(styleUnit["a" /* styleUnit */])(formVars.sizing.height),
    height: Object(styleUnit["a" /* styleUnit */])(formVars.sizing.height),
    padding: 0,
    maxWidth: Object(styleUnit["a" /* styleUnit */])(formVars.sizing.height),
    minWidth: Object(styleUnit["a" /* styleUnit */])(formVars.sizing.height),
    outline: 0
  }, Object(defineProperty["a" /* default */])({
    "&:focus, &:hover": {
      color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.primary)
    }
  }, "&.isOpen .".concat(iconWrap), {
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  })));
  var paragraphMenuHandleMobile = style("paragraphMenuHandleMobile", {
    width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    height: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    maxWidth: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    minWidth: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size)
  });
  var text = style("text", _objectSpread({
    position: "relative",
    whiteSpace: Object(lib["important"])("pre-wrap"),
    outline: 0,
    paddingBottom: 24
  }, {
    // When the editor is empty we should be displaying a placeholder.
    "&.ql-blank::before": {
      content: "attr(placeholder)",
      display: "block",
      color: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.text.placeholder.color),
      position: "absolute",
      top: vars.text.offset,
      left: 0,
      cursor: "text"
    }
  }), mediaQueries.oneColumnDown({
    fontSize: Object(styleHelpers["importantUnit"])(16) // for iOS

  }));
  var menuItems = style("menuItems", _objectSpread({
    msOverflowStyle: "-ms-autohiding-scrollbar",
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-start",
    flexWrap: "nowrap",
    listStyle: "none",
    padding: 0,
    margin: 0,
    zIndex: 1,
    overflow: "visible"
  }, {
    ".richEditor-menuItem": _objectSpread({
      display: "block",
      padding: 0,
      margin: 0
    }, {
      ".richEditor-button": _objectSpread({
        display: "block",
        width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
        fontSize: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size * 24 / 39),
        lineHeight: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size)
      }, {
        "&.emojiChar-🇺🇳": {
          fontSize: Object(styleUnit["a" /* styleUnit */])(10)
        }
      }),
      "&:first-child .richEditor-embedButton": {
        borderBottomLeftRadius: Object(styleUnit["a" /* styleUnit */])(globalVars.border.radius)
      },
      "&.isRightAligned": {
        marginLeft: "auto"
      }
    })
  }));
  var button = style("button", _objectSpread({}, Object(buttonMixins["a" /* buttonResetMixin */])(), {
    display: "block"
  }, Object(styleHelpers["userSelect"])(), {}, Object(styleHelpers["appearance"])(), {
    cursor: "pointer",
    width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    height: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    border: 0,
    padding: 0,
    overflow: "hidden",
    position: "relative",
    color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.fg),
    outline: 0
  }, (_objectSpread3 = {
    "&:hover": {
      color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.primary)
    },
    "&:focus": {
      color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.secondary)
    },
    "&:active": {
      color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.secondary)
    }
  }, Object(defineProperty["a" /* default */])(_objectSpread3, "&:hover .".concat(iconWrap), {
    color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.primary),
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  }), Object(defineProperty["a" /* default */])(_objectSpread3, "&.isOpen .".concat(iconWrap), {
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  }), Object(defineProperty["a" /* default */])(_objectSpread3, "&.focus-visible .".concat(iconWrap), {
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  }), Object(defineProperty["a" /* default */])(_objectSpread3, "&.richEditor-formatButton, &.richEditor-embedButton", {
    height: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size)
  }), Object(defineProperty["a" /* default */])(_objectSpread3, "&.emojiGroup", {
    display: "block",
    width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    height: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    textAlign: "center"
  }), Object(defineProperty["a" /* default */])(_objectSpread3, "&:not(:disabled)", {
    cursor: "pointer"
  }), Object(defineProperty["a" /* default */])(_objectSpread3, "&.isActive .".concat(iconWrap), {
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  }), _objectSpread3)));
  var topLevelButtonActive = style("topLevelButtonActive", _objectSpread({
    color: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.primary)
  }, Object(defineProperty["a" /* default */])({}, ".".concat(iconWrap), {
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  })));
  var menuItem = style("menuItem", _objectSpread({
    display: "block",
    padding: 0,
    margin: 0,
    overflow: "visible"
  }, {
    ".richEditor-button, &.richEditor-button": _objectSpread({
      width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
      height: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
      maxWidth: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
      fontSize: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size * 24 / 39),
      lineHeight: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size)
    }, {
      "&.emojiChar-🇺🇳": {
        fontSize: Object(styleUnit["a" /* styleUnit */])(14)
      }
    }),
    "&.isRightAligned": {
      marginLeft: "auto"
    }
  }));
  var upload = style("upload", {
    display: Object(lib["important"])("none")
  });
  var embedBar = style("embedBar", _objectSpread({
    display: "block",
    width: Object(lib["percent"])(100)
  }, Mixins["a" /* Mixins */].padding({
    horizontal: legacyMode ? 0 : (vars.menuButton.size - globalVars.icon.sizes.small) / 2,
    vertical: vars.embedMenu.padding
  }), {
    background: legacyMode ? undefined : ColorsUtils["a" /* ColorsUtils */].colorOut(vars.colors.bg)
  }));
  var embedBarSeparator = style("embedBarSeparator", _objectSpread({
    height: Object(styleUnit["a" /* styleUnit */])(globalVars.gutter.quarter),
    width: Object(styleUnit["a" /* styleUnit */])(globalVars.gutter.quarter),
    borderRadius: Object(styleUnit["a" /* styleUnit */])(globalVars.gutter.quarter),
    background: ColorsUtils["a" /* ColorsUtils */].colorOut(globalVars.mainColors.fg)
  }, Mixins["a" /* Mixins */].margin({
    horizontal: globalVars.gutter.half
  })));
  var icon = style("icon", {
    display: "block",
    margin: "auto",
    height: Object(styleUnit["a" /* styleUnit */])(globalVars.icon.sizes.default),
    width: Object(styleUnit["a" /* styleUnit */])(globalVars.icon.sizes.default)
  });
  var legacyFrame = style("legacyFrame", _objectSpread({
    margin: "auto",
    height: "initial",
    minHeight: Object(styleUnit["a" /* styleUnit */])(vars.sizing.minHeight + vars.menuButton.size),
    position: "relative",
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.colors.bg),
    padding: 0
  }, {
    "&.isMenuInset": {
      overflow: "initial",
      position: "relative"
    }
  }));
  var close = style("close", _objectSpread({}, styleHelpers["absolutePosition"].middleRightOfParent(), {}, Object(styleHelpers["userSelect"])(), {}, Object(styleHelpers["appearance"])(), {
    width: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    height: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    lineHeight: Object(styleUnit["a" /* styleUnit */])(vars.menuButton.size),
    verticalAlign: "bottom",
    textAlign: "center",
    background: "transparent",
    cursor: "pointer",
    border: 0,
    outline: 0,
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }));
  var flyoutDescription = style("flyoutDescription", {
    marginBottom: ".5em"
  });
  var separator = style("separator", {
    borderTop: Object(styleHelpers["singleBorder"])(),
    marginBottom: Object(styleUnit["a" /* styleUnit */])(8)
  });
  var position = style("position", _objectSpread({}, {
    "&&": {
      position: "absolute",
      left: Object(lib["calc"])("50% - ".concat(Object(styleUnit["a" /* styleUnit */])(vars.spacing.paddingLeft / 2)))
    },
    "&.isUp": {
      bottom: Object(lib["calc"])("50% + ".concat(Object(styleUnit["a" /* styleUnit */])(vars.spacing.paddingRight / 2 - formVars.border.width)))
    },
    "&.isDown": {
      top: Object(lib["calc"])("50% + ".concat(Object(styleUnit["a" /* styleUnit */])(vars.spacing.paddingRight / 2 - formVars.border.width)))
    }
  }));
  var paragraphMenuPanel = style("paragraphMenuPanel", {});
  var emojiGroup = style("emojiGroup", _objectSpread({}, Object(defineProperty["a" /* default */])({}, "&.isSelected .".concat(iconWrap), {
    backgroundColor: ColorsUtils["a" /* ColorsUtils */].colorOut(vars.buttonContents.state.bg)
  })));
  var flyoutOffset = style("flyoutOffset", {
    marginTop: Object(styleUnit["a" /* styleUnit */])((vars.menuButton.size - vars.iconWrap.width) / -2 + 1)
  });
  var placeholder = style("placeholder", _objectSpread({}, {
    "&&&:before": {
      margin: 0
    }
  }));
  return {
    root: root,
    menuBar: menuBar,
    menuBarToggles: menuBarToggles,
    paragraphMenuHandle: paragraphMenuHandle,
    paragraphMenuHandleMobile: paragraphMenuHandleMobile,
    text: text,
    menuItems: menuItems,
    upload: upload,
    embedBar: embedBar,
    embedBarSeparator: embedBarSeparator,
    menuItem: menuItem,
    button: button,
    topLevelButtonActive: topLevelButtonActive,
    icon: icon,
    close: close,
    flyoutDescription: flyoutDescription,
    paragraphMenu: paragraphMenu,
    paragraphMenuMobile: paragraphMenuMobile,
    separator: separator,
    position: position,
    legacyFrame: legacyFrame,
    paragraphMenuPanel: paragraphMenuPanel,
    iconWrap: iconWrap,
    flyoutOffset: flyoutOffset,
    emojiGroup: emojiGroup,
    placeholder: placeholder
  };
});

/***/ }),

/***/ 66:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return applySharedPortalContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return mountReact; });
/* unused harmony export mountReactMultiple */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return mountPortal; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


var hasRendered = false;
var portals = [];
var PORTAL_MANAGER_ID = "vanillaPortalManager";

var PortalContext = function PortalContext(props) {
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, props.children);
};

function applySharedPortalContext(context) {
  PortalContext = context;

  if (hasRendered) {
    // Re-render the portals. We never want to be the first to initialize rendering though.
    renderPortals();
  }
}
/**
 * Component for managing all mounted components from a single wrapped context.
 *
 * This allows a shared context provider to be applied to parts of the site.
 */

function PortalManager() {
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(PortalContext, null, portals.map(function (portal, i) {
    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
      key: i
    }, react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.createPortal(portal.component, portal.target));
  })));
}

function renderPortals(callback) {
  hasRendered = true; // Ensure we have our modal container.

  var container = document.getElementById(PORTAL_MANAGER_ID);

  if (!container) {
    container = document.createElement("div");
    container.id = PORTAL_MANAGER_ID;
    document.body.appendChild(container);
  }

  react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(PortalManager, null), container, callback);
}
/**
 * Mount a root component of a React tree.
 *
 * - ReactDOM render.
 * - Typestyle render.
 *
 * If the overwrite option is passed this component will replace the components you passed as target.
 *
 * Default Mode:
 * <div><TARGET /></div> -> <div><TARGET><REACT></TARGET><div>
 *
 * Overwrite Mode:
 * <div><TARGET /></div> -> <div><REACT/></div>
 */


function mountReact(component, target, callback, options) {
  if (options === null || options === void 0 ? void 0 : options.bypassPortalManager) {
    var doRender = function doRender() {
      react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(PortalContext, null, component), target, callback);
    };

    if (options === null || options === void 0 ? void 0 : options.unmountBeforeRender) {
      react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.unmountComponentAtNode(target);
    }

    setImmediate(doRender);
    return;
  }

  var mountPoint = target;
  var cleanupContainer;

  if (options === null || options === void 0 ? void 0 : options.clearContents) {
    target.innerHTML = "";
  }

  if (options && options.overwrite) {
    var container = document.createElement("span");
    cleanupContainer = container;
    target.parentElement.insertBefore(container, target);
    mountPoint = container;
  }

  portals.push({
    target: mountPoint,
    component: component
  });
  renderPortals(function () {
    if (cleanupContainer) {
      target.remove();

      if (cleanupContainer.firstElementChild) {
        cleanupContainer.parentElement.insertBefore(cleanupContainer.firstElementChild, cleanupContainer);
        cleanupContainer.remove();
        target.remove();
      }
    }

    callback && callback();
  });
}
function mountReactMultiple(components, callback, options) {
  if (!components.length) {
    return;
  }

  var toCleanup = [];
  components.forEach(function (_ref) {
    var component = _ref.component,
        target = _ref.target;
    var mountPoint = target;

    if (options === null || options === void 0 ? void 0 : options.clearContents) {
      target.innerHTML = "";
    }

    if (options && options.overwrite) {
      var container = document.createElement("span");
      toCleanup.push({
        target: target,
        cleanup: container
      });
      target.parentElement.insertBefore(container, target);
      mountPoint = container;
    }

    portals.push({
      target: mountPoint,
      component: component
    });
  });
  renderPortals(function () {
    toCleanup.forEach(function (_ref2) {
      var cleanup = _ref2.cleanup,
          target = _ref2.target;

      if (cleanup.firstElementChild) {
        cleanup.parentElement.insertBefore(cleanup.firstElementChild, cleanup);
        cleanup.remove();
        target.remove();
      }
    });
    callback && callback();
  });
}
/**
 * Mount a modal with ReactDOM. This is only needed at the top level context.
 *
 * If you are already in a react context, just use `<Modal />`.
 * Note: Using this will clear any other modals mounted with this component.
 *
 * @param element The <Modal /> element to render.
 * @param containerID The container to render the modal into. Defaults to modal container.
 * @param asRealPortal Whether or not we should render this as a real portal, or one managed by the portal manager.
 */

function mountPortal(element, containerID) {
  var asRealPortal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  // Ensure we have our modal container.
  var container = document.getElementById(containerID);

  if (!container) {
    container = document.createElement("div");
    container.id = containerID;
    document.body.appendChild(container);
  }

  if (asRealPortal) {
    return react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.createPortal(element, container);
  } else {
    return new Promise(function (resolve) {
      return mountReact(element, container, function () {
        return resolve();
      });
    });
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(112).setImmediate))

/***/ }),

/***/ 669:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(77);
module.exports = __webpack_require__(674);


/***/ }),

/***/ 67:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return cssOut; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _library_styles_styleShim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);


function cssOut(selector) {
  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    objects[_key - 1] = arguments[_key];
  }

  Object(_library_styles_styleShim__WEBPACK_IMPORTED_MODULE_1__[/* cssRaw */ "a"])(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])({}, selector, objects.map(_library_styles_styleShim__WEBPACK_IMPORTED_MODULE_1__[/* flattenNests */ "d"])));
}

/***/ }),

/***/ 674:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(18);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./library/src/scripts/utility/appUtils.tsx
var appUtils = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(8);

// CONCATENATED MODULE: ./library/src/scripts/features/swagger/VanillaSwaggerDeepLink.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

var DEEP_LINK_ATTR = "data-deep-link";
/**
 * Override of the swagger DeepLink component.
 * @see https://github.com/swagger-api/swagger-ui/blob/master/src/core/components/deep-link.jsx
 */

function VanillaSwaggerDeepLink(_ref) {
  var enabled = _ref.enabled,
      path = _ref.path,
      text = _ref.text;
  var id = enabled ? "/".concat(path) : undefined;
  return react_default.a.createElement("a", {
    href: id,
    onClick: function onClick(e) {
      e.preventDefault();
    },
    className: "nostyle",
    "data-id": "/".concat(path) // Force to always show this.
    ,
    "data-deep-link": true
  }, react_default.a.createElement("span", null, text));
}
// EXTERNAL MODULE: ./library/src/scripts/loaders/Loader.tsx + 1 modules
var Loader = __webpack_require__(176);

// CONCATENATED MODULE: ./library/src/scripts/features/swagger/VanillaSwaggerLayout.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


/**
 * Custom layout for swagger-ui.
 *
 * - Use Vanilla's loader.
 * - Remove unwanted info module.
 */

function VanillaSwaggerLayout(props) {
  var errSelectors = props.errSelectors,
      specSelectors = props.specSelectors,
      getComponent = props.getComponent;
  var SvgAssets = getComponent("SvgAssets");
  var VersionPragmaFilter = getComponent("VersionPragmaFilter");
  var Operations = getComponent("operations", true);
  var Models = getComponent("Models", true);
  var Row = getComponent("Row");
  var Col = getComponent("Col");
  var Errors = getComponent("errors", true);
  var isSwagger2 = specSelectors.isSwagger2();
  var isOAS3 = specSelectors.isOAS3();
  var isSpecEmpty = !specSelectors.specStr();
  var loadingStatus = specSelectors.loadingStatus();
  var loadingMessage = null;

  if (loadingStatus === "loading") {
    return react_default.a.createElement(Loader["a" /* default */], {
      padding: 200
    });
  }

  if (loadingStatus === "failed") {
    loadingMessage = react_default.a.createElement("div", {
      className: "info"
    }, react_default.a.createElement("div", {
      className: "loading-container"
    }, react_default.a.createElement("h4", {
      className: "title"
    }, "Failed to load API definition."), react_default.a.createElement(Errors, null)));
  }

  if (loadingStatus === "failedConfig") {
    var lastErr = errSelectors.lastError();
    var lastErrMsg = lastErr ? lastErr.get("message") : "";
    loadingMessage = react_default.a.createElement("div", {
      className: "info",
      style: {
        maxWidth: "880px",
        marginLeft: "auto",
        marginRight: "auto",
        textAlign: "center"
      }
    }, react_default.a.createElement("div", {
      className: "loading-container"
    }, react_default.a.createElement("h4", {
      className: "title"
    }, "Failed to load remote configuration."), react_default.a.createElement("p", null, lastErrMsg)));
  }

  if (!loadingMessage && isSpecEmpty) {
    loadingMessage = react_default.a.createElement("h4", null, "No API definition provided.");
  }

  if (loadingMessage) {
    return react_default.a.createElement("div", {
      className: "swagger-ui"
    }, react_default.a.createElement("div", {
      className: "loading-container"
    }, loadingMessage));
  }

  return react_default.a.createElement("div", {
    className: "swagger-ui"
  }, react_default.a.createElement(SvgAssets, null), react_default.a.createElement(VersionPragmaFilter, {
    isSwagger2: isSwagger2,
    isOAS3: isOAS3,
    alsoShow: react_default.a.createElement(Errors, null)
  }, react_default.a.createElement(Errors, null), react_default.a.createElement(Row, null, react_default.a.createElement(Col, {
    mobile: 12,
    desktop: 12
  }, react_default.a.createElement(Operations, null))), react_default.a.createElement(Row, null, react_default.a.createElement(Col, {
    mobile: 12,
    desktop: 12
  }, react_default.a.createElement(Models, null)))));
}
// CONCATENATED MODULE: ./library/src/scripts/features/swagger/VanillaSwaggerPlugin.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */


function VanillaSwaggerPlugin() {
  // Create the plugin that provides our layout component
  return {
    components: {
      VanillaSwaggerLayout: VanillaSwaggerLayout,
      DeepLink: VanillaSwaggerDeepLink
    }
  };
}
// EXTERNAL MODULE: ./library/src/scripts/content/hashScrolling.ts
var hashScrolling = __webpack_require__(240);

// CONCATENATED MODULE: ./library/src/scripts/features/swagger/replaceDeepLinkScrolling.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Stub out the scroll to method.
 *
 * Swagger currently uses a really weird way to scroll (scrolling done in JS).
 * Stub it out and use our own scrolling method that accounts for header offset.
 */

function replaceDeepLinkScrolling(swagger) {
  swagger.plugins.DeepLinkingLayout.statePlugins.layout.actions.scrollToElement = function (elementToScroll, container) {
    Object(hashScrolling["a" /* scrollToElement */])(elementToScroll, window.__VANILLA_GLOBAL_SCROLL_OFFSET__);
    return function () {};
  };
}
// CONCATENATED MODULE: ./library/src/scripts/features/swagger/useSwaggerUI.ts




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */





function importSwagger() {
  var imported;
  return regenerator_default.a.async(function importSwagger$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return regenerator_default.a.awrap(Promise.all(/* import() | swagger-ui-react */[__webpack_require__.e(0), __webpack_require__.e(12)]).then(__webpack_require__.bind(null, 1200)));

        case 2:
          imported = _context.sent;
          return _context.abrupt("return", imported.SwaggerUI);

        case 4:
        case "end":
          return _context.stop();
      }
    }
  });
}

function notEmpty(value) {
  return value !== null && value !== undefined;
}

function useSwaggerUI(_options) {
  var url = _options.url,
      spec = _options.spec,
      _options$tryIt = _options.tryIt,
      tryIt = _options$tryIt === void 0 ? false : _options$tryIt;

  var _useState = Object(react["useState"])([]),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      headings = _useState2[0],
      setHeadings = _useState2[1];

  var _useState3 = Object(react["useState"])(true),
      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),
      isLoading = _useState4[0],
      setIsLoading = _useState4[1];

  var swaggerRef = Object(react["useRef"])(null);
  Object(react["useEffect"])(function () {
    if (tryIt && swaggerRef.current && !swaggerRef.current.classList.contains("tryIt")) {
      swaggerRef.current.classList.add("tryIt");
    }
  }, [tryIt]);
  Object(react["useEffect"])(function () {
    importSwagger().then(function (SwaggerUIConstructor) {
      replaceDeepLinkScrolling(SwaggerUIConstructor);

      if (swaggerRef.current) {
        setIsLoading(false);
        SwaggerUIConstructor(_objectSpread({
          domNode: swaggerRef.current,
          plugins: [VanillaSwaggerPlugin()],
          layout: "VanillaSwaggerLayout"
        }, _options, {
          operationsSorter: "alpha",
          deepLinking: true,
          onComplete: function onComplete() {
            var opblocks = swaggerRef.current.querySelectorAll(".opblock-tag, .opblock");
            var headings = Array.from(opblocks).map(function (blockNode) {
              if (blockNode.classList.contains("opblock-tag")) {
                var _blockNode$querySelec;

                var text = blockNode.getAttribute("data-tag");
                var ref = (_blockNode$querySelec = blockNode.querySelector("[".concat(DEEP_LINK_ATTR, "]"))) === null || _blockNode$querySelec === void 0 ? void 0 : _blockNode$querySelec.getAttribute("data-id");

                if (!text || !ref) {
                  return null;
                }

                return {
                  text: text.replace(/\u200B/g, ""),
                  ref: ref,
                  level: 2
                };
              } else {
                var _ref2, _blockNode$querySelec2, _ref3, _blockNode$querySelec3, _blockNode$querySelec4;

                var methodText = (_ref2 = (_blockNode$querySelec2 = blockNode.querySelector(".opblock-summary-method")) === null || _blockNode$querySelec2 === void 0 ? void 0 : _blockNode$querySelec2.textContent) !== null && _ref2 !== void 0 ? _ref2 : "";
                var pathText = (_ref3 = (_blockNode$querySelec3 = blockNode.querySelector(".opblock-summary-path")) === null || _blockNode$querySelec3 === void 0 ? void 0 : _blockNode$querySelec3.textContent) !== null && _ref3 !== void 0 ? _ref3 : "";

                var _ref = (_blockNode$querySelec4 = blockNode.querySelector("[".concat(DEEP_LINK_ATTR, "]"))) === null || _blockNode$querySelec4 === void 0 ? void 0 : _blockNode$querySelec4.getAttribute("data-id");

                if (!methodText || !pathText || !_ref) {
                  return null;
                }

                return {
                  text: (methodText + " " + pathText).replace(/\u200B/g, ""),
                  ref: _ref,
                  level: 3
                };
              }
            }).filter(notEmpty);
            setHeadings(headings);
          }
        }));
      }
    }); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [spec, url]);
  return {
    swaggerRef: swaggerRef,
    headings: headings,
    isLoading: isLoading
  };
}
// EXTERNAL MODULE: ./packages/vanilla-react-utils/src/index.ts + 18 modules
var src = __webpack_require__(29);

// CONCATENATED MODULE: ./plugins/swagger-ui/src/scripts/entries/admin.tsx


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */




Object(appUtils["h" /* onReady */])(function _callee() {
  var mountPoint;
  return regenerator_default.a.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          mountPoint = document.getElementById("swagger-ui");

          if (mountPoint) {
            Object(src["d" /* mountReact */])(react_default.a.createElement(SwaggerUI, null), mountPoint);
          }

        case 2:
        case "end":
          return _context.stop();
      }
    }
  });
});

function SwaggerUI() {
  var _useSwaggerUI = useSwaggerUI({
    requestInterceptor: function requestInterceptor(request) {
      request.headers["x-transient-key"] = Object(appUtils["e" /* getMeta */])("TransientKey");
      return request;
    },
    url: Object(appUtils["j" /* siteUrl */])("/api/v2/open-api/v3" + window.location.search),
    tryIt: true
  }),
      swaggerRef = _useSwaggerUI.swaggerRef;

  return react_default.a.createElement("div", {
    ref: swaggerRef
  });
}

/***/ }),

/***/ 77:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _library_utility_appUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/**
 * Set wepback's public path.
 * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot
 * Eg. installed in a subfolder / using Reverse Proxy.
 *
 * @author Adam Charron <adam.c@vanillaforums.com>
 * @copyright 2009-2018 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * This needs to be a free variable.
 *
 * Webpack does some magic to make this work.
 * It you try and set a local or global version of it, it WILL NOT work.
 *
 * @see https://stackoverflow.com/questions/12934929/what-are-free-variables
 * @see https://webpack.js.org/configuration/output/#output-publicpath
 * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623
 */
// @ts-ignore: Cannot find variable warning. See comment aboe.

__webpack_require__.p = Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_0__[/* assetUrl */ "c"])("/dist/" + "admin" + "/");

/***/ })

},[[669,1,0,2]]]);
//# sourceMappingURL=/api/v2/sourcemaps/admin/sourcemaps/8h65p/006d88667e6842b01f45