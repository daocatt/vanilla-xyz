{"version":3,"sources":["webpack://vanilla-forum/./library/src/scripts/layout/drawer/drawerStyles.ts","webpack://vanilla-forum/./library/src/scripts/layout/drawer/Drawer.tsx","webpack://vanilla-forum/./library/src/scripts/layout/pageHeadingStyles.tsx","webpack://vanilla-forum/./library/src/scripts/layout/PageHeading.tsx","webpack://vanilla-forum/./library/src/scripts/layout/pageTitleStyles.tsx","webpack://vanilla-forum/./library/src/scripts/routing/QueryString.tsx","webpack://vanilla-forum/./library/src/scripts/forms/radioAsButtons/RadioGroupContext.tsx","webpack://vanilla-forum/./library/src/scripts/forms/radioAsButtons/RadioInputAsButton.tsx","webpack://vanilla-forum/./library/src/scripts/forms/radioAsButtons/radioInputAsButtons.styles.ts","webpack://vanilla-forum/./library/src/scripts/forms/radioAsButtons/RadioGroup.tsx","webpack://vanilla-forum/./library/src/scripts/search/searchInFilter.styles.tsx","webpack://vanilla-forum/./library/src/scripts/search/SearchInFilter.tsx","webpack://vanilla-forum/./library/src/scripts/result/ResultList.tsx","webpack://vanilla-forum/./library/src/scripts/search/SearchPageResultsLoader.tsx","webpack://vanilla-forum/./library/src/scripts/navigation/simplePagerStyles.ts","webpack://vanilla-forum/./library/src/scripts/search/SearchPagination.tsx","webpack://vanilla-forum/./library/src/scripts/search/SearchPageResults.tsx","webpack://vanilla-forum/./library/src/scripts/result/ResultPaginationInfo.styles.ts","webpack://vanilla-forum/./library/src/scripts/result/ResultPaginationInfo.tsx","webpack://vanilla-forum/./library/src/scripts/search/searchMiscellaneousComponents.styles.ts","webpack://vanilla-forum/./library/src/scripts/search/SortAndPaginationInfo.tsx","webpack://vanilla-forum/./library/src/scripts/layout/components/Panel.tsx","webpack://vanilla-forum/./library/src/scripts/layout/panelAreaStyles.ts","webpack://vanilla-forum/./library/src/scripts/layout/components/PanelOverflow.tsx","webpack://vanilla-forum/./library/src/scripts/layout/components/PanelArea.tsx","webpack://vanilla-forum/./library/src/scripts/layout/components/PanelAreaHorizontalPadding.tsx","webpack://vanilla-forum/./library/src/scripts/layout/components/PanelWidgetHorizontalPadding.tsx","webpack://vanilla-forum/./library/src/scripts/layout/PanelLayout.tsx","webpack://vanilla-forum/./library/src/scripts/layout/TwoColumnLayout.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/components/panels/PlacesSearchTypeFilter.tsx","webpack://vanilla-forum/./library/src/scripts/search/SearchPage.tsx"],"names":["drawerVariables","useThemeCache","globalVars","globalVariables","themeVars","componentThemeVariables","spacing","button","padding","subComponentStyles","fonts","size","userContent","font","sizes","default","weight","weights","semiBold","sizing","icon","drawerClasses","vars","debug","debugHelper","root","style","display","position","name","contents","width","percent","toggle","fontWeight","styleUnit","textAlign","minWidth","fontSize","Drawer","props","uniqueIDFromPrefix","setState","open","state","classes","className","classNames","this","Button","id","buttonID","aria-controls","contentID","aria-expanded","disabled","baseClass","ButtonTypes","CUSTOM","onClick","aria-hidden","title","aria-controlledby","contentsClassName","children","React","Component","pageHeadingVariables","makeThemeVars","variableFactory","lineHeight","lineHeights","condensed","cta","margin","dropDown","pageHeadingClasses","styleFactory","alignItems","main","flexWrap","flexGrow","titleBar","actions","marginLeft","alignSelf","zIndex","top","transform","link","height","color","titleWrap","actionButton","px","lineHeightCentering","PageHeading","includeBackLink","headingClassName","isCompactHeading","useFontSizeCalculator","linkClasses","backLinkClasses","backLink","BackLink","inHeading","chevronClass","iconClasses","chevronLeftSmallCompact","ConditionalWrap","condition","Heading","depth","pageTitleClasses","Mixins","vertical","lineHeightAdjustment","iconSizing","iconVariables","chevronLeftCompact","smallBackLink","QueryString","throttle","query","qs","stringify","getFilteredValue","value","defaults","history","replace","location","search","syncOnFirstMount","updateQueryString","prevProps","isEqual","inputValue","filteredValue","Object","entries","key","withRouter","RadioGroupContext","createContext","RadioGroupProvider","useState","groupID","setGroupID","useEffect","Provider","withRadioGroup","WrappedComponent","displayName","ComponentWithRadioGroup","data","buttonAutoMinWidth","activeItem","item","input","label","buttonAutoMinWidthClass","active","undefined","isLoading","visibility","visuallyHidden","type","event","setData","onKeyDown","onChange","checked","isDisabled","ButtonLoader","clearOnUnmount","message","sprintf","aria-live","Consumer","context","radioInputAsButtonsClasses","mediaQueries","layoutVariables","items","justifyContent","horizontal","negativeUnit","gutter","half","xs","calc","all","labelStateStyles","generateButtonStyleProperties","buttonTypeVars","buttonVariables","primary","userSelect","cursor","hiddenInputStates","stateSuffix","absolute","srOnly","RadioGroup","classesButtons","buttonClasses","accessibleTitle","buttonActiveClass","buttonClass","standard","classesInputBlock","inputBlockClasses","rootClass","ScreenReaderContent","tag","searchInFilterVariables","forcedVars","searchInFilterClasses","overflow","translate","flexShrink","radio","separator","border","backgroundColor","ColorsUtils","colorOut","labelWrap","iconWrap","SearchInFilter","filters","endFilters","length","t","map","filter","i","role","ResultList","content","searchTerm","results","emptyMessage","headingLevel","ResultWrapper","result","hasResults","searchResultsClasses","useLayout","Result","rel","Translate","source","c0","PanelWidget","Paragraph","noResults","Tag","SearchPageResultsLoader","count","Array","from","_","LoadingRectangle","flexDirection","paddingLeft","marginRight","borderRadius","simplePagerVariables","buttonGlobalVariables","bottom","simplePagerClasses","SearchPagination","onNextClick","onPreviousClick","isSingle","SearchPageResults","useSearchForm","updateForm","form","currentDomain","getCurrentDomain","status","lastStatus","useLastValue","useLayoutEffect","LoadStatus","SUCCESS","LOADING","window","scrollTo","PENDING","ERROR","CoreErrorMessages","error","paginationNextClick","paginationPreviousClick","pagination","next","prev","e","page","AnalyticsData","uniqueKey","hashString","JSON","ResultComponent","mapResult","mapUserInfo","userInfo","email","userID","photoUrl","dateLastActive","dateJoined","dateInserted","countDiscussions","countComments","searchResult","crumbs","breadcrumbs","SearchService","getSubType","excerpt","body","meta","MetaFactory","image","url","userCardInfo","getDomains","hasSpecificRecord","showSpecificRecordCrumbs","foundDomain","find","domain","getRecordTypes","includes","recordType","ALL_CONTENT_DOMAIN_NAME","CustomMetaComponent","MetaComponent","extraResults","subqueryExtraParams","subqueryMatchCount","siteDomain","href","startsWith","formatUrl","searchPath","makeSearchUrl","queryString","text","classesMeta","metasClasses","SmartLink","to","metaLink","ResultMeta","updateUser","insertUser","dateUpdated","labels","labelCodes","isForeign","extra","resultPaginationInfoClasses","marginTop","alignRight","ResultPaginationInfo","pages","currentPage","limit","total","resultStart","Math","min","resultEnd","c1","c2","numberFormattedForTranslations","searchMiscellaneousComponentsVariables","searchMiscellaneousComponentsClasses","marginBottom","sort","right","sortLabel","normal","SortAndPaginationInfo","sortOptions","sortValue","onSortChange","sortID","useUniqueID","valueOption","option","SelectBox","options","describedBy","widthOfParent","renderLeft","withLayout","panel","ariaHidden","ref","innerRef","panelAreaClasses","classesPanelWidget","panelWidgetClasses","widget","LayoutTypes","TWO_COLUMNS","oneColumnDown","THREE_COLUMNS","overflowFull","offset","minHeight","paddingBottom","paddingTop","areaOverlay","areaOverlayBefore","side","gradientColor","mainColors","bg","left","background","linearGradient","fade","areaOverlayAfter","panelVars","panelBackgroundVariables","config","render","isLeft","renderLeftPanelBackground","colors","contentTag","growMiddleBottom","topPadding","isFixed","childComponents","useScrollOffset","offsetClass","topOffset","bannerRect","useBannerContext","currentDevice","isCompact","isFullWidth","rightPanelCondition","logError","panelRef","useRef","measuredPanelTop","useMeasure","overflowOffset","useMemo","scrollY","panelOffsetClass","shouldRenderLeftPanel","leftTop","leftBottom","shouldRenderRightPanel","shouldRenderBreadcrumbs","panelClasses","noLeftPanel","noRightPanel","noBreadcrumbs","hasTopPadding","inheritHeightClass","ContentTag","container","breadcrumbsContainer","leftColumn","mainColumnMaxWidth","hasAdjacentPanel","isSticky","hasTwoAdjacentPanels","mainColumn","middleTop","rightTop","middleBottom","rightBottom","rightColumn","mainTop","mainBottom","difference","setA","setB","_difference","Set","elem","delete","PlacesSearchTypeFilter","registeredTypes","searchTypes","allTypes","flatten","v","values","allTypeSet","formTypes","types","formTypeSet","CheckboxGroup","grid","tight","registeredType","valueSet","isChecked","set","subset","has","isSuperset","Checkbox","target","allNewTypeSet","_union","add","union","remainingTypeSet","SearchPage","getDefaultFormValues","resetForm","useHistory","useLocation","searchScope","useSearchScope","initialized","listen","action","browserQuery","queryForm","parse","Number","isInteger","parseInt","toLocaleLowerCase","forEach","scope","setValue","useInitialQueryParamSync","debouncedSearch","useCallback","debounce","extraSearchAction","SEARCH_SCOPE_LOCAL","lastScope","isIsolatedType","SpecificRecordFilter","SpecificRecordComponent","currentFilter","PanelComponent","SpecificRecordPanel","specificRecordID","hasSpecificRecordID","getSpecificRecord","resultsHeader","newSort","getSortValues","needsResearch","domains","sortedNonIsolatedDomains","a","b","LinkContextProvider","linkContexts","DocumentTitle","TitleBar","Banner","isContentBanner","Container","searchBarClasses","heading","typographyClasses","pageTitle","component","EmptySearchScopeProvider","standardContainer","SearchBar","placeholder","newQuery","onSearch","optionComponent","SearchOption","triggerSearchOnClear","titleAsComponent","handleOnKeyDown","disableAutocomplete","buttonBaseClass","PRIMARY","needsPageTitle","overwriteSearchBar","preset","SearchBarPresets","BORDER","discussionID","newDomain","getName","ExportedSearchPage","Backgrounds","addSearchTypes","searchType","push","onReady"],"mappings":"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","file":"async~pages/search.min.js?e2b9f444ca1ed7579cb9","sourcesContent":["/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { debugHelper } from \"@library/styles/styleHelpers\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { componentThemeVariables } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { style } from \"@library/styles/styleShim\";\nimport { percent } from \"csx\";\n\nexport const drawerVariables = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const themeVars = componentThemeVariables(\"drawer\");\n\n    const spacing = {\n        button: {\n            padding: 9,\n        },\n        ...themeVars.subComponentStyles(\"spacing\"),\n    };\n\n    const fonts = {\n        size: globalVars.userContent.font.sizes.default,\n        weight: globalVars.fonts.weights.semiBold,\n        ...themeVars.subComponentStyles(\"fonts\"),\n    };\n\n    const sizing = {\n        icon: globalVars.userContent.font.sizes.default,\n        ...themeVars.subComponentStyles(\"sizing\"),\n    };\n\n    return { spacing, fonts, sizing };\n});\n\nexport const drawerClasses = useThemeCache(() => {\n    const vars = drawerVariables();\n    const debug = debugHelper(\"drawer\");\n\n    const root = style({\n        display: \"block\",\n        position: \"relative\",\n        ...debug.name(),\n    });\n\n    const contents = style({\n        position: \"relative\",\n        width: percent(100),\n        ...debug.name(\"contents\"),\n    });\n\n    const toggle = style({\n        fontWeight: vars.fonts.weight,\n        padding: `${styleUnit(vars.spacing.button.padding)} 0`,\n        width: percent(100),\n        textAlign: \"left\",\n        ...debug.name(\"toggle\"),\n    });\n    const icon = style({\n        display: \"inline-flex\",\n        minWidth: styleUnit(vars.sizing.icon),\n        fontSize: styleUnit(vars.fonts.size),\n        ...debug.name(\"icon\"),\n    });\n\n    return { root, contents, toggle, icon };\n});\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { drawerClasses } from \"@library/layout/drawer/drawerStyles\";\nimport Button from \"@library/forms/Button\";\nimport { ButtonTypes } from \"@library/forms/buttonTypes\";\nimport { uniqueIDFromPrefix } from \"@library/utility/idUtils\";\nimport classNames from \"classnames\";\n\nexport interface IDrawerProps {\n    title: string;\n    children: React.ReactNode;\n    className?: string;\n    disabled?: boolean;\n    contentsClassName?: string;\n}\n\nexport interface IState {\n    open: boolean;\n}\n\n/**\n * Creates a drop down menu\n */\nexport default class Drawer extends React.Component<IDrawerProps, IState> {\n    private id = uniqueIDFromPrefix(\"drawer\");\n    public constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n\n    public render() {\n        const chevronRight = `▸`;\n        const chevronDown = `▾`;\n        const classes = drawerClasses();\n        return (\n            <div className={classNames(\"drawer\", this.props.className, classes.root)}>\n                <Button\n                    id={this.buttonID}\n                    aria-controls={this.contentID}\n                    aria-expanded={this.state.open}\n                    disabled={this.props.disabled}\n                    baseClass={ButtonTypes.CUSTOM}\n                    className={classNames(\"drawer-toggle\", classes.toggle)}\n                    onClick={this.toggle}\n                >\n                    <span aria-hidden={true} className={classNames(\"drawer-icon\", \"icon-fake\", classes.icon)}>\n                        {this.state.open && chevronDown}\n                        {!this.state.open && chevronRight}\n                    </span>\n                    {this.props.title}\n                </Button>\n                {this.state.open && (\n                    <div\n                        id={this.contentID}\n                        aria-controlledby={this.buttonID}\n                        className={classNames(\"drawer-contents\", this.props.contentsClassName, classes.contents)}\n                    >\n                        {this.props.children}\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    private toggle = () => {\n        this.setState({\n            open: !this.state.open,\n        });\n    };\n\n    private get buttonID() {\n        return this.id + \"-button\";\n    }\n    private get contentID() {\n        return this.id + \"-content\";\n    }\n}\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { em, percent, px } from \"csx\";\nimport { styleFactory, variableFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\n\nexport const pageHeadingVariables = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const makeThemeVars = variableFactory(\"pageHeading\");\n\n    const font = makeThemeVars(\"font\", {\n        lineHeight: globalVars.lineHeights.condensed,\n    });\n\n    const cta = makeThemeVars(\"cta\", {\n        margin: \"1em\",\n    });\n\n    const dropDown = makeThemeVars(\"dropDown\", {\n        width: 150,\n    });\n\n    return {\n        font,\n        cta,\n        dropDown,\n    };\n});\n\nexport const pageHeadingClasses = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const vars = pageHeadingVariables();\n    const style = styleFactory(\"pageHeading\");\n\n    const root = style({\n        display: \"flex\",\n        width: percent(100),\n        lineHeight: vars.font.lineHeight,\n        alignItems: \"flex-start\",\n    });\n\n    const main = style(\"main\", {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        position: \"relative\",\n        width: percent(100),\n        flexGrow: 1,\n    });\n\n    const titleBar = style(\"titleBar\", {\n        display: \"flex\",\n        position: \"relative\",\n        alignItems: \"center\",\n    });\n\n    const actions = (fontSize?: number | null) => {\n        return style(\n            \"actions\",\n            {\n                display: \"flex\",\n                marginLeft: styleUnit(vars.cta.margin),\n                position: \"relative\",\n                alignSelf: \"flex-start\",\n                zIndex: 1,\n            },\n            fontSize\n                ? {\n                      top: \".5em\",\n                      fontSize: styleUnit(fontSize),\n                      transform: `translateY(-50%)`,\n                  }\n                : {},\n        );\n    };\n\n    const link = style(\"link\", {\n        display: \"block\",\n        height: styleUnit(globalVars.icon.sizes.default),\n        width: styleUnit(globalVars.icon.sizes.default),\n        color: \"inherit\",\n    });\n\n    const titleWrap = style(\"titleWrap\", {\n        position: \"relative\",\n    });\n\n    const actionButton = style(\"actionIcon\", {\n        width: px(20),\n        height: px(20),\n    });\n\n    const lineHeightCentering = (lineHeight: number) => {\n        // px value of line height\n        return style(\"lineHeightCentering\", {\n            top: styleUnit(lineHeight / 2),\n            transform: `translateY(-50%)`,\n        });\n    };\n\n    return {\n        root,\n        main,\n        titleBar,\n        actions,\n        link,\n        titleWrap,\n        actionButton,\n        lineHeightCentering,\n    };\n});\n","/**\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { createRef, useContext, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport BackLink from \"@library/routing/links/BackLink\";\nimport Heading from \"@library/layout/Heading\";\nimport ConditionalWrap from \"@library/layout/ConditionalWrap\";\nimport { pageHeadingClasses } from \"@library/layout/pageHeadingStyles\";\nimport { IWithFontSize, useFontSizeCalculator } from \"@library/layout/pageHeadingContext\";\nimport backLinkClasses from \"@library/routing/links/backLinkStyles\";\nimport { iconClasses } from \"@library/icons/iconStyles\";\n\ninterface IPageHeading {\n    title: React.ReactNode;\n    children?: React.ReactNode;\n    className?: string;\n    headingClassName?: string;\n    actions?: React.ReactNode;\n    includeBackLink?: boolean;\n    isCompactHeading?: boolean;\n}\n\n/**\n * A component representing a top level page heading.\n * Can be configured with an options menu and a backlink.\n */\n// export class PageHeading extends React.Component<IPageHeading> {\n\nexport function PageHeading(props: IPageHeading) {\n    const { includeBackLink = true, actions, children, headingClassName, title, className, isCompactHeading } = props;\n    const { fontSize } = useFontSizeCalculator();\n\n    const classes = pageHeadingClasses();\n    const linkClasses = backLinkClasses();\n\n    const backLink = isCompactHeading ? (\n        <BackLink\n            className={classNames(linkClasses.inHeading(fontSize), classes)}\n            chevronClass={iconClasses().chevronLeftSmallCompact}\n        />\n    ) : (\n        <BackLink className={classNames(linkClasses.inHeading(fontSize), classes)} />\n    );\n\n    return (\n        <div className={classNames(classes.root, className)}>\n            <div className={classes.main}>\n                {includeBackLink && backLink}\n                <ConditionalWrap condition={!!actions} className={classes.titleWrap}>\n                    <Heading depth={1} title={title} className={headingClassName}>\n                        {children}\n                    </Heading>\n                </ConditionalWrap>\n            </div>\n            {actions && <div className={classes.actions(fontSize)}>{actions}</div>}\n        </div>\n    );\n}\n\nexport default PageHeading;\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { styleFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { lineHeightAdjustment } from \"@library/styles/textUtils\";\nimport { CSSObject } from \"@emotion/css\";\nimport { pageHeadingVariables } from \"./pageHeadingStyles\";\nimport backLinkClasses from \"@library/routing/links/backLinkStyles\";\nimport { iconVariables } from \"@library/icons/iconStyles\";\nimport { Mixins } from \"@library/styles/Mixins\";\n\nexport const pageTitleClasses = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const vars = pageHeadingVariables();\n    const style = styleFactory(\"pageTitle\");\n\n    const root = style({\n        fontSize: globalVars.fonts.size.title,\n        lineHeight: vars.font.lineHeight,\n        display: \"block\",\n        ...Mixins.margin({\n            vertical: 0,\n        }),\n        ...lineHeightAdjustment(),\n    });\n\n    const iconSizing = iconVariables().chevronLeftCompact(true);\n\n    const smallBackLink = style(\"smallBackLink\", {\n        ...{\n            [`.${backLinkClasses().root}`]: {\n                height: styleUnit(iconSizing.height),\n            },\n            [`.${backLinkClasses().link}`]: {\n                height: styleUnit(iconSizing.height),\n            },\n        },\n    });\n\n    return {\n        root,\n        smallBackLink,\n    };\n});\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport qs from \"qs\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport isEqual from \"lodash/isEqual\";\nimport throttle from \"lodash/throttle\";\n\ninterface IStringMap {\n    [key: string]: any;\n}\n\ninterface IProps extends RouteComponentProps<any> {\n    value: IStringMap;\n    defaults?: IStringMap;\n    syncOnFirstMount?: boolean;\n}\n\n/**\n * Component for automatically peristing it's props into the window's querystring.\n */\nclass QueryString extends React.Component<IProps> {\n    public render(): React.ReactNode {\n        return null;\n    }\n\n    public componentDidMount() {\n        if (this.props.syncOnFirstMount) {\n            this.updateQueryString();\n        }\n    }\n\n    public componentDidUpdate(prevProps: IProps) {\n        if (\n            !isEqual(\n                this.getFilteredValue(prevProps.value, prevProps.defaults || {}),\n                this.getFilteredValue(this.props.value, this.props.defaults || {}),\n            )\n        ) {\n            this.updateQueryString();\n        }\n    }\n\n    /**\n     * Get a version of the query string object with only keys that have values.\n     */\n    private getFilteredValue(inputValue: IStringMap, defaults: IStringMap): IStringMap | null {\n        let filteredValue: IStringMap | null = null;\n\n        for (const [key, value] of Object.entries(inputValue)) {\n            if (value === null || value === undefined || value === \"\") {\n                continue;\n            }\n\n            if (key !== \"scope\" && defaults[key] === value) {\n                continue;\n            }\n\n            if (filteredValue === null) {\n                filteredValue = {};\n            }\n\n            filteredValue[key] = value;\n        }\n\n        return filteredValue;\n    }\n\n    /**\n     * Update the query string of the window.\n     *\n     * This is throttle and put in request animation frame so that it does not take priority over the UI.\n     */\n    private updateQueryString = throttle(() => {\n        const query = qs.stringify(this.getFilteredValue(this.props.value, this.props.defaults || {}));\n        this.props.history.replace({\n            ...this.props.location,\n            search: query,\n        });\n    }, 100);\n}\n\nexport default withRouter(QueryString);\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { Optionalize } from \"@library/@types/utils\";\nimport React, { useEffect, useState } from \"react\";\nimport { uniqueIDFromPrefix } from \"@library/utility/idUtils\";\nimport { IRadioInputAsButtonClasses } from \"@library/forms/radioAsButtons/RadioInputAsButton\";\nimport { RecordID } from \"@vanilla/utils\";\n\nexport interface IRadioGroupProps {\n    setData: (data: any) => void;\n    groupID?: string;\n    activeItem?: RecordID;\n    buttonActiveClass?: string;\n    buttonClass?: string;\n    classes: IRadioInputAsButtonClasses;\n}\n\nconst RadioGroupContext = React.createContext<IRadioGroupProps>({} as any);\nexport default RadioGroupContext;\n\ninterface IProps extends IRadioGroupProps {\n    children: React.ReactNode;\n}\n\nexport function RadioGroupProvider(props: IProps) {\n    const [groupID, setGroupID] = useState(props.groupID);\n\n    useEffect(() => {\n        if (!groupID) {\n            setGroupID(uniqueIDFromPrefix(\"radioGroup\"));\n        }\n    }, []);\n\n    return <RadioGroupContext.Provider value={{ ...props, groupID }}>{props.children}</RadioGroupContext.Provider>;\n}\n\n/**\n * HOC to inject DeviceContext as props.\n *\n * @param WrappedComponent - The component to wrap\n */\nexport function withRadioGroup<T extends IRadioGroupProps = IRadioGroupProps>(\n    WrappedComponent: React.ComponentType<T>,\n) {\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    const ComponentWithRadioGroup = (props: Optionalize<T, IRadioGroupProps>) => {\n        return (\n            <RadioGroupContext.Consumer>\n                {(context) => {\n                    // https://github.com/Microsoft/TypeScript/issues/28938\n                    return <WrappedComponent {...context} {...(props as T)} />;\n                }}\n            </RadioGroupContext.Consumer>\n        );\n    };\n    ComponentWithRadioGroup.displayName = `withRadioGroup(${displayName})`;\n    return ComponentWithRadioGroup;\n}\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport * as React from \"react\";\nimport { IRadioGroupProps, withRadioGroup } from \"@library/forms/radioAsButtons/RadioGroupContext\";\nimport classNames from \"classnames\";\nimport { visibility } from \"@library/styles/styleHelpersVisibility\";\nimport ButtonLoader from \"@library/loaders/ButtonLoader\";\nimport ConditionalWrap from \"@library/layout/ConditionalWrap\";\nimport { LiveMessage } from \"react-aria-live\";\nimport { sprintf } from \"sprintf-js\";\nimport { RecordID } from \"@vanilla/utils\";\n\nexport interface IBaseRadioProps {\n    label: string;\n    data: RecordID;\n    className?: string;\n    disabled?: boolean;\n    isLoading?: boolean;\n    icon?: React.ReactNode;\n    active?: boolean;\n    buttonAutoMinWidth?: boolean;\n}\n\nexport interface IRadioInputAsButtonClasses {\n    root: string;\n    items: string;\n    item: string;\n    label: string;\n    input: string;\n    labelWrap?: string;\n    leftTab?: string;\n    rightTab?: string;\n    iconWrap?: string;\n    buttonAutoMinWidth?: string;\n}\n\ninterface IRadioInputAsButtonInGroup extends IBaseRadioProps, IRadioGroupProps {}\n\n/**\n * Implement what looks like buttons, but what is semantically radio button. To be used in the RadioButtonsAsTabs component\n */\nexport function RadioInputAsButton(props: IRadioInputAsButtonInGroup) {\n    const { data, icon, buttonAutoMinWidth = false } = props;\n    const activeItem = props[\"activeItem\"];\n    const classes = props[\"classes\"] || { item: null, input: null, label: null };\n\n    const buttonAutoMinWidthClass = classes.buttonAutoMinWidth || \"\";\n\n    const onClick = (event) => {\n        props.setData(props.data);\n    };\n\n    const handleOnChange = (event) => {\n        return;\n    };\n\n    const onKeyDown = (event) => {\n        switch (event.key) {\n            case \"Enter\":\n            case \"Spacebar\":\n            case \" \":\n                props.setData(props.data);\n                break;\n        }\n    };\n\n    const active = props.active ?? (activeItem !== undefined ? activeItem === data : false);\n    const disabled = props.disabled || props.isLoading;\n\n    return (\n        <label className={classNames(props.className, classes.item)}>\n            <input\n                className={classNames(visibility().visuallyHidden, classes.input)}\n                type=\"radio\"\n                onClick={onClick}\n                onKeyDown={onKeyDown}\n                onChange={handleOnChange}\n                checked={active}\n                name={props.groupID}\n                value={props.label}\n                disabled={disabled}\n            />\n            <span\n                className={classNames(\n                    { isDisabled: props.disabled || props.isLoading },\n                    classes.label,\n                    active ? classNames(props[\"buttonActiveClass\"], \"isActive\") : props[\"buttonClass\"],\n                    { [buttonAutoMinWidthClass]: buttonAutoMinWidth },\n                )}\n            >\n                {props.isLoading ? (\n                    <ButtonLoader />\n                ) : (\n                    <>\n                        {icon && (\n                            <span aria-hidden={true} className={classes[\"iconWrap\"] ?? undefined}>\n                                {icon}\n                            </span>\n                        )}\n                        <ConditionalWrap condition={!!icon} className={classes[\"labelWrap\"]}>\n                            {props.label}\n                        </ConditionalWrap>\n                    </>\n                )}\n            </span>\n            {active && (\n                <LiveMessage\n                    clearOnUnmount={true}\n                    message={sprintf('Search for: \"%s\"', props.label)}\n                    aria-live=\"polite\"\n                />\n            )}\n        </label>\n    );\n}\n\nexport default withRadioGroup<IRadioInputAsButtonInGroup>(RadioInputAsButton);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { styleFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { negativeUnit } from \"@library/styles/styleHelpers\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { Mixins } from \"@library/styles/Mixins\";\nimport { userSelect } from \"@library/styles/styleHelpers\";\nimport { layoutVariables } from \"@library/layout/panelLayoutStyles\";\nimport { IRadioInputAsButtonClasses } from \"@library/forms/radioAsButtons/RadioInputAsButton\";\nimport { generateButtonStyleProperties } from \"@library/forms/styleHelperButtonGenerator\";\nimport { buttonVariables } from \"@library/forms/Button.variables\";\nimport { calc } from \"csx\";\n\nexport const radioInputAsButtonsClasses = useThemeCache(() => {\n    const style = styleFactory(\"radioInputAsButtons\");\n    const mediaQueries = layoutVariables().mediaQueries();\n    const globalVars = globalVariables();\n\n    const root = style({\n        display: \"block\",\n    });\n\n    const items = style(\"items\", {\n        display: \"flex\",\n        position: \"relative\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        ...Mixins.margin({\n            horizontal: negativeUnit(globalVars.gutter.half),\n            vertical: negativeUnit(globalVars.gutter.half),\n        }),\n        ...mediaQueries.xs({\n            flexWrap: \"wrap\",\n            justifyContent: \"stretch\",\n            width: calc(`100% + ${styleUnit(globalVars.gutter.size)}`),\n        }),\n    });\n\n    const item = style(\n        \"item\",\n\n        {\n            ...Mixins.margin({\n                all: globalVars.gutter.half,\n            }),\n        },\n        mediaQueries.xs({\n            display: \"flex\",\n            position: \"relative\",\n            alignItems: \"center\",\n            justifyContent: \"stretch\",\n            flexGrow: 1,\n        }),\n    );\n\n    const labelStateStyles = generateButtonStyleProperties({ buttonTypeVars: buttonVariables().primary });\n    const label = style(\"label\", {\n        ...userSelect(),\n        display: \"inline-flex\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        ...labelStateStyles,\n    });\n\n    const hiddenInputStates = generateButtonStyleProperties({\n        buttonTypeVars: buttonVariables().primary,\n        stateSuffix: ` + .${label}`,\n    });\n\n    const input = style(\"input\", {\n        ...Mixins.absolute.srOnly(),\n        ...hiddenInputStates,\n    });\n\n    return {\n        root,\n        items,\n        item,\n        label,\n        input,\n    } as IRadioInputAsButtonClasses;\n});\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { inputBlockClasses } from \"@library/forms/InputBlockStyles\";\nimport ScreenReaderContent from \"@library/layout/ScreenReaderContent\";\nimport { IRadioGroupProps, RadioGroupProvider } from \"@library/forms/radioAsButtons/RadioGroupContext\";\nimport classNames from \"classnames\";\nimport { buttonClasses } from \"@library/forms/buttonStyles\";\nimport { radioInputAsButtonsClasses } from \"@library/forms/radioAsButtons/radioInputAsButtons.styles\";\n\ninterface IProps extends IRadioGroupProps {\n    className?: string;\n    accessibleTitle: string;\n    children: React.ReactNode;\n    setData: (data: any) => void;\n    buttonActiveClass?: string; // class that goes directly on the actual \"button\" element\n    buttonClass?: string; // class that goes directly on the actual \"button\" element\n}\n\n/**\n * Implement what looks like buttons, but what is semantically radio buttons.\n */\nexport function RadioGroup(props: IProps) {\n    const classesButtons = buttonClasses();\n    const {\n        className,\n        accessibleTitle,\n        children,\n        setData,\n        activeItem,\n        classes = radioInputAsButtonsClasses(),\n        buttonActiveClass = classesButtons.primary,\n        buttonClass = classesButtons.standard,\n    } = props;\n    const classesInputBlock = inputBlockClasses();\n    const rootClass = classes[\"root\"] ?? \"\";\n\n    return (\n        <RadioGroupProvider\n            setData={setData}\n            activeItem={activeItem}\n            buttonActiveClass={buttonActiveClass}\n            buttonClass={buttonClass}\n            classes={classes}\n        >\n            <fieldset className={classNames(classesInputBlock.root, rootClass, className)}>\n                <ScreenReaderContent tag=\"legend\">{accessibleTitle}</ScreenReaderContent>\n                <div className={classes.items}>{children}</div>\n            </fieldset>\n        </RadioGroupProvider>\n    );\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { buttonVariables } from \"@library/forms/Button.variables\";\nimport { generateButtonStyleProperties } from \"@library/forms/styleHelperButtonGenerator\";\nimport { Mixins } from \"@library/styles/Mixins\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { negativeUnit } from \"@library/styles/styleHelpers\";\nimport { ColorsUtils } from \"@library/styles/ColorsUtils\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { styleFactory, variableFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { IThemeVariables } from \"@library/theming/themeReducer\";\nimport { calc, translate } from \"csx\";\nimport { CSSObject } from \"@emotion/css\";\n\nexport const searchInFilterVariables = useThemeCache((forcedVars?: IThemeVariables) => {\n    const makeThemeVars = variableFactory(\"searchInFilter\", forcedVars);\n    const vars = globalVariables();\n\n    const sizing = makeThemeVars(\"sizing\", {\n        height: 32,\n    });\n\n    const spacing = makeThemeVars(\"spacing\", {\n        margin: {\n            vertical: 4,\n            horizontal: 12,\n        },\n    });\n\n    return {\n        sizing,\n        spacing,\n    };\n});\n\nexport const searchInFilterClasses = useThemeCache(() => {\n    const style = styleFactory(\"searchInFilter\");\n    const globalVars = globalVariables();\n    const vars = searchInFilterVariables();\n\n    const root = style({\n        overflow: \"hidden\", // to truncate the extra margin\n    });\n\n    const items = style(\"items\", {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        ...Mixins.margin({\n            horizontal: vars.spacing.margin.horizontal,\n            vertical: vars.spacing.margin.vertical + 7,\n        }),\n        width: calc(`100% + ${styleUnit(2 * vars.spacing.margin.horizontal)}`),\n        transform: translate(negativeUnit(vars.spacing.margin.horizontal * 2)),\n    });\n\n    const item = style(\"item\", {\n        display: \"inline-flex\",\n        flexShrink: 1,\n        ...Mixins.margin(vars.spacing.margin),\n    });\n\n    // Style \"button\"\n    const labelStateStyles = generateButtonStyleProperties({\n        buttonTypeVars: buttonVariables().radio,\n    });\n\n    const label = style(\"label\", {\n        ...labelStateStyles,\n    });\n\n    // Style states on actual radio button\n    const hiddenInputStates = generateButtonStyleProperties({\n        buttonTypeVars: buttonVariables().radio,\n        stateSuffix: ` + .${label}`,\n    });\n\n    const input = style(\"input\", {\n        ...hiddenInputStates,\n    });\n\n    const separator = style(\"separator\", {\n        display: \"inline-flex\",\n        height: styleUnit(24),\n        width: styleUnit(globalVars.border.width),\n        backgroundColor: ColorsUtils.colorOut(globalVars.border.color),\n        ...Mixins.margin({\n            horizontal: vars.spacing.margin.horizontal,\n        }),\n    });\n\n    const labelWrap = style(\"labelWrap\", {\n        marginLeft: styleUnit(9),\n    });\n\n    const iconWrap = style(\"iconWrap\", {\n        display: \"inline-flex\",\n    });\n\n    const buttonAutoMinWidth = style(\"buttonAutoMinWidth\", {\n        minWidth: \"auto\",\n    });\n\n    return {\n        root,\n        items,\n        item,\n        label,\n        input,\n        separator,\n        iconWrap,\n        labelWrap,\n        buttonAutoMinWidth,\n    };\n});\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { t } from \"@vanilla/i18n\";\nimport React from \"react\";\nimport RadioInputAsButton from \"@library/forms/radioAsButtons/RadioInputAsButton\";\nimport { RadioGroup } from \"@vanilla/library/src/scripts/forms/radioAsButtons/RadioGroup\";\nimport { searchInFilterClasses } from \"@library/search/searchInFilter.styles\";\nimport { buttonClasses } from \"@library/forms/buttonStyles\";\n\nexport interface ISearchInButton {\n    label: string;\n    icon: React.ReactNode;\n    data: string;\n}\n\ninterface IProps {\n    activeItem?: string; // same type as data\n    setData: (data: string) => void;\n    filters: ISearchInButton[];\n    endFilters?: ISearchInButton[]; // At the end, separated by vertical line\n}\n\n/**\n * Implements filters for search page\n */\nexport function SearchInFilter(props: IProps) {\n    const { filters = [], setData, endFilters = [], activeItem } = props;\n    if (filters.length + endFilters.length <= 1) {\n        return null; // no filters, or only 1 is not helpful\n    }\n    const classes = searchInFilterClasses();\n    const buttonClass = buttonClasses().radio;\n    return (\n        <RadioGroup\n            accessibleTitle={t(\"Search in:\")}\n            setData={setData}\n            activeItem={activeItem}\n            classes={classes}\n            buttonClass={buttonClass}\n            buttonActiveClass={buttonClass}\n        >\n            <>\n                {filters.map((filter, i) => {\n                    return <RadioInputAsButton buttonAutoMinWidth={true} key={i} {...filter} />;\n                })}\n                {endFilters.length > 0 && (\n                    <>\n                        <span className={classes.separator} role=\"separator\" />\n                        {endFilters.map((filter, i) => {\n                            return <RadioInputAsButton buttonAutoMinWidth={true} key={i} {...filter} />;\n                        })}\n                    </>\n                )}\n            </>\n        </RadioGroup>\n    );\n}\n","/**\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license Proprietary\n */\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { searchResultsClasses } from \"@library/features/search/searchResultsStyles\";\nimport Translate from \"@library/content/Translate\";\nimport Paragraph from \"@library/layout/Paragraph\";\nimport { t } from \"@vanilla/i18n/src\";\nimport { useLayout } from \"@library/layout/LayoutContext\";\nimport PanelWidget from \"@library/layout/components/PanelWidget\";\n\ninterface IProps {\n    className?: string;\n    searchTerm?: string;\n    results: any[];\n    result: React.ComponentType<any>;\n    emptyMessage?: string;\n    headingLevel?: 2 | 3;\n    ResultWrapper?: React.ComponentType<any>;\n    rel?: string;\n}\n\n/**\n * Generates a single search result. Note that this template is used in other contexts, such as the flat category list\n */\nexport default function ResultList(props: IProps) {\n    const {\n        className,\n        searchTerm,\n        results,\n        emptyMessage = t(\"No results found.\"),\n        headingLevel,\n        ResultWrapper,\n        result,\n    } = props;\n\n    const hasResults = results && results.length > 0;\n\n    let content;\n    const classes = searchResultsClasses(useLayout().mediaQueries);\n\n    if (hasResults) {\n        const Result = result;\n        content = results.map((result, i) => {\n            return <Result {...result} key={i} headingLevel={headingLevel} rel={props.rel} />;\n        });\n    } else {\n        let message =\n            searchTerm === undefined || searchTerm === \"\" ? (\n                emptyMessage\n            ) : (\n                <Translate source=\"No results for '<0/>'.\" c0={searchTerm} />\n            );\n\n        content = (\n            <PanelWidget>\n                <Paragraph className={classNames(\"searchResults-noResults\", classes.noResults)}>{message}</Paragraph>\n            </PanelWidget>\n        );\n    }\n\n    if (ResultWrapper) {\n        return <ResultWrapper>{content}</ResultWrapper>;\n    } else {\n        const Tag = hasResults ? `ul` : `div`;\n        return <Tag className={classNames(\"searchResults\", classes.root, className)}>{content}</Tag>;\n    }\n}\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license Proprietary\n */\n\nimport React from \"react\";\nimport { LoadingRectangle, LoadingSpacer } from \"@vanilla/library/src/scripts/loaders/LoadingRectangle\";\nimport ScreenReaderContent from \"@library/layout/ScreenReaderContent\";\nimport { t } from \"@vanilla/i18n/src\";\n\ninterface IProps {\n    count: number;\n}\n\nexport function SearchPageResultsLoader(props: IProps) {\n    const { count } = props;\n    return (\n        <div>\n            {Array.from(new Array(count)).map((_, i) => {\n                return (\n                    <div key={i}>\n                        <ScreenReaderContent>{t(\"Loading\")}</ScreenReaderContent>\n                        <LoadingRectangle height={1} width={\"100%\"} />\n                        <LoadingSpacer height={10} width={\"100%\"} />\n                        <div style={{ display: \"flex\", flexDirection: \"row\", paddingLeft: 8 }}>\n                            <LoadingRectangle height={25} width={25} style={{ marginRight: 10, borderRadius: \"50%\" }} />\n                            <div>\n                                <LoadingRectangle height={15} width={150} />\n                                <LoadingSpacer height={5} width={\"100%\"} />\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                    }}\n                                >\n                                    <LoadingRectangle height={15} width={150} style={{ marginRight: 10 }} />\n                                    <LoadingRectangle height={15} width={80} style={{ marginRight: 10 }} />\n                                    <LoadingRectangle height={15} width={120} style={{ marginRight: 10 }} />\n                                </div>\n                            </div>\n                        </div>\n                        <LoadingSpacer height={15} width={400} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { styleFactory, variableFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { buttonGlobalVariables } from \"@library/forms/Button.variables\";\nimport { Mixins } from \"@library/styles/Mixins\";\n\nexport const simplePagerVariables = useThemeCache(() => {\n    const themeVars = variableFactory(\"simplePage\");\n    const buttonVars = buttonGlobalVariables();\n\n    const sizing = themeVars(\"sizing\", {\n        minWidth: buttonVars.sizing.minWidth,\n    });\n\n    const spacing = themeVars(\"spacing\", {\n        top: 32,\n        bottom: 26,\n        button: 8,\n    });\n\n    return {\n        spacing,\n        sizing,\n    };\n});\n\nexport const simplePagerClasses = useThemeCache(() => {\n    const vars = simplePagerVariables();\n    const style = styleFactory(\"simplePager\");\n    const { spacing } = vars;\n\n    const root = style({\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        ...Mixins.margin({\n            top: spacing.top - spacing.button,\n            bottom: spacing.bottom - spacing.button,\n        }),\n    });\n\n    const button = style(\"button\", {\n        margin: styleUnit(vars.spacing.button),\n        minWidth: styleUnit(vars.sizing.minWidth),\n        ...{\n            \"&.isSingle\": {\n                minWidth: styleUnit(vars.sizing.minWidth * 2),\n            },\n        },\n    });\n\n    return {\n        root,\n        button,\n    };\n});\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { t } from \"@library/utility/appUtils\";\nimport Button from \"@library/forms/Button\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { simplePagerClasses } from \"@library/navigation/simplePagerStyles\";\nimport ConditionalWrap from \"@library/layout/ConditionalWrap\";\n\ninterface IProps {\n    onNextClick?: React.MouseEventHandler;\n    onPreviousClick?: React.MouseEventHandler;\n}\n\n/**\n * Previous/next pagination for search results.\n */\nexport function SearchPagination(props: IProps) {\n    const { onNextClick, onPreviousClick } = props;\n\n    const isSingle = (onNextClick && !onPreviousClick) || (!onNextClick && onPreviousClick);\n    const classes = simplePagerClasses();\n    return (\n        <ConditionalWrap className={classes.root} condition={!!onPreviousClick || !!onNextClick}>\n            {onPreviousClick && (\n                <Button className={classNames(classes.button, { isSingle })} onClick={onPreviousClick}>\n                    {t(\"Previous\")}\n                </Button>\n            )}\n            {onNextClick && (\n                <Button className={classNames(classes.button, { isSingle })} onClick={onNextClick}>\n                    {t(\"Next\")}\n                </Button>\n            )}\n        </ConditionalWrap>\n    );\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license Proprietary\n */\n\nimport { LoadStatus } from \"@library/@types/api/core\";\nimport { AnalyticsData } from \"@library/analytics/AnalyticsData\";\nimport { IResult } from \"@library/result/Result\";\nimport ResultList from \"@library/result/ResultList\";\nimport { ResultMeta } from \"@library/result/ResultMeta\";\nimport { SearchPageResultsLoader } from \"@library/search/SearchPageResultsLoader\";\nimport { SearchPagination } from \"@library/search/SearchPagination\";\nimport { ISearchResult } from \"@library/search/searchTypes\";\nimport { SearchService } from \"@library/search/SearchService\";\nimport { useSearchForm } from \"@library/search/SearchContext\";\nimport { useLastValue } from \"@vanilla/react-utils\";\nimport { hashString } from \"@vanilla/utils\";\nimport React, { useLayoutEffect } from \"react\";\nimport { CoreErrorMessages } from \"@library/errorPages/CoreErrorMessages\";\nimport { IUserCardInfo } from \"@library/features/users/ui/PopupUserCard\";\nimport { IUser } from \"@vanilla/library/src/scripts/@types/api/users\";\nimport { ALL_CONTENT_DOMAIN_NAME } from \"@library/search/searchConstants\";\nimport { makeSearchUrl } from \"@library/search/SearchPageRoute\";\nimport { formatUrl, t } from \"@library/utility/appUtils\";\nimport qs from \"qs\";\nimport { sprintf } from \"sprintf-js\";\nimport SmartLink from \"@library/routing/links/SmartLink\";\nimport { metasClasses } from \"@library/styles/metasStyles\";\n\ninterface IProps {}\n\nexport function SearchPageResults(props: IProps) {\n    const { updateForm, results, form, getCurrentDomain } = useSearchForm<{}>();\n\n    const currentDomain = getCurrentDomain();\n\n    const status = results.status;\n    const lastStatus = useLastValue(status);\n    useLayoutEffect(() => {\n        if (lastStatus === LoadStatus.SUCCESS && status === LoadStatus.LOADING) {\n            window.scrollTo({ top: 0 });\n        }\n    }, [status, lastStatus]);\n\n    switch (results.status) {\n        case LoadStatus.PENDING:\n        case LoadStatus.LOADING:\n            return <SearchPageResultsLoader count={3} />;\n        case LoadStatus.ERROR:\n            return <CoreErrorMessages error={results.error} />;\n        case LoadStatus.SUCCESS:\n            const { next, prev } = results.data!.pagination;\n            let paginationNextClick: React.MouseEventHandler | undefined;\n            let paginationPreviousClick: React.MouseEventHandler | undefined;\n\n            if (next) {\n                paginationNextClick = (e) => {\n                    updateForm({ page: next });\n                };\n            }\n            if (prev) {\n                paginationPreviousClick = (e) => {\n                    updateForm({ page: prev });\n                };\n            }\n            return (\n                <>\n                    <AnalyticsData uniqueKey={hashString(form.query + JSON.stringify(results.data!.pagination))} />\n                    <ResultList\n                        result={currentDomain.ResultComponent}\n                        results={results.data!.results.map(mapResult)}\n                        ResultWrapper={currentDomain.ResultWrapper}\n                        rel={\"noindex nofollow\"}\n                    />\n                    <SearchPagination onNextClick={paginationNextClick} onPreviousClick={paginationPreviousClick} />\n                </>\n            );\n    }\n}\n\n/**\n * Map userInfo from API to IUserCardInfo\n * @param searchResult\n */\nfunction mapUserInfo(userInfo?: IUser): IUserCardInfo | undefined {\n    if (!userInfo) return undefined;\n\n    return {\n        email: userInfo.email,\n        userID: userInfo.userID,\n        name: userInfo.name,\n        photoUrl: userInfo.photoUrl,\n        dateLastActive: userInfo.dateLastActive || undefined,\n        dateJoined: userInfo.dateInserted,\n        label: userInfo.label,\n        countDiscussions: userInfo.countDiscussions || 0,\n        countComments: userInfo.countComments || 0,\n    };\n}\n\n/**\n * Map a search API response into what the <SearchResults /> component is expecting.\n *\n * @param searchResult The API search result to map.\n */\nfunction mapResult(searchResult: ISearchResult): IResult | undefined {\n    const crumbs = searchResult.breadcrumbs || [];\n    const icon = SearchService.getSubType(searchResult.type)?.icon;\n\n    return {\n        name: searchResult.name,\n        excerpt: searchResult.body,\n        icon,\n        meta: <MetaFactory searchResult={searchResult} />,\n        image: searchResult.image?.url,\n        url: searchResult.url,\n        location: crumbs,\n        userCardInfo: mapUserInfo(searchResult.userInfo),\n    };\n}\n\nfunction MetaFactory(props: { searchResult: ISearchResult }) {\n    const { searchResult } = props;\n    const { getDomains, getCurrentDomain, form, updateForm } = useSearchForm();\n    const currentDomain = getCurrentDomain();\n\n    const crumbs =\n        currentDomain.hasSpecificRecord?.(form) && !currentDomain.showSpecificRecordCrumbs?.()\n            ? []\n            : searchResult.breadcrumbs;\n\n    const foundDomain = getDomains().find((domain) => {\n        return domain.getRecordTypes().includes(searchResult.recordType) && domain.key !== ALL_CONTENT_DOMAIN_NAME;\n    });\n    const CustomMetaComponent = foundDomain?.MetaComponent;\n\n    let extraResults: React.ReactNode = null;\n    if (searchResult.subqueryExtraParams && searchResult.subqueryMatchCount && searchResult.subqueryMatchCount > 1) {\n        // We have \"extra\" results that can be drilled into.\n        // Mix the subquery with the existing form.\n        const query = {\n            ...form,\n            ...searchResult.subqueryExtraParams,\n        };\n        let root = searchResult.siteDomain ?? \"\";\n        if (root && window.location.href.startsWith(root)) {\n            root = formatUrl(\"\", true);\n        }\n        const searchPath = makeSearchUrl();\n        const queryString = qs.stringify(query);\n\n        const url = `${root}${searchPath}?${queryString}`;\n        const text = sprintf(t(\"%s results\"), searchResult.subqueryMatchCount);\n\n        const classesMeta = metasClasses();\n        extraResults = (\n            <SmartLink to={url} className={classesMeta.metaLink} style={{ fontWeight: \"bold\" }}>\n                {text}\n            </SmartLink>\n        );\n    }\n\n    if (CustomMetaComponent) {\n        return <CustomMetaComponent searchResult={searchResult} />;\n    } else {\n        return (\n            <ResultMeta\n                status={searchResult.status}\n                type={searchResult.recordType}\n                updateUser={searchResult.insertUser!}\n                dateUpdated={searchResult.dateInserted}\n                labels={searchResult.labelCodes}\n                crumbs={crumbs}\n                isForeign={searchResult.isForeign}\n                extra={extraResults}\n            />\n        );\n    }\n}\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { styleFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { Mixins } from \"@library/styles/Mixins\";\n\nexport const resultPaginationInfoClasses = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const style = styleFactory(\"resultPaginationInfo\");\n\n    const root = style({\n        ...Mixins.font(globalVars.meta.text),\n        marginTop: globalVars.gutter.half,\n    });\n\n    const alignRight = style(\"alignRight\", {\n        marginLeft: \"auto\",\n    });\n\n    return { root, alignRight };\n});\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { ILinkPages } from \"@library/navigation/SimplePagerModel\";\nimport { resultPaginationInfoClasses } from \"@library/result/ResultPaginationInfo.styles\";\nimport ScreenReaderContent from \"@library/layout/ScreenReaderContent\";\nimport Translate from \"@library/content/Translate\";\nimport { numberFormattedForTranslations } from \"@library/content/NumberFormatted\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n    pages?: ILinkPages;\n    alignRight?: boolean;\n}\n\n/**\n * Component for displaying pagination information in a format like \"11-20 of 563\".\n */\nexport function ResultPaginationInfo(props: IProps) {\n    const { pages, alignRight = false } = props;\n    if (!pages || pages.currentPage == null || pages.limit == null || pages.total == null) {\n        return null;\n    }\n\n    const { total = 0, currentPage, limit } = pages;\n\n    let resultStart = Math.min((currentPage - 1) * limit + 1, total);\n    let resultEnd = Math.min(resultStart + limit - 1, total);\n\n    const classes = resultPaginationInfoClasses();\n\n    return (\n        <div\n            className={classNames(classes.root, {\n                [classes.alignRight]: alignRight,\n            })}\n        >\n            <ScreenReaderContent>\n                <Translate source={\"Result(s) <0/> to <1/> of <2/>\"} c0={resultStart} c1={resultEnd} c2={total} />\n            </ScreenReaderContent>\n            <span aria-hidden={true}>\n                <Translate\n                    source={\"<0/>-<1/> of <2/>\"}\n                    c0={numberFormattedForTranslations({\n                        value: resultStart,\n                    })}\n                    c1={numberFormattedForTranslations({\n                        value: resultEnd,\n                    })}\n                    c2={numberFormattedForTranslations({\n                        value: total,\n                    })}\n                />\n            </span>\n        </div>\n    );\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { styleFactory, variableFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { Mixins } from \"@library/styles/Mixins\";\n\nexport const searchMiscellaneousComponentsVariables = useThemeCache(() => {\n    const makeThemeVars = variableFactory(\"searchComponents\");\n    const spacing = makeThemeVars(\"spacing\", {\n        margin: 12,\n    });\n    return {\n        spacing,\n    };\n});\n\nexport const searchMiscellaneousComponentsClasses = useThemeCache(() => {\n    const style = styleFactory(\"searchMiscellaneousComponents\");\n    const globalVars = globalVariables();\n    const vars = searchMiscellaneousComponentsVariables();\n\n    const root = style(\"root\", {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        marginBottom: styleUnit(vars.spacing.margin),\n    });\n\n    const sort = style(\"sort\", {\n        display: \"flex\",\n        ...Mixins.margin({\n            all: 0,\n            right: globalVars.gutter.size,\n        }),\n        flexGrow: 1,\n    });\n\n    const sortLabel = style(\"sortLabel\", {\n        alignSelf: \"center\",\n        marginRight: styleUnit(6),\n        ...Mixins.font({\n            color: globalVars.meta.text.color,\n            weight: globalVars.fonts.weights.normal,\n        }),\n    });\n\n    return {\n        root,\n        sort,\n        sortLabel,\n    };\n});\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\nimport SelectBox, { ISelectBoxItem, ISelectBoxProps } from \"@library/forms/select/SelectBox\";\nimport { ILinkPages } from \"@library/navigation/SimplePagerModel\";\nimport { ResultPaginationInfo } from \"@library/result/ResultPaginationInfo\";\nimport { searchMiscellaneousComponentsClasses } from \"@library/search/searchMiscellaneousComponents.styles\";\nimport { useUniqueID } from \"@library/utility/idUtils\";\nimport { t } from \"@vanilla/i18n/src\";\nimport * as React from \"react\";\n\nexport interface ISearchSort extends Omit<ISelectBoxProps, \"describedBy\" | \"widthOfParent\"> {}\n\nexport interface ISearchSortAndPages {\n    sortOptions?: ISelectBoxItem[];\n    sortValue?: string;\n    onSortChange?: (newSortValue: string) => void;\n    pages?: ILinkPages;\n    alignRight?: boolean;\n}\n\nexport function SortAndPaginationInfo(props: ISearchSortAndPages) {\n    const { sortOptions, sortValue, onSortChange, pages, alignRight } = props;\n    const classes = searchMiscellaneousComponentsClasses();\n    const sortID = useUniqueID(\"sortBy\");\n\n    const hasSort = sortOptions && sortOptions.length > 1;\n\n    if (!hasSort && !pages) {\n        return null;\n    }\n\n    const valueOption =\n        sortOptions?.find((option) => {\n            return option.value === sortValue;\n        }) ?? sortOptions?.[0];\n\n    let content = <ResultPaginationInfo pages={props.pages} alignRight={alignRight} />;\n\n    return (\n        <div className={classes.root}>\n            {sortOptions && sortOptions?.length > 0 && (\n                <label className={classes.sort}>\n                    <span id={sortID} className={classes.sortLabel}>{`${t(\"Sort By\")}: `}</span>\n                    <SelectBox\n                        options={sortOptions}\n                        value={valueOption}\n                        onChange={(option) => {\n                            onSortChange?.(option.value);\n                        }}\n                        describedBy={sortID}\n                        widthOfParent={false}\n                        renderLeft={false}\n                        className={classes.sort}\n                    />\n                </label>\n            )}\n            {pages && content}\n        </div>\n    );\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useLayout, withLayout } from \"@library/layout/LayoutContext\";\nimport { ILayoutContainer } from \"@library/layout/components/interface.layoutContainer\";\n\nexport function Panel(props: ILayoutContainer) {\n    const Tag = (props.tag as \"div\") || \"div\";\n    return (\n        <Tag\n            className={classNames(useLayout().classes.panel, props.className)}\n            aria-hidden={props.ariaHidden}\n            ref={props.innerRef}\n        >\n            {props.children}\n        </Tag>\n    );\n}\n\nexport default withLayout(Panel);\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { percent, calc, linearGradient, ColorHelper } from \"csx\";\nimport { styleFactory } from \"@library/styles/styleUtils\";\nimport { useThemeCache } from \"@library/styles/themeCache\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { lineHeightAdjustment } from \"@library/styles/textUtils\";\nimport { panelWidgetClasses } from \"@library/layout/panelWidgetStyles\";\nimport { ColorsUtils } from \"@library/styles/ColorsUtils\";\nimport { styleUnit } from \"@library/styles/styleUnit\";\nimport { LayoutTypes } from \"@library/layout/types/interface.layoutTypes\";\nimport { Mixins } from \"@library/styles/Mixins\";\n\nexport const panelAreaClasses = useThemeCache((mediaQueries) => {\n    const globalVars = globalVariables();\n    const style = styleFactory(\"panelArea\");\n    const classesPanelWidget = panelWidgetClasses(mediaQueries);\n\n    const root = style({\n        width: percent(100),\n        ...Mixins.padding({\n            horizontal: globalVariables().widget.padding,\n            vertical: globalVariables().widget.padding / 5,\n        }),\n        ...{\n            \".heading\": {\n                ...lineHeightAdjustment(),\n            },\n            [`&.inheritHeight > .${classesPanelWidget.root}`]: {\n                flexGrow: 1,\n            },\n            \"&.hasNoVerticalPadding\": {\n                ...Mixins.padding({ vertical: 0 }),\n            },\n            \"&.hasNoHorizontalPadding\": {\n                ...Mixins.padding({ horizontal: 0 }),\n            },\n            \"&.isSelfPadded\": {\n                ...Mixins.padding({ all: 0 }),\n            },\n            ...mediaQueries({\n                [LayoutTypes.TWO_COLUMNS]: {\n                    oneColumnDown: {\n                        ...Mixins.padding({\n                            horizontal: 0,\n                        }),\n                    },\n                },\n                [LayoutTypes.THREE_COLUMNS]: {\n                    oneColumnDown: {\n                        ...Mixins.padding({\n                            horizontal: 0,\n                        }),\n                    },\n                },\n            }),\n        },\n    });\n\n    const overflowFull = useThemeCache((offset: number) =>\n        style(\"overflowFull\", {\n            height: calc(`100vh - ${styleUnit(offset)}`),\n            overflow: \"auto\",\n            position: \"relative\",\n            minHeight: 100,\n            paddingBottom: 50,\n            paddingTop: 50,\n            marginTop: -50,\n        }),\n    );\n\n    const areaOverlay = style(\"areaOverlay\", {\n        position: \"relative\",\n    });\n\n    const areaOverlayBefore = useThemeCache((color?: ColorHelper, side?: \"left\" | \"right\") => {\n        let gradientColor = color ?? globalVars.mainColors.bg;\n\n        return style(\"areaOverlayBefore\", {\n            zIndex: 3,\n            top: 0,\n            left: 0,\n            right: 0,\n            position: \"absolute\",\n            height: 50,\n            background: linearGradient(\n                \"to top\",\n                ColorsUtils.colorOut(gradientColor.fade(0))!,\n                ColorsUtils.colorOut(gradientColor)!,\n            ),\n            width: percent(100),\n        });\n    });\n\n    const areaOverlayAfter = useThemeCache((color?: ColorHelper, side?: \"left\" | \"right\") => {\n        let gradientColor = color ?? globalVars.mainColors.bg;\n\n        return style(\"areaOverlayAfter\", {\n            zIndex: 1,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            position: \"absolute\",\n            height: 50,\n            background: linearGradient(\n                \"to bottom\",\n                ColorsUtils.colorOut(gradientColor.fade(0))!,\n                ColorsUtils.colorOut(gradientColor)!,\n            ),\n            width: percent(100),\n        });\n    });\n\n    return {\n        root: root + \" panelArea\",\n        overflowFull,\n        areaOverlayBefore,\n        areaOverlayAfter,\n        areaOverlay,\n    };\n});\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { panelAreaClasses } from \"@library/layout/panelAreaStyles\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { panelBackgroundVariables } from \"@library/layout/PanelBackground.variables\";\nimport { useLayout, withLayout } from \"@library/layout/LayoutContext\";\nimport { ILayoutContainer } from \"@library/layout/components/interface.layoutContainer\";\n\nexport function PanelOverflow(\n    props: ILayoutContainer & { offset: number; isLeft?: boolean; renderLeftPanelBackground?: boolean },\n) {\n    const classes = panelAreaClasses(useLayout().mediaQueries);\n    const panelVars = panelBackgroundVariables();\n    const color =\n        panelVars.config.render && !!props.isLeft && props.renderLeftPanelBackground\n            ? panelVars.colors.backgroundColor\n            : undefined;\n    return (\n        <div className={classes.areaOverlay}>\n            <div className={classes.areaOverlayBefore(color, \"left\")} />\n            <div ref={props.innerRef} className={classNames(props.className, classes.overflowFull(props.offset))}>\n                {props.children}\n            </div>\n            <div className={classes.areaOverlayAfter(color, \"right\")} />\n        </div>\n    );\n}\n\nexport default withLayout(PanelOverflow);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useLayout, withLayout } from \"@library/layout/LayoutContext\";\nimport { ILayoutContainer } from \"@library/layout/components/interface.layoutContainer\";\nimport { panelAreaClasses } from \"@library/layout/panelAreaStyles\";\n\nexport function PanelArea(props: ILayoutContainer) {\n    const Tag = (props.tag as \"div\") || \"div\";\n    const classes = panelAreaClasses(useLayout().mediaQueries);\n    return (\n        <Tag ref={props.innerRef} className={classNames(classes.root, props.className)}>\n            {props.children}\n        </Tag>\n    );\n}\n\nexport default withLayout(PanelArea);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { panelAreaClasses } from \"@library/layout/panelAreaStyles\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useLayout, withLayout } from \"@library/layout/LayoutContext\";\nimport { ILayoutContainer } from \"@library/layout/components/interface.layoutContainer\";\n\nexport function PanelAreaHorizontalPadding(props: ILayoutContainer) {\n    const Tag = props.tag || \"div\";\n    const classes = panelAreaClasses(useLayout().mediaQueries);\n    return <Tag className={classNames(classes.root, props.className, \"hasNoVerticalPadding\")}>{props.children}</Tag>;\n}\n\nexport default withLayout(PanelAreaHorizontalPadding);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useLayout, withLayout } from \"@library/layout/LayoutContext\";\nimport { ILayoutContainer } from \"@library/layout/components/interface.layoutContainer\";\nimport { panelWidgetClasses } from \"@library/layout/panelWidgetStyles\";\n\nexport function PanelWidgetHorizontalPadding(props: ILayoutContainer) {\n    const classes = panelWidgetClasses(useLayout().mediaQueries);\n    return <div className={classNames(classes.root, \"hasNoVerticalPadding\", props.className)}>{props.children}</div>;\n}\n\nexport default withLayout(PanelWidgetHorizontalPadding);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useScrollOffset } from \"@library/layout/ScrollOffsetContext\";\nimport { inheritHeightClass } from \"@library/styles/styleHelpers\";\nimport { useMeasure } from \"@vanilla/react-utils\";\nimport classNames from \"classnames\";\nimport React, { useMemo, useRef } from \"react\";\nimport { style } from \"@library/styles/styleShim\";\nimport { useBannerContext } from \"@library/banner/BannerContext\";\nimport { ILayoutProps, useLayout, withLayout } from \"@library/layout/LayoutContext\";\nimport { logError } from \"@vanilla/utils\";\nimport Panel from \"./components/Panel\";\nimport PanelOverflow from \"./components/PanelOverflow\";\nimport PanelArea from \"./components/PanelArea\";\nimport PanelAreaHorizontalPadding from \"./components/PanelAreaHorizontalPadding\";\nimport PanelWidgetHorizontalPadding from \"./components/PanelWidgetHorizontalPadding\";\n\nexport interface IPanelLayoutProps extends ILayoutProps {\n    className?: string;\n    toggleMobileMenu?: (isOpen: boolean) => void;\n    contentTag?: keyof JSX.IntrinsicElements;\n    growMiddleBottom?: boolean;\n    topPadding?: boolean;\n    isFixed?: boolean;\n    leftTop?: React.ReactNode;\n    leftBottom?: React.ReactNode;\n    middleTop?: React.ReactNode;\n    middleBottom?: React.ReactNode;\n    rightTop?: React.ReactNode;\n    rightBottom?: React.ReactNode;\n    breadcrumbs?: React.ReactNode;\n    renderLeftPanelBackground?: boolean;\n}\n\n/**\n * A responsive configurable Panel Layout.\n *\n * This works by declaring certain sections and having the layout place them for you.\n * See the example for usage. Just provide the sections you want to work with and the layout\n * will attempt to place them all in the best possible way.\n *\n * @layout Desktop\n * | Breadcrumbs |              |             |\n * | LeftTop     | MiddleTop    | RightTop    |\n * | LeftBottom  | MiddleBottom | RightBottom |\n *\n * @layout Tablet\n * | Breadcrumbs |\n * | LeftTop     | RightTop\n * | LeftBottom  | MiddleTop\n * |             | MiddleBottom\n * |             | RightBottom\n *\n * @layout Mobile\n *\n * HamburgerMenu / Panel - LeftBottom\n *\n * | Breadcrumbs  |\n * | LeftTop      |\n * | RightTop     |\n * | MiddleTop    |\n * | MiddleBottom |\n * | RightBottom  |\n */\nfunction PanelLayout(props: IPanelLayoutProps) {\n    const {\n        className,\n        contentTag = \"div\",\n        growMiddleBottom = false,\n        topPadding = true,\n        isFixed = true,\n        mediaQueries,\n        ...childComponents\n    } = props;\n\n    // Handle window resizes\n\n    // Measure the panel itself.\n    const { offsetClass, topOffset } = useScrollOffset();\n    const { bannerRect } = useBannerContext();\n    const {\n        classes = props.classes,\n        currentDevice,\n        isCompact,\n        isFullWidth,\n        rightPanelCondition = () => {\n            return false;\n        },\n    } = useLayout();\n\n    if (!classes) {\n        logError(`Classes not loaded for panel layout of type: ${props.type}, classes given: `, classes);\n    }\n\n    const panelRef = useRef<HTMLDivElement | null>(null);\n    const sidePanelMeasure = useMeasure(panelRef);\n    const measuredPanelTop = sidePanelMeasure.top;\n    const sidePanelDistanceFromTop = useMemo(() => {\n        return measuredPanelTop + window.scrollY; // Every time this changes, adjust for the scroll height.\n    }, [measuredPanelTop]);\n\n    const overflowOffset = sidePanelDistanceFromTop - topOffset - (bannerRect?.height ?? 0);\n\n    const panelOffsetClass = useMemo(() => style({ top: overflowOffset, label: \"stickyOffset\" }), [overflowOffset]);\n\n    // Calculate some rendering variables.\n\n    const shouldRenderLeftPanel: boolean = !isCompact && (!!childComponents.leftTop || !!childComponents.leftBottom);\n    const shouldRenderRightPanel: boolean = isFullWidth || rightPanelCondition(currentDevice, shouldRenderLeftPanel);\n    const shouldRenderBreadcrumbs: boolean = !!childComponents.breadcrumbs;\n\n    // Determine the classes we want to display.\n    const panelClasses = classNames(\n        classes.root,\n        { noLeftPanel: !shouldRenderLeftPanel },\n        { noRightPanel: !shouldRenderRightPanel },\n        { noBreadcrumbs: !shouldRenderBreadcrumbs },\n        className,\n        { hasTopPadding: topPadding },\n        growMiddleBottom ? inheritHeightClass() : \"\",\n    );\n\n    // If applicable, set semantic tag, like \"article\"\n    const ContentTag = contentTag;\n    return (\n        <div className={panelClasses}>\n            {shouldRenderBreadcrumbs && (\n                <div className={classNames(classes.container, classes.breadcrumbsContainer)}>\n                    {shouldRenderLeftPanel && <Panel className={classNames(classes.leftColumn)} ariaHidden={true} />}\n                    <PanelAreaHorizontalPadding\n                        className={classNames(classes.mainColumnMaxWidth, {\n                            hasAdjacentPanel: shouldRenderLeftPanel,\n                        })}\n                    >\n                        <PanelWidgetHorizontalPadding>{childComponents.breadcrumbs}</PanelWidgetHorizontalPadding>\n                    </PanelAreaHorizontalPadding>\n                </div>\n            )}\n\n            <main className={classNames(classes.main, props.growMiddleBottom ? inheritHeightClass() : \"\")}>\n                <div\n                    ref={panelRef}\n                    className={classNames(classes.container, props.growMiddleBottom ? inheritHeightClass() : \"\")}\n                >\n                    {!isCompact && shouldRenderLeftPanel && (\n                        <Panel\n                            className={classNames(classes.leftColumn, offsetClass, panelOffsetClass, {\n                                [classes.isSticky]: isFixed,\n                            })}\n                        >\n                            <PanelOverflow\n                                offset={overflowOffset}\n                                isLeft={true}\n                                renderLeftPanelBackground={props.renderLeftPanelBackground}\n                            >\n                                {childComponents.leftTop !== undefined && (\n                                    <PanelArea>{childComponents.leftTop}</PanelArea>\n                                )}\n                                {childComponents.leftBottom !== undefined && (\n                                    <PanelArea>{childComponents.leftBottom}</PanelArea>\n                                )}\n                            </PanelOverflow>\n                        </Panel>\n                    )}\n\n                    <ContentTag\n                        className={classNames(classes.content, classes.mainColumnMaxWidth, {\n                            hasAdjacentPanel: shouldRenderLeftPanel || shouldRenderRightPanel,\n                            hasTwoAdjacentPanels: shouldRenderLeftPanel && shouldRenderRightPanel,\n                        })}\n                    >\n                        <Panel\n                            className={classNames(\n                                classes.mainColumn,\n                                props.growMiddleBottom ? inheritHeightClass() : \"\",\n                            )}\n                        >\n                            {childComponents.middleTop !== undefined && (\n                                <PanelArea>{childComponents.middleTop}</PanelArea>\n                            )}\n                            {!shouldRenderLeftPanel && childComponents.leftTop !== undefined && (\n                                <PanelArea>{childComponents.leftTop}</PanelArea>\n                            )}\n                            {!shouldRenderRightPanel && childComponents.rightTop !== undefined && (\n                                <PanelArea>{childComponents.rightTop}</PanelArea>\n                            )}\n                            <PanelArea className={classNames({ [inheritHeightClass()]: props.growMiddleBottom })}>\n                                {childComponents.middleBottom}\n                            </PanelArea>\n                            {!shouldRenderRightPanel && childComponents.rightBottom !== undefined && (\n                                <PanelArea>{childComponents.rightBottom}</PanelArea>\n                            )}\n                        </Panel>\n                    </ContentTag>\n\n                    {shouldRenderRightPanel && (\n                        <Panel\n                            className={classNames(classes.rightColumn, offsetClass, panelOffsetClass, {\n                                [classes.isSticky]: isFixed,\n                            })}\n                        >\n                            <PanelOverflow offset={overflowOffset}>\n                                {childComponents.rightTop !== undefined && (\n                                    <PanelArea>{childComponents.rightTop}</PanelArea>\n                                )}\n                                {childComponents.rightBottom !== undefined && (\n                                    <PanelArea>{childComponents.rightBottom}</PanelArea>\n                                )}\n                            </PanelOverflow>\n                        </Panel>\n                    )}\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default withLayout(PanelLayout);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\nimport React from \"react\";\nimport PanelLayout, { IPanelLayoutProps } from \"@library/layout/PanelLayout\";\nimport { withLayout, LayoutProvider } from \"@library/layout/LayoutContext\";\nimport { LayoutTypes } from \"@library/layout/types/interface.layoutTypes\";\n\ninterface IProps\n    extends Omit<\n        IPanelLayoutProps,\n        \"leftTop\" | \"leftBottom\" | \"renderLeftPanelBackground\" | \"ILayoutProps\" | \"middleTop\" | \"middleBottom\"\n    > {\n    mainTop?: React.ReactNode; // mapped to middleTop\n    mainBottom?: React.ReactNode; // mapped to middleBottom\n}\n\nfunction TwoColumnLayout(props: IProps) {\n    return (\n        <LayoutProvider type={LayoutTypes.TWO_COLUMNS}>\n            <PanelLayout {...props} middleTop={props.mainTop} middleBottom={props.mainBottom} />\n        </LayoutProvider>\n    );\n}\n\nexport default withLayout(TwoColumnLayout);\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport CheckboxGroup from \"@vanilla/library/src/scripts/forms/CheckboxGroup\";\nimport Checkbox from \"@library/forms/Checkbox\";\nimport { useSearchForm } from \"@library/search/SearchContext\";\nimport flatten from \"lodash/flatten\";\nimport { onReady, t } from \"@vanilla/library/src/scripts/utility/appUtils\";\nimport { inputBlockClasses } from \"@vanilla/library/src/scripts/forms/InputBlockStyles\";\n\ninterface IProps {}\n\n//  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\n\nfunction isSuperset(set: Set<any>, subset: Set<any>) {\n    for (let elem of subset) {\n        if (!set.has(elem)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction union(setA: Set<any>, setB: Set<any>) {\n    let _union = new Set(setA);\n    for (let elem of setB) {\n        _union.add(elem);\n    }\n    return _union;\n}\n\nfunction difference(setA: Set<any>, setB: Set<any>) {\n    let _difference = new Set(setA);\n    for (let elem of setB) {\n        _difference.delete(elem);\n    }\n    return _difference;\n}\n\nexport function PlacesSearchTypeFilter(props: IProps) {\n    const { form, updateForm } = useSearchForm<{}>();\n    const registeredTypes = PlacesSearchTypeFilter.searchTypes;\n    const allTypes = flatten(registeredTypes.map((v) => v.values));\n    const allTypeSet = new Set(allTypes);\n\n    if (registeredTypes.length <= 1) {\n        return null;\n    }\n\n    const formTypes = form.types;\n    const formTypeSet = new Set(formTypes ?? []);\n\n    const classesInputBlock = inputBlockClasses();\n    return (\n        <CheckboxGroup label={t(\"What to search\")} grid={true} tight={true}>\n            {registeredTypes.map((registeredType, i) => {\n                const valueSet = new Set(registeredType.values);\n\n                const isChecked = formTypeSet.size === 0 || isSuperset(formTypeSet, valueSet);\n                return (\n                    <Checkbox\n                        label={registeredType.label}\n                        key={i}\n                        onChange={(e) => {\n                            const newCheck = e.target.checked;\n                            if (newCheck) {\n                                // This works because of the isSuperset check above\n                                const allNewTypeSet = union(valueSet, formTypeSet);\n                                updateForm({ types: Array.from(allNewTypeSet) });\n                            } else {\n                                // There are two cases: this is the last checked box in which case other\n                                // boxes needed to be checked, or this is not the last checked box.\n                                const remainingTypeSet = difference(formTypeSet, valueSet);\n                                if (remainingTypeSet.size === 0) {\n                                    const allNewTypeSet = difference(allTypeSet, valueSet);\n                                    updateForm({ types: Array.from(allNewTypeSet) as string[] });\n                                } else {\n                                    updateForm({ types: Array.from(remainingTypeSet) as string[] });\n                                }\n                            }\n                        }}\n                        checked={isChecked}\n                        className={classesInputBlock.root}\n                    />\n                );\n            })}\n        </CheckboxGroup>\n    );\n}\n\ninterface IPlacesSearchType {\n    label: string;\n    values: string[];\n}\n\nPlacesSearchTypeFilter.searchTypes = [] as IPlacesSearchType[];\n\nPlacesSearchTypeFilter.addSearchTypes = (searchType: IPlacesSearchType) => {\n    PlacesSearchTypeFilter.searchTypes.push(searchType);\n};\n\nonReady(() => {\n    PlacesSearchTypeFilter.addSearchTypes({\n        label: t(\"Categories\"),\n        values: [\"category\"],\n    });\n});\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { LoadStatus } from \"@library/@types/api/core\";\nimport SearchBar from \"@library/features/search/SearchBar\";\nimport { searchBarClasses } from \"@library/features/search/searchBarStyles\";\nimport SearchOption from \"@library/features/search/SearchOption\";\nimport { ButtonTypes } from \"@library/forms/buttonTypes\";\nimport TitleBar from \"@library/headers/TitleBar\";\nimport Container from \"@library/layout/components/Container\";\nimport Drawer from \"@library/layout/drawer/Drawer\";\nimport { PageHeading } from \"@library/layout/PageHeading\";\nimport { pageTitleClasses } from \"@library/layout/pageTitleStyles\";\nimport DocumentTitle from \"@library/routing/DocumentTitle\";\nimport QueryString from \"@library/routing/QueryString\";\nimport { SearchInFilter } from \"@library/search/SearchInFilter\";\nimport { SearchPageResults } from \"@library/search/SearchPageResults\";\nimport { SortAndPaginationInfo } from \"@library/search/SortAndPaginationInfo\";\nimport { typographyClasses } from \"@library/styles/typographyStyles\";\n// This new page must have our base reset in place.\nimport \"@library/theming/reset\";\nimport { t, formatUrl } from \"@library/utility/appUtils\";\nimport Banner from \"@vanilla/library/src/scripts/banner/Banner\";\nimport { useSearchForm } from \"@library/search/SearchContext\";\nimport { useLastValue } from \"@vanilla/react-utils\";\nimport classNames from \"classnames\";\nimport debounce from \"lodash/debounce\";\nimport qs from \"qs\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router\";\nimport TwoColumnLayout from \"@library/layout/TwoColumnLayout\";\nimport { LayoutProvider, useLayout } from \"@library/layout/LayoutContext\";\nimport PanelWidget from \"@library/layout/components/PanelWidget\";\nimport PanelWidgetHorizontalPadding from \"@library/layout/components/PanelWidgetHorizontalPadding\";\nimport { LayoutTypes } from \"@library/layout/types/interface.layoutTypes\";\nimport {\n    EmptySearchScopeProvider,\n    SEARCH_SCOPE_LOCAL,\n    useSearchScope,\n} from \"@library/features/search/SearchScopeContext\";\nimport ConditionalWrap from \"@library/layout/ConditionalWrap\";\nimport { SearchBarPresets } from \"@library/banner/SearchBarPresets\";\nimport { LinkContextProvider } from \"@library/routing/links/LinkContextProvider\";\nimport History from \"history\";\nimport { Backgrounds } from \"@library/layout/Backgrounds\";\nimport { PlacesSearchTypeFilter } from \"@dashboard/components/panels/PlacesSearchTypeFilter\";\n\ninterface IProps {\n    placeholder?: string;\n}\n\nfunction SearchPage(props: IProps) {\n    const {\n        form,\n        updateForm,\n        search,\n        results,\n        getDomains,\n        getCurrentDomain,\n        getDefaultFormValues,\n    } = useSearchForm<{}>();\n    const { isCompact } = useLayout();\n    const classes = pageTitleClasses();\n    useInitialQueryParamSync();\n\n    const currentDomain = getCurrentDomain();\n\n    const debouncedSearch = useCallback(\n        debounce(() => {\n            search();\n            currentDomain.extraSearchAction?.();\n        }, 800),\n        [search],\n    );\n\n    let scope = useSearchScope().value?.value ?? SEARCH_SCOPE_LOCAL;\n    const lastScope = useLastValue(scope);\n    if (currentDomain.isIsolatedType()) {\n        scope = SEARCH_SCOPE_LOCAL;\n    }\n\n    let currentFilter = <currentDomain.PanelComponent />;\n\n    const hasSpecificRecord = currentDomain.hasSpecificRecord?.(form);\n\n    let SpecificRecordFilter;\n    if (hasSpecificRecord && currentDomain.SpecificRecordPanel) {\n        SpecificRecordFilter = currentDomain.SpecificRecordPanel;\n    }\n\n    let SpecificRecordComponent;\n    if (hasSpecificRecord && currentDomain.SpecificRecordComponent) {\n        SpecificRecordComponent = currentDomain.SpecificRecordComponent;\n    }\n\n    let hasSpecificRecordID = typeof currentDomain.getSpecificRecord?.(form) === \"number\";\n    let specificRecordID;\n    if (hasSpecificRecord && hasSpecificRecordID) {\n        specificRecordID = currentDomain.getSpecificRecord?.(form);\n    }\n\n    const resultsHeader = (\n        <PanelWidgetHorizontalPadding>\n            <SortAndPaginationInfo\n                pages={results.data?.pagination}\n                sortValue={form.sort}\n                onSortChange={(newSort) => updateForm({ sort: newSort })}\n                sortOptions={currentDomain?.getSortValues() ?? []}\n            />\n        </PanelWidgetHorizontalPadding>\n    );\n\n    const { needsResearch } = form;\n    useEffect(() => {\n        // Trigger new search\n        if (needsResearch || (lastScope && lastScope !== scope)) {\n            search();\n            currentDomain.extraSearchAction?.();\n        }\n    }, [search, needsResearch, lastScope, scope, currentDomain]);\n\n    const domains = getDomains();\n    const sortedNonIsolatedDomains = domains\n        .filter((domain) => !domain.isIsolatedType())\n        .sort((a, b) => a.sort - b.sort);\n\n    return (\n        // Add a context provider so that smartlinks within search use dynamic navigation.\n        <LinkContextProvider linkContexts={[formatUrl(\"/search\", true)]}>\n            <DocumentTitle title={form.query ? form.query : t(\"Search Results\")}>\n                <TitleBar title={t(\"Search\")} />\n                <Banner isContentBanner />\n                <Container>\n                    <QueryString\n                        value={{ ...form, initialized: undefined, scope, needsResearch: undefined }}\n                        defaults={getDefaultFormValues()}\n                    />\n                    <TwoColumnLayout\n                        className=\"hasLargePadding\"\n                        mainTop={\n                            <>\n                                <PanelWidget>\n                                    <PageHeading\n                                        className={classNames(\n                                            \"searchBar-heading\",\n                                            searchBarClasses({}).heading,\n                                            classes.smallBackLink,\n                                        )}\n                                        headingClassName={classNames(typographyClasses().pageTitle)}\n                                        title={\"Search\"}\n                                        includeBackLink={true}\n                                        isCompactHeading={true}\n                                    />\n                                    <ConditionalWrap\n                                        condition={currentDomain.isIsolatedType()}\n                                        component={EmptySearchScopeProvider}\n                                    >\n                                        <div className={searchBarClasses({}).standardContainer}>\n                                            <SearchBar\n                                                placeholder={props.placeholder}\n                                                onChange={(newQuery) => updateForm({ query: newQuery })}\n                                                value={form.query}\n                                                onSearch={debouncedSearch}\n                                                isLoading={results.status === LoadStatus.LOADING}\n                                                optionComponent={SearchOption}\n                                                triggerSearchOnClear={true}\n                                                titleAsComponent={t(\"Search\")}\n                                                handleOnKeyDown={(event) => {\n                                                    if (event.key === \"Enter\") {\n                                                        debouncedSearch();\n                                                    }\n                                                }}\n                                                disableAutocomplete={true}\n                                                buttonBaseClass={ButtonTypes.PRIMARY}\n                                                needsPageTitle={false}\n                                                overwriteSearchBar={{\n                                                    preset: SearchBarPresets.BORDER,\n                                                }}\n                                            />\n                                        </div>\n                                        {hasSpecificRecord && hasSpecificRecordID ? (\n                                            <SpecificRecordComponent discussionID={specificRecordID} />\n                                        ) : null}\n                                    </ConditionalWrap>\n                                    {!hasSpecificRecord && (\n                                        <SearchInFilter\n                                            setData={(newDomain) => {\n                                                updateForm({ domain: newDomain });\n                                            }}\n                                            activeItem={form.domain}\n                                            filters={sortedNonIsolatedDomains.map((domain) => {\n                                                return {\n                                                    label: domain.getName?.() || domain.name,\n                                                    icon: domain.icon,\n                                                    data: domain.key,\n                                                };\n                                            })}\n                                            endFilters={domains\n                                                .filter((domain) => domain.isIsolatedType())\n                                                .map((domain) => {\n                                                    return {\n                                                        label: domain.name,\n                                                        icon: domain.icon,\n                                                        data: domain.key,\n                                                    };\n                                                })}\n                                        />\n                                    )}\n                                    {PlacesSearchTypeFilter.searchTypes.length > 0 && currentDomain.heading}\n                                </PanelWidget>\n                                {isCompact && (\n                                    <PanelWidgetHorizontalPadding>\n                                        <Drawer title={t(\"Filter Results\")}>{currentFilter}</Drawer>\n                                    </PanelWidgetHorizontalPadding>\n                                )}\n                                {resultsHeader}\n                            </>\n                        }\n                        mainBottom={<SearchPageResults />}\n                        rightTop={\n                            !isCompact && (\n                                <PanelWidget>\n                                    {hasSpecificRecord ? <SpecificRecordFilter /> : currentFilter}\n                                </PanelWidget>\n                            )\n                        }\n                    />\n                </Container>\n            </DocumentTitle>\n        </LinkContextProvider>\n    );\n}\n\nfunction useInitialQueryParamSync() {\n    const { updateForm, resetForm, form, search } = useSearchForm<{}>();\n    const history = useHistory();\n    const location = useLocation();\n    const searchScope = useSearchScope();\n\n    const { initialized } = form;\n\n    useEffect(() => {\n        const unregisterListener = history.listen((location: History.Location<any>, action: History.Action) => {\n            // Whenever the history object is updated, we will reinitialize the form.\n            if (action === \"POP\" || action === \"PUSH\") {\n                resetForm();\n            }\n        });\n        return unregisterListener;\n    }, []);\n\n    useEffect(() => {\n        if (initialized) {\n            // We're already initialized.\n            return;\n        }\n\n        const { search: browserQuery } = location;\n        const queryForm: any = qs.parse(browserQuery.replace(/^\\?/, \"\"));\n\n        for (const [key, value] of Object.entries(queryForm)) {\n            if (value === \"true\") {\n                queryForm[key] = true;\n            }\n\n            if (value === \"false\") {\n                queryForm[key] = false;\n            }\n\n            if (typeof value === \"string\" && Number.isInteger(parseInt(value, 10))) {\n                queryForm[key] = parseInt(value, 10);\n            }\n\n            if (key.toLocaleLowerCase() === \"search\") {\n                queryForm[\"query\"] = queryForm[key];\n            }\n\n            if (key === \"discussionID\") {\n                queryForm.domain = \"discussions\";\n            }\n        }\n\n        const blockedKeys = [\"needsResearch\", \"initialized\"];\n        blockedKeys.forEach((key) => {\n            if (queryForm[key] !== undefined) {\n                delete queryForm[key];\n            }\n        });\n\n        if (typeof queryForm.scope === \"string\") {\n            searchScope.setValue?.(queryForm.scope);\n        }\n\n        queryForm.initialized = true;\n\n        updateForm(queryForm);\n        // Only for first initialization.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [initialized]);\n}\n\nexport default function ExportedSearchPage(props: IProps) {\n    return (\n        <LayoutProvider type={LayoutTypes.TWO_COLUMNS}>\n            <Backgrounds />\n            <SearchPage {...props} />\n        </LayoutProvider>\n    );\n}\n"],"sourceRoot":""}