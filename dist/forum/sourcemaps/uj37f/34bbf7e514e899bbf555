{"version":3,"sources":["webpack://vanilla-forum/./packages/vanilla-utils/src/fileUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/mathUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/stringUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/systemUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/typeUtils.ts","webpack://vanilla-forum/./applications/vanilla/src/scripts/search/CommunityPostTypeFilter.tsx","webpack://vanilla-forum/./node_modules/moment/locale sync en","webpack://vanilla-forum/./packages/vanilla-i18n/src/localeStore.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/LocaleProvider.tsx","webpack://vanilla-forum/./packages/vanilla-i18n/src/translationStore.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/ContentTranslator.tsx","webpack://vanilla-forum/./packages/vanilla-i18n/src/ContentTranslationProvider.tsx","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/domData.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/emoji.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/EscapeListener.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/events.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/FocusWatcher.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/sanitization.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/scripts.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/shadowDom.tsx","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/TabHandler.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/index.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/Hoverable.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useMeasure.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useCollisionDetector.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useComponentDebug.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useDomNodeAttachment.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useEscapeListener.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useFocusWatcher.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useLastValue.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useThrowError.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/deconstructAttributesFromElement.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/debugUtils.ts","webpack://vanilla-forum/./plugins/QnA/src/scripts/entries/common.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/compatibilityStyles/cssOut.ts","webpack://vanilla-forum/./build/entries/public-path.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/mounting.tsx"],"names":["IMAGE_REGEX","isFileImage","file","test","type","logDebug","name","simplifyFraction","numerator","denominator","gcd","findGCD","a","b","shorthand","hashString","str","split","reduce","prevHash","currVal","charCodeAt","uuidv4","replace","c","r","Math","random","toString","slugify","options","whiteSpaceNormalizeRegexp","allowMultipleDashes","normalize","trim","toLocaleLowerCase","normalizeString","splitStringLoosely","toSplit","splitWith","normalizedName","normalizedSplitTerm","normalizedPieces","RegExp","charactersUsed","map","piece","start","length","substring","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","match","exec","rawMatch","OS","SAFE_PROTOCOL_REGEX","sanitizeUrl","url","capitalizeFirstLetter","charAt","toUpperCase","slice","guessOperatingSystem","userAgent","navigator","vendor","window","opera","ANDROID","MSStream","IOS","UNKNOWN","indexArrayByKey","array","key","object","item","push","notEmpty","value","ensureString","maybeString","TypeError","forceInt","fallback","result","Number","parseInt","isNaN","CommunityPostTypeFilter","props","useSearchForm","form","updateForm","registeredTypes","postTypes","allTypes","flatten","v","values","formTypes","types","label","grid","tight","registeredType","i","noTypesSelected","isChecked","forEach","formType","includes","checked","onChange","e","target","newTypesSet","Set","typeToPush","add","size","undefined","Array","from","delete","newTypes","filter","addPostType","postType","onReady","t","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","currentLocale","localeStore","callbacks","getLocales","setCurrentLocale","localeKey","callback","getCurrentLocale","getJSLocaleKey","loadLocales","locales","LocaleContext","React","createContext","LocaleProvider","useState","setLocales","logWarning","useEffect","Provider","children","useLocaleInfo","useContext","translationStore","internalTranslationDebugValue","translationDebug","newValue","loadTranslations","translations","translate","defaultTranslation","substr","message","TranslationPropertyType","NullContentTranslator","logError","context","shouldDisplay","Translator","_TranslationComponent","ContentTranslationProvider","setTranslator","dataMap","WeakMap","setData","element","initialValue","has","get","set","getData","defaultValue","attributeString","hasAttribute","getAttribute","emojiSupportedCache","isEmojiSupported","canvas","document","createElement","getContext","ctx","fillText","getImageData","data","emojiOptions","className","convertToSafeEmojiCharacters","stringOrNode","twemoji","parse","EscapeListener","root","returnElement","addEventListener","keydownListener","removeEventListener","event","contains","activeElement","preventDefault","focus","delegatedEventListeners","delegateEvent","eventName","filterSelector","scopeSelector","scope","functionKey","querySelector","HTMLElement","eventHash","wrappedCallback","closest","call","removeDelegatedEvent","getDraggedFile","dataTransfer","files","getPastedFile","clipboardData","items","getAsFile","Boolean","FocusWatcher","watchedNode","changeHandler","handleFocusOut","handleFocusIn","handleClick","checkDomTreeHasFocus","triggeringElement","checkDomTreeWasClicked","clickedElement","this","setTimeout","relatedTarget","explicitOriginalTarget","body","isWatchedInBody","isFocusedInBody","isModal","getElementById","hasFocus","escapeHTML","div","appendChild","createTextNode","innerHTML","ensureHtmlElement","selectorOrElement","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","Promise","reject","existingScript","head","getElementsByTagName","script","src","onerror","error","timeout","onload","clearTimeout","prepareShadowRoot","cloneElement","newElementTag","html","ns","append","startsWith","remove","browserEscapesNoScript","escapedString","child","childNodes","nodeValue","unescapeHTML","newElement","classList","parentNode","insertBefore","attachShadow","mode","TabHandler","documentElement","excludedElements","excludedRoots","exemption","elementToFilter","excludedRoot","tabbableElements","tabbable","reverse","allowLooping","tabbables","createExcludeFilterWithExemption","currentTabIndex","indexOf","targetIndex","filterAllExcluded","smoothscroll","polyfill","Hoverable","hasExecuted","once","onHover","hoverTimeout","handleHover","duration","dismissTimeout","onMouseEnter","mouseEnterHandler","onMouseLeave","mouseLeaveHandler","Component","EMPTY_RECT","x","y","width","height","top","right","bottom","left","toJSON","useMeasure","ref","adjustForScrollOffset","watchRef","bounds","setContentRect","refWatch","current","useLayoutEffect","animationFrameId","measure","requestAnimationFrame","rect","getBoundingClientRect","scrollY","JSON","stringify","resizeListener","debounce","ro","ResizeObserver","observe","cancelAnimationFrame","disconnect","cancel","doRectsOverlap","rect1","rect2","isEmptyRect","hasHorizontalOverlap","hasVerticalOverlap","useCollisionDetector","collisionSourceRef","useRef","sourceMeasure","vBoundary1Ref","vBoundary1Measure","vBoundary2Ref","vBoundary2Measure","hBoundary1Ref","hBoundary1Measure","hBoundary2Ref","hBoundary2Measure","hasCollision","useDebugValue","useComponentDebug","debugValue","useDomNodeAttachment","domNodes","node","useEscapeListener","actualRoot","escapeListener","stop","useFocusWatcher","bypass","focusWatcher","useLastValue","useThrowError","setError","deconstructAttributesFromElement","classAsClassName","hrefAsTo","attrs","attributes","attr","hasOwnProperty","internalDebugValue","debug","console","log","logDebugConditionnal","outputLog","warn","SearchService","addSubType","icon","recordType","cssOut","selector","objects","cssRaw","flattenNests","__webpack_public_path__","assetUrl","hasRendered","portals","PORTAL_MANAGER_ID","PortalContext","Fragment","applySharedPortalContext","renderPortals","PortalManager","portal","ReactDOM","createPortal","component","container","render","mountReact","bypassPortalManager","unmountBeforeRender","unmountComponentAtNode","setImmediate","cleanupContainer","mountPoint","clearContents","overwrite","parentElement","firstElementChild","mountReactMultiple","components","toCleanup","cleanup","mountPortal","containerID","asRealPortal"],"mappings":"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","file":"addons/qna-common.min.js?34bbf7e514e899bbf555","sourcesContent":["/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { logDebug } from \"./debugUtils\";\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    logDebug(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get various information about a fraction.\n *\n * @param numerator The fraction numerator.\n * @param denominator The fraction denominator.\n */\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n","/**\n * Utilities related to strings.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport mergeWith from \"lodash/mergeWith\";\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\n/**\n * Generate a RFC4122 compliant uuid. NOTE!!! Not cryptographically secure.\n *\n * This does not use a true random source (Eg. using Math.random()).\n * To use a better source would require dropping IE in order to use the crypto module.\n */\nexport function uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0,\n            v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n\n/**\n * Convert a camel case variable to a title case label.\n *\n * @param str - The string to labelize.\n * @returns Returns a new string suitable for a label.\n */\nexport function labelize(str: string): string {\n    /**\n     * $labelCode = preg_replace('`(?<![A-Z0-9])([A-Z0-9])`', ' $1', $labelCode);\n     * $labelCode = preg_replace('`([A-Z0-9])(?=[a-z])`', ' $1', $labelCode);\n     * $labelCode = preg_replace('`\\s+`', ' ', $labelCode);\n     * $labelCode = ucfirst(trim($labelCode));\n     */\n    let label = str.replace(/([^A-Z0-9])([A-Z0-9])/, \"$1 $2\");\n    label = label.replace(/([A-Z0-9])(?=[a-z])/, \" $1\");\n    label = label.replace(/[_-]/, \" \");\n    label = label.replace(/\\s+/, \" \");\n    let parts = label.split(\" \");\n    label = parts.map((s) => s.charAt(0).toLocaleUpperCase() + s.slice(1)).join(\" \");\n    return label;\n}\n\n/**\n * Hash an object into a short key, that is stable no matter what order the parameters are.\n */\nexport function stableObjectHash<T extends object>(obj: T): number {\n    // Sort the object first.\n    const ordered: any = {};\n    Object.keys(obj)\n        .sort()\n        .forEach(function (key) {\n            ordered[key] = obj[key];\n        });\n    return hashString(JSON.stringify(ordered));\n}\n\ntype CompareReturn = -1 | 0 | 1;\n\n/**\n * Utility for sorting values. Similar to the <=> operator in PHP.\n *\n * @param val1 The first value to compare.\n * @param val2 The second value to compare.\n *\n * @returns -1, 0, or 1\n */\nexport function compare<T extends string | number>(val1: T, val2: T): CompareReturn {\n    if (typeof val1 === \"string\" && typeof val2 === \"string\") {\n        return val1.localeCompare(val2) as CompareReturn;\n    } else {\n        if (val1 > val2) {\n            return 1;\n        } else if (val1 < val2) {\n            return -1;\n        }\n        return 0;\n    }\n}\n\n/**\n * Parse a string into a URL friendly format.\n *\n * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber\n *\n * @param str The string to parse.\n */\nexport function slugify(\n    str: string,\n    options?: {\n        allowMultipleDashes?: boolean;\n    },\n): string {\n    const whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\\s]+/g : /[-\\s]+/g;\n    return str\n        .normalize(\"NFD\") // Normalize accented characters into ASCII equivalents\n        .replace(/[^\\w\\s$*_+~.()'\"\\-!:@]/g, \"\") // REmove characters that don't URL encode well\n        .trim() // Trim whitespace\n        .replace(whiteSpaceNormalizeRegexp, \"-\") // Normalize whitespace\n        .toLocaleLowerCase(); // Convert to locale aware lowercase.\n}\n\nexport function normalizeString(str: string): string {\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = normalizeString(toSplit);\n    const normalizedSplitTerm = normalizeString(splitWith);\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map((piece) => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/|\\/|#)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n * - \"#\"\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n\n/**\n * Capitalize the first character of a string.\n *\n * @param str The string to modify.\n */\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Simple utility function for waiting some duration in promise.\n *\n * @param duration The amount of time to wait.\n */\nexport function promiseTimeout(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction mergeCustomizer(into: any, source: any) {\n    if (Array.isArray(into) || Array.isArray(source)) {\n        return source;\n    }\n}\n\n/**\n * Merge 2 objects, but replace arrays instead of merging them.\n */\nexport function mergeAndReplaceArrays(item1: Record<any, any>, item2: Record<any, any>) {\n    return mergeWith({}, item1, item2, mergeCustomizer);\n}\n","/**\n * Utilities related to the user's system.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport enum OS {\n    IOS = \"ios\",\n    ANDROID = \"android\",\n    UNKNOWN = \"unkwown\",\n}\n\n/**\n * Provide relatively rough detection of mobile OS.\n *\n * This is not even close to perfect but can be used to try and offer,\n * OS specific input elements for things like datetimes.\n */\nexport function guessOperatingSystem(): OS {\n    const userAgent = navigator.userAgent || navigator.vendor || (window as any).opera;\n\n    if (/android/i.test(userAgent)) {\n        return OS.ANDROID;\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n        return OS.IOS;\n    }\n\n    return OS.UNKNOWN;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface IClass {\n    new (): any;\n}\n\n/**\n * Determine if an instance is an instance of any of the listed classes.\n *\n * @param needle The instance.\n * @param haystack The classes to check.\n */\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n    return value !== null && value !== undefined;\n}\n\nexport function ensureString(maybeString: any) {\n    if (typeof maybeString !== \"string\") throw new TypeError(\"Expected maybeString to have type string\");\n    return maybeString;\n}\n\nexport function forceInt(value: string | null, fallback: number): number {\n    let result = Number.parseInt(value ?? \"\", 10);\n    return Number.isNaN(result) ? fallback : result;\n}\n\nexport type RecordID = string | number;\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport Checkbox from \"@library/forms/Checkbox\";\nimport CheckboxGroup from \"@library/forms/CheckboxGroup\";\nimport { onReady, t } from \"@library/utility/appUtils\";\nimport { useSearchForm } from \"@library/search/SearchContext\";\nimport flatten from \"lodash/flatten\";\n\ninterface IProps {}\n\n/**\n * Implement search filter panel main component.\n *\n * - If there is only 1 type, it does not display.\n * - IF there are multiple types, at least 1 must be selected.\n *\n * Other plugins can hook into this and add their own filters with\n *\n * @example\n *    CommunityPostTypeFilter.addPostType({\n *       label: t(\"Discussions\"),\n *       values: [\"discussion\", \"comment\"],\n *   });\n */\nexport function CommunityPostTypeFilter(props: IProps) {\n    const { form, updateForm } = useSearchForm<{}>();\n    const registeredTypes = CommunityPostTypeFilter.postTypes;\n    const allTypes = flatten(registeredTypes.map((v) => v.values));\n\n    if (registeredTypes.length <= 1) {\n        return null;\n    }\n\n    const formTypes = form.types;\n\n    return (\n        <CheckboxGroup label={\"What to Search\"} grid={true} tight={true}>\n            {registeredTypes.map((registeredType, i) => {\n                const noTypesSelected = !formTypes || formTypes.length === 0;\n                let isChecked = false;\n\n                if (noTypesSelected) {\n                    isChecked = true;\n                } else {\n                    formTypes?.forEach((formType) => {\n                        if (registeredType.values.includes(formType)) {\n                            isChecked = true;\n                        }\n                    });\n                }\n\n                return (\n                    <Checkbox\n                        label={registeredType.label}\n                        key={i}\n                        checked={isChecked}\n                        onChange={(e) => {\n                            const newChecked = e.target.checked;\n\n                            if (newChecked) {\n                                const newTypesSet = new Set(formTypes ?? []);\n                                registeredType.values.forEach((typeToPush) => {\n                                    newTypesSet.add(typeToPush);\n                                });\n\n                                if (newTypesSet.size === allTypes.length) {\n                                    updateForm({ types: undefined });\n                                } else {\n                                    updateForm({ types: Array.from(newTypesSet) });\n                                }\n                            } else {\n                                const newTypesSet = new Set(form.types ?? []);\n                                registeredType.values.forEach((typeToPush) => {\n                                    newTypesSet.delete(typeToPush);\n                                });\n\n                                if (newTypesSet.size === 0) {\n                                    // Make a new set with all values minus the current one.\n                                    const newTypes = allTypes.filter((v) => !registeredType.values.includes(v));\n                                    updateForm({ types: newTypes });\n                                } else {\n                                    updateForm({ types: Array.from(newTypesSet) });\n                                }\n                            }\n                        }}\n                    />\n                );\n            })}\n        </CheckboxGroup>\n    );\n}\n\ninterface ICommunityPostType {\n    label: string;\n    values: string[];\n}\n\nCommunityPostTypeFilter.postTypes = [] as ICommunityPostType[];\n\nCommunityPostTypeFilter.addPostType = (postType: ICommunityPostType) => {\n    CommunityPostTypeFilter.postTypes.push(postType);\n};\n\n// Deferred to onReady for translation initialization.\nonReady(() => {\n    CommunityPostTypeFilter.addPostType({\n        label: t(\"Discussions\"),\n        values: [\"discussion\", \"comment\"],\n    });\n});\n","var map = {\n\t\"./en-SG\": 126,\n\t\"./en-SG.js\": 126,\n\t\"./en-au\": 127,\n\t\"./en-au.js\": 127,\n\t\"./en-ca\": 128,\n\t\"./en-ca.js\": 128,\n\t\"./en-gb\": 129,\n\t\"./en-gb.js\": 129,\n\t\"./en-ie\": 130,\n\t\"./en-ie.js\": 130,\n\t\"./en-il\": 131,\n\t\"./en-il.js\": 131,\n\t\"./en-nz\": 132,\n\t\"./en-nz.js\": 132\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 190;","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport interface ILocale {\n    localeID: string;\n    localeKey: string;\n    regionalKey: string;\n    displayNames: {\n        [localeKey: string]: string;\n    };\n}\n\nlet currentLocale = \"en\";\nlet localeStore: ILocale[] = [];\nlet callbacks: Array<() => void> = [];\n\n/**\n * Get the available locales.\n */\nexport function getLocales(): ILocale[] {\n    return localeStore;\n}\n\n/**\n * Register a handler for if the locales change.\n * @param callback\n */\nexport function onLocaleChange(callback: () => void) {\n    callbacks.push(callback);\n}\n\n/**\n * Set the current locale.\n */\nexport function setCurrentLocale(localeKey: string) {\n    currentLocale = localeKey;\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Get the current locale.\n */\nexport function getCurrentLocale() {\n    return currentLocale;\n}\n\n/**\n * Get the current locale in format accepted by Javascript localization functions.\n *\n * PHP canonicalized locales use `_` for the regional separator.\n * Javascript uses `-`.\n */\nexport function getJSLocaleKey() {\n    return currentLocale.replace(\"_\", \"-\");\n}\n\n/**\n * Load a group of locales.\n */\nexport function loadLocales(locales: ILocale[]) {\n    localeStore = [...localeStore, ...locales];\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Clear the loaded locales.\n */\nexport function clearLocales() {\n    localeStore = [];\n    callbacks.forEach(callback => callback());\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ILocale, getLocales, onLocaleChange, getCurrentLocale } from \"./localeStore\";\nimport { logWarning } from \"@vanilla/utils\";\n\nconst LocaleContext = React.createContext<{\n    locales: ILocale[];\n    currentLocale: string | null;\n}>({\n    locales: [],\n    currentLocale: null,\n});\n\nexport function LocaleProvider(props: { children?: React.ReactNode }) {\n    const [locales, setLocales] = useState(getLocales());\n    const [currentLocale, setCurrentLocale] = useState(getCurrentLocale());\n\n    if (!currentLocale) {\n        logWarning(\"No locale loaded for <LocaleProvider />\");\n    }\n\n    useEffect(() => {\n        setLocales(getLocales());\n        setCurrentLocale(getCurrentLocale());\n\n        onLocaleChange(() => {\n            setLocales(getLocales());\n            setCurrentLocale(getCurrentLocale());\n        });\n    }, [setLocales, setCurrentLocale]);\n\n    return (\n        <LocaleContext.Provider\n            value={{\n                locales,\n                currentLocale,\n            }}\n        >\n            {props.children}\n        </LocaleContext.Provider>\n    );\n}\n\nexport function useLocaleInfo() {\n    return useContext(LocaleContext);\n}\n","import { logError, logWarning } from \"@vanilla/utils\";\n\n/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface ITranslations {\n    [key: string]: string;\n}\n\nlet translationStore: ITranslations | null = null;\n\nlet internalTranslationDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function translationDebug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalTranslationDebugValue = newValue;\n    }\n\n    return internalTranslationDebugValue;\n}\n\n/**\n * Load a set of key value pairs as translation resources.\n */\nexport function loadTranslations(translations: ITranslations) {\n    translationStore = { ...translations };\n}\n\n/**\n * Clear all translation resources.\n */\nexport function clearTranslations() {\n    translationStore = null;\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    const fallback = defaultTranslation !== undefined ? defaultTranslation : str;\n\n    if (!translationStore) {\n        // Test environment allows top level static initialization.\n        const message = `Attempted to translate a value '${str}' before the translation store was initialized.`;\n        switch (process.env.NODE_ENV) {\n            case \"production\":\n                logWarning(message);\n                break;\n            case \"development\":\n                throw new Error(message + \" Don't use t() in the top level of a file or a static property.\");\n            case \"test\":\n                // Tests (like storybook and unit testing) don't need to actually bootstrap a full translation store all the time.\n                break;\n        }\n        return fallback;\n    }\n\n    if (translationStore[str] !== undefined) {\n        return translationStore[str];\n    }\n\n    if (translationDebug()) {\n        return \"☢️☢️☢️\" + fallback + \"☢️☢️☢️\";\n    } else {\n        return fallback;\n    }\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { logError, RecordID } from \"@vanilla/utils\";\n\nexport interface IContentTranslatorProps {\n    isLoading?: boolean;\n    isFullScreen?: boolean;\n    properties: ITranslationProperty[];\n    resource: string;\n    title: string;\n    sourceLocale?: string | null;\n    activeLocale?: string | null; // for organizecategories\n    afterSave?: () => void;\n}\n\n// Subtypes\nexport enum TranslationPropertyType {\n    TEXT = \"text\",\n    TEXT_MULTILINE = \"\",\n}\n\nexport interface ITranslationProperty {\n    recordType: string; // Ex. knowledgeCategory\n    recordID?: RecordID; // Ex. 425\n    recordKey?: string; // Ex. Garden.Description\n    sourceText: string; // Ex. \"Howdy Stranger\"\n    propertyName: string; // Ex. name\n    propertyValidation: ITranslationPropertyValidation;\n    propertyType: TranslationPropertyType;\n}\n\nexport interface ITranslationPropertyValidation {\n    minLength?: number;\n    maxLength?: number;\n}\n\nexport const NullContentTranslator: React.FC<IContentTranslatorProps> = (props) => {\n    logError(\"Rendering a Null Content translator. Be sure to check `shouldDisplay` before rendering.\");\n    return null;\n};\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useContext } from \"react\";\nimport { IContentTranslatorProps, NullContentTranslator } from \"./ContentTranslator\";\nimport { useLocaleInfo } from \"./LocaleProvider\";\n\ninterface IContentTranslator {\n    shouldDisplay: boolean;\n    Translator: React.ComponentType<IContentTranslatorProps>;\n}\n\nconst context = React.createContext<IContentTranslator>({\n    shouldDisplay: false,\n    Translator: NullContentTranslator,\n});\n\nlet _TranslationComponent: React.ComponentType<IContentTranslatorProps> | null = null;\n\n/**\n * Provider of the translation component.\n */\nexport const ContentTranslationProvider = (props: { children: React.ReactNode }) => {\n    const { locales } = useLocaleInfo();\n\n    return (\n        <context.Provider\n            value={{\n                shouldDisplay: _TranslationComponent !== null && locales.length > 1,\n                Translator: _TranslationComponent !== null ? _TranslationComponent : NullContentTranslator,\n            }}\n        >\n            {props.children}\n        </context.Provider>\n    );\n};\n\nContentTranslationProvider.setTranslator = (Translator: React.ComponentType<IContentTranslatorProps>) => {\n    _TranslationComponent = Translator;\n};\n\nexport function useContentTranslator(): IContentTranslator {\n    return useContext(context);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get the form data out of a form element.\n *\n * @param formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement: Node | null) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue ? \"true\" : \"false\");\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport twemoji from \"twemoji\";\n\nlet emojiSupportedCache: boolean | null = null;\n\n/**\n * Determine if the browser/OS combo has support for real unicode emojis.\n */\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n            if (ctx) {\n                ctx.fillText(\"😗\", -2, 4);\n                emojiSupportedCache = ctx.getImageData(0, 0, 1, 1).data[3] > 0;\n            } else {\n                emojiSupportedCache = false;\n            }\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Register an keyboard listener for the escape key.\n */\nexport class EscapeListener {\n    /**\n     * @param root - The element to watch for the escape listener in.\n     * @param returnElement - The element to return to when escape is pressed.\n     * @param callback\n     */\n    public constructor(\n        private root: HTMLElement,\n        private returnElement?: HTMLElement,\n        private callback?: (event: KeyboardEvent) => void,\n    ) {}\n\n    /**\n     * Start the listeners.\n     */\n    public start = () => {\n        this.root.addEventListener(\"keydown\", this.keydownListener);\n    };\n\n    /**\n     * Stop the listeners.\n     */\n    public stop = () => {\n        this.root.removeEventListener(\"keydown\", this.keydownListener);\n    };\n\n    /**\n     * Handler that checks for the key of an keyboard event and:\n     *\n     * - Returns focous to the element from the constructor.\n     * - Calls the optional callback.\n     */\n    private keydownListener = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            if (this.root.contains(document.activeElement)) {\n                event.preventDefault();\n                this.returnElement && this.returnElement.focus();\n                this.callback && this.callback(event);\n            }\n        }\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { hashString } from \"@vanilla/utils\";\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n    }\n\n    return eventHash;\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    if (delegatedEventListeners[eventHash]) {\n        const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n        scope.removeEventListener(eventName, wrappedCallback);\n        delete delegatedEventListeners[eventHash];\n    }\n}\n\n/**\n * Remove all delegated event listeners that have been registered.\n */\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Handler for files being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedFile(event: DragEvent): FileList | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n\n        return event.dataTransfer.files;\n    }\n}\n\n/**\n * Handler for files being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedFile(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n */\nexport class FocusWatcher {\n    /**\n     * @param watchedNode - The watched dom node.\n     * @param callback - A callback for when the tree focuses and blurs.\n     */\n    public constructor(private watchedNode: Element, private changeHandler: (hasFocus: boolean) => void) {}\n\n    /**\n     * Register the event listeners from this class.\n     */\n    public start = () => {\n        this.watchedNode.addEventListener(\"focusout\", this.handleFocusOut, true);\n        this.watchedNode.addEventListener(\"focusin\", this.handleFocusIn, true);\n        document.addEventListener(\"click\", this.handleClick);\n    };\n\n    /**\n     * Remove the event listeners from this class.\n     */\n    public stop = () => {\n        this.watchedNode.removeEventListener(\"focusout\", this.handleFocusOut, true);\n        this.watchedNode.removeEventListener(\"focusin\", this.handleFocusIn, true);\n        document.removeEventListener(\"click\", this.handleClick);\n    };\n\n    /**\n     * Handle when an element loses focus.\n     */\n    private handleFocusOut = (event: FocusEvent) => {\n        this.checkDomTreeHasFocus(event, this.changeHandler);\n    };\n\n    /**\n     * Handle an element gaining focus.\n     */\n    private handleFocusIn = (event: FocusEvent) => {\n        this.checkDomTreeHasFocus(event, this.changeHandler);\n    };\n\n    /**\n     * Handle an element being clicked.\n     */\n    private handleClick = (event: MouseEvent) => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = this.checkDomTreeWasClicked(triggeringElement);\n        if (!wasClicked) {\n            this.changeHandler(false);\n        }\n    };\n\n    /**\n     * Determine whether or not our DOM tree was clicked.\n     */\n    private checkDomTreeWasClicked(clickedElement: Element) {\n        return (\n            this.watchedNode &&\n            clickedElement &&\n            (this.watchedNode.contains(clickedElement as Element) || this.watchedNode === clickedElement)\n        );\n    }\n\n    /**\n     * Determine if the currently focused element is somewhere inside of (or the same as)\n     * a given Element.\n     *\n     * @param watchedNode - The watched node to look in.\n     */\n    private checkDomTreeHasFocus(event: FocusEvent, callback: (hasFocus: boolean) => void) {\n        setTimeout(() => {\n            const possibleTargets = [\n                // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n                document.activeElement, // IE11, Safari.\n                event.relatedTarget as Element, // Chrome (The actual standard)\n                (event as any).explicitOriginalTarget, // Firefox\n            ];\n\n            let activeElement = null;\n            for (const target of possibleTargets) {\n                if (target && target !== document.body) {\n                    activeElement = target;\n                    break;\n                }\n            }\n\n            if (activeElement !== null) {\n                const isWatchedInBody = document.body.contains(this.watchedNode);\n                const isFocusedInBody = document.body.contains(activeElement);\n                const isModal = Boolean(document.getElementById(\"modals\")?.contains(activeElement));\n                const hasFocus = Boolean(\n                    this.watchedNode &&\n                        activeElement &&\n                        (activeElement === this.watchedNode || this.watchedNode.contains(activeElement)),\n                );\n\n                // We will only invalidate based on something actually getting focus.\n                // Make sure we are still mounted before calling this.\n                // It could happen that our flyout is unmounted in between the setTimeout call.\n                // We might have focused on a modal which can't be in the watched tree.\n                if (isWatchedInBody && isFocusedInBody) {\n                    callback(hasFocus || isModal);\n                }\n            }\n        }, 0);\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Determine if the browser is escaping the inner contents of our <noscript /> browser.\n */\nexport function browserEscapesNoScript(): boolean {\n    const ns = document.createElement(\"noscript\");\n    ns.innerHTML = \"<test></test>\";\n    document.body.append(ns);\n    const result = ns.innerHTML.startsWith(\"&lt;\");\n    ns.remove();\n    return result;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws If no element was found.\n * @returns An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement: string | Node | null): HTMLElement {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript && loadEventCallbacks.has(existingScript)) {\n            // Add another resolveCallback into the weakmap.\n            const callbacks = loadEventCallbacks.get(existingScript);\n            callbacks && callbacks.push(resolve);\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { browserEscapesNoScript, unescapeHTML } from \"./sanitization\";\n\n/**\n * Prepare an element and it's contents for use in a shadow root.\n *\n * @param element\n * @param cloneElement - If true, clone the element into a `newElementTag`. Preserves CSS classes and IDs.\n *      Particularly useful for when the initial content is inside of a <noscript /> tag.\n * @param newElementTag\n */\nexport function prepareShadowRoot(\n    element: HTMLElement,\n    cloneElement: boolean = false,\n    newElementTag = \"div\",\n): HTMLElement {\n    let html = element.innerHTML;\n    // This is likely a noscript tag.\n    if (browserEscapesNoScript() || html.trim().startsWith(\"&lt;\")) {\n        html = unescapeHTML(html);\n    }\n    // Safari escapes the contents of the noscript.\n    if (cloneElement) {\n        const newElement = document.createElement(newElementTag);\n\n        // Clone various attributes.\n        newElement.classList.value = element.classList.value;\n        newElement.id = element.id;\n\n        // Insert the element & remove the old old.\n        element.parentNode!.insertBefore(newElement, element);\n        element.remove();\n        element = newElement;\n    } else {\n        // If we aren't making a new real root, we need to empty it out.\n        // Otherwise we'll have duplicate contents.\n        element.innerHTML = \"\";\n    }\n\n    const shadowHeader = element.attachShadow({ mode: \"open\" });\n    shadowHeader.innerHTML = html;\n    return element;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport tabbable from \"tabbable\";\nimport { logError } from \"@vanilla/utils\";\n\n/**\n * A class for handling tabbing inside of a container with various exclusions.\n *\n * The goal is here is to be able to programatically implement various tabbing behaviours\n * required for accessibility.\n */\nexport class TabHandler {\n    private tabbableElements: HTMLElement[];\n\n    /**\n     * Determine if an element is tabbable.\n     */\n    public static isTabbable(element: Node) {\n        const children = tabbable(element.parentNode);\n        return children.includes(element);\n    }\n\n    /**\n     * Construct the handler. Don't be afraid to construct multiple of these.\n     *\n     * The elements in a particular TabHandler are very moment specific.\n     * If the DOM changes underneath it it will likely no longer be valid.\n     *\n     * @param root - The root element to look in.\n     * @param excludedElements - Elements to ignore.\n     * @param excludedRoots - These element's children will be ignored.\n     */\n    public constructor(\n        root: Element = document.documentElement!,\n        private excludedElements: Element[] = [],\n        private excludedRoots: Element[] = [],\n    ) {\n        this.tabbableElements = tabbable(root);\n    }\n\n    /**\n     * Get the next tabbable item within a given tabindex.\n     *\n     * WARNING: Performance can be poor if you pass many excluded roots and do not\n     * sufficiently narrow the tree your are looking in.\n     *\n     * @param from - The currently focused element.\n     * @param reverse - True to get the previous element instead.\n     * @param allowLooping - Whether or not the focus should loop around from beginning <-> end.\n     */\n    public getNext(\n        from: Element | null = document.activeElement,\n        reverse: boolean = false,\n        allowLooping: boolean = true,\n    ): HTMLElement | null {\n        if (!(from instanceof HTMLElement)) {\n            logError(\"Unable to tab to next element, `fromElement` given is not valid: \", from);\n            return null;\n        }\n        const tabbables = this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));\n        const currentTabIndex = tabbables.indexOf(from);\n\n        if (currentTabIndex < 0) {\n            return null;\n        }\n\n        let targetIndex = reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n        if (allowLooping) {\n            // Loop over the beginning and ends\n            if (targetIndex < 0) {\n                targetIndex = tabbables.length - 1;\n            } else if (targetIndex >= tabbables.length) {\n                targetIndex = 0;\n            }\n        }\n\n        return tabbables[targetIndex] || null;\n    }\n\n    /**\n     * Get all.\n     */\n    public getAll(from: Element | null = document.activeElement) {\n        if (!(from instanceof HTMLElement)) {\n            logError(\"Unable to tab to next element, `fromElement` given is not valid: \", from);\n            return null;\n        }\n        return this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));\n    }\n\n    /**\n     * Get the first focusable element.\n     */\n    public getInitial(): HTMLElement | null {\n        const tabbables = this.tabbableElements.filter(this.filterAllExcluded);\n        if (tabbables.length > 0) {\n            return tabbables[0];\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Get the last focusable element.\n     */\n    public getLast(): HTMLElement | null {\n        const tabbables = this.tabbableElements.filter(this.filterAllExcluded);\n        if (tabbables.length > 0) {\n            return tabbables[tabbables.length - 1];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Filter out all excluded elements. Allows 1 element and its parents to be exempted.\n     *\n     * The exemption is necessary so we can find our place\n     * if the focus is already in an item that we are trying to exclude.\n     *\n     * @returns A filter for use with [].filter()\n     */\n    private createExcludeFilterWithExemption = (exemption: Element) => {\n        return (elementToFilter: Element): boolean => {\n            const elementIsActiveOrChildOfActive = exemption === elementToFilter || elementToFilter.contains(exemption);\n\n            if (!elementIsActiveOrChildOfActive) {\n                if (this.excludedElements.includes(elementToFilter)) {\n                    return false;\n                }\n                for (const excludedRoot of this.excludedRoots) {\n                    if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        };\n    };\n\n    /**\n     * A filter for use with [].filter().\n     *\n     * Filters out all excluded elements and roots.\n     */\n    private filterAllExcluded = (elementToFilter: Element): boolean => {\n        if (this.excludedElements.includes(elementToFilter)) {\n            return false;\n        }\n        for (const excludedRoot of this.excludedRoots) {\n            if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n// Some polyfills\nimport \"focus-visible\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nsmoothscroll.polyfill();\n\nexport * from \"./domData\";\nexport * from \"./emoji\";\nexport * from \"./EscapeListener\";\nexport * from \"./events\";\nexport * from \"./FocusWatcher\";\nexport * from \"./sanitization\";\nexport * from \"./scripts\";\nexport * from \"./shadowDom\";\nexport * from \"./TabHandler\";\nexport * from \"./visibility\";\n","/**\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\n\ninterface IProps {\n    duration: number;\n    onHover: React.MouseEventHandler | undefined;\n    once?: boolean;\n    children: (providedProps: IProvidedProps) => React.ReactNode;\n}\n\ninterface IProvidedProps {\n    onMouseEnter: React.MouseEventHandler;\n    onMouseLeave: React.MouseEventHandler;\n}\n\n/**\n * Component with render props for handling a hover after a certain duration.\n *\n * Simply spread the provided props over the element you want to track the hover of.\n *\n * @example\n * <Hoverable duration={250} onHover={myCallback}>\n *     {providedProps => {\n *          <div {...providedProps} className=\"someClass\">\n *              // Some deeply neested child.\n *          </div>\n *     }}\n * </Hoverable>\n */\nexport class Hoverable extends React.Component<IProps> {\n    public static defaultProps = {\n        once: true,\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public render(): React.ReactNode {\n        return this.props.children({\n            onMouseEnter: this.mouseEnterHandler,\n            onMouseLeave: this.mouseLeaveHandler,\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public componentWillUnmount() {\n        this.dismissTimeout();\n    }\n\n    private hoverTimeout: NodeJS.Timeout;\n    private hasExecuted = false;\n\n    /**\n     * Handle the hover event by checking if we've already called ourselves then calling the passed callback.\n     */\n    private handleHover = (event: React.MouseEvent) => {\n        if (this.hasExecuted && this.props.once) {\n            return;\n        }\n\n        this.hasExecuted = true;\n        if (this.props.onHover) {\n            this.props.onHover(event);\n        }\n    };\n\n    /**\n     * Set a timeout when the mouse enters. If the timeout is not removed we have a hover.\n     */\n    private mouseEnterHandler = (event: React.MouseEvent) => {\n        this.hoverTimeout = setTimeout(() => {\n            this.handleHover(event);\n        }, this.props.duration);\n    };\n\n    /**\n     * Remove the timeout for the hover so it doesn't execute again (or at all).\n     */\n    private mouseLeaveHandler = (event: React.MouseEvent) => {\n        this.dismissTimeout();\n    };\n\n    /**\n     * Cleanup timeouts and properties to reset.\n     */\n    private dismissTimeout() {\n        this.hasExecuted = false;\n        if (this.hoverTimeout) {\n            clearTimeout(this.hoverTimeout);\n        }\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { RefObject, useState, useLayoutEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport debounce from \"lodash/debounce\";\nimport { stableObjectHash } from \"@vanilla/utils\";\n\n// DOMRectReadOnly.fromRect()\nconst EMPTY_RECT: DOMRect = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    toJSON: () => \"\",\n};\n\n/**\n * Utility hook for measuring a dom element.\n * Will return back measurements as a bounding rectangle for the element contained in a ref.\n *\n * @param ref The ref to measure.\n * @param adjustForScrollOffset If set, y values will be adjusted for the current scroll offset.\n * @param watchRef Used to trigger a remeasure if the ref changes.\n */\nexport function useMeasure(\n    ref: RefObject<HTMLElement | null>,\n    adjustForScrollOffset: boolean = false,\n    watchRef: boolean = false,\n) {\n    const [bounds, setContentRect] = useState<DOMRect>(EMPTY_RECT);\n    const refWatch = watchRef ? ref.current : ref;\n    useLayoutEffect(() => {\n        let animationFrameId: number | null = null;\n\n        const measure = () => {\n            animationFrameId = window.requestAnimationFrame(() => {\n                if (!ref.current) {\n                    setContentRect(EMPTY_RECT);\n                    return;\n                }\n                let rect = ref.current.getBoundingClientRect();\n\n                if (adjustForScrollOffset) {\n                    rect = {\n                        ...rect,\n                        y: rect.y + window.scrollY,\n                        top: rect.top + window.scrollY,\n                        bottom: rect.bottom + window.scrollY,\n                        width: rect.width,\n                        height: rect.height,\n                        right: rect.right,\n                        left: rect.left,\n                    };\n                }\n\n                rect.toJSON = () => {\n                    return JSON.stringify({\n                        y: rect.y,\n                        top: rect.top,\n                        bottom: rect.bottom,\n                        width: rect.width,\n                        height: rect.height,\n                        right: rect.right,\n                        left: rect.left,\n                    });\n                };\n\n                setContentRect(rect);\n            });\n        };\n\n        const resizeListener = debounce(() => {\n            measure();\n        }, 100);\n        window.addEventListener(\"resize\", resizeListener);\n\n        const ro = new ResizeObserver(measure);\n        if (ref.current) {\n            ro.observe(ref.current);\n        } else {\n            setContentRect(EMPTY_RECT);\n        }\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId!);\n            ro.disconnect();\n            resizeListener.cancel();\n            window.removeEventListener(\"resize\", resizeListener);\n            setContentRect(EMPTY_RECT);\n        };\n    }, [adjustForScrollOffset, refWatch, ref]);\n\n    return bounds;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useRef, useEffect, useState, useDebugValue } from \"react\";\nimport { useMeasure } from \"./useMeasure\";\n\n/**\n * Detect if the edges of 2 measures are overlapping.\n *\n * If the edges are touching, but not overlapping, that doesn't count.\n */\nfunction doRectsOverlap(rect1: DOMRectReadOnly, rect2: DOMRectReadOnly) {\n    // For all docblocks here, [] represents rect1 and {} represents rect 2.\n    if (isEmptyRect(rect1) || isEmptyRect(rect2)) {\n        return false;\n    }\n\n    let hasHorizontalOverlap = false;\n\n    //  [      { ]       }\n    if (rect1.left <= rect2.left && rect1.right >= rect2.left) {\n        hasHorizontalOverlap = true;\n    }\n\n    //  {    [  }   ]\n    if (rect2.left <= rect1.left && rect2.right >= rect1.left) {\n        hasHorizontalOverlap = true;\n    }\n\n    //  [   {} ]\n    if (rect1.left <= rect2.left && rect1.right >= rect2.right) {\n        hasHorizontalOverlap = true;\n    }\n\n    //  {  []   }\n    if (rect2.left <= rect1.left && rect2.right >= rect1.right) {\n        hasHorizontalOverlap = true;\n    }\n\n    let hasVerticalOverlap = false;\n\n    // Verical version of  [      { ]       }\n    if (rect1.top <= rect2.top && rect1.bottom >= rect2.top) {\n        hasVerticalOverlap = true;\n    }\n\n    // Verical version of  {    [  }   ]\n    if (rect2.top <= rect1.top && rect2.bottom >= rect1.top) {\n        hasVerticalOverlap = true;\n    }\n\n    // Verical version of  [   {} ]\n    if (rect1.top <= rect2.top && rect1.bottom >= rect2.bottom) {\n        hasVerticalOverlap = true;\n    }\n\n    // Verical version of  {  []   }\n    if (rect2.top <= rect1.top && rect2.bottom >= rect1.bottom) {\n        hasVerticalOverlap = true;\n    }\n\n    // Both overlaps are required to make a collision.\n    return hasVerticalOverlap && hasHorizontalOverlap;\n}\n\nfunction isEmptyRect(rect: DOMRectReadOnly): boolean {\n    return rect.height === 0 || rect.width === 0;\n}\n\nexport function useCollisionDetector() {\n    const collisionSourceRef = useRef<HTMLDivElement | null>(null);\n    let sourceMeasure = useMeasure(collisionSourceRef);\n\n    const vBoundary1Ref = useRef<HTMLDivElement | null>(null);\n    const vBoundary1Measure = useMeasure(vBoundary1Ref);\n\n    const vBoundary2Ref = useRef<HTMLDivElement | null>(null);\n    const vBoundary2Measure = useMeasure(vBoundary2Ref);\n\n    const hBoundary1Ref = useRef<HTMLDivElement | null>(null);\n    const hBoundary1Measure = useMeasure(hBoundary1Ref);\n\n    const hBoundary2Ref = useRef<HTMLDivElement | null>(null);\n    const hBoundary2Measure = useMeasure(hBoundary2Ref);\n\n    const hasCollision =\n        doRectsOverlap(sourceMeasure, vBoundary1Measure) ||\n        doRectsOverlap(sourceMeasure, vBoundary2Measure) ||\n        doRectsOverlap(sourceMeasure, hBoundary1Measure) ||\n        doRectsOverlap(sourceMeasure, hBoundary2Measure);\n\n    useDebugValue({ hasCollision });\n\n    return { collisionSourceRef, hasCollision, vBoundary1Ref, vBoundary2Ref, hBoundary1Ref, hBoundary2Ref };\n}\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useDebugValue } from \"react\";\n\n/**\n * Wrapper around useDebugValue.\n *\n * useDebugValue only works in other hooks, not directly in components.\n * As a result we need to wrap it in a custom hook.\n */\nexport function useComponentDebug(debugValue: any) {\n    return useDebugValue(debugValue);\n}\n","/**\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license gpl-2.0-only\n */\n\nimport React, { useLayoutEffect, useRef } from \"react\";\n\nexport function useDomNodeAttachment(domNodes?: Node[]): React.RefObject<any> {\n    const ref = useRef<HTMLElement | null>();\n\n    useLayoutEffect(() => {\n        if (domNodes && ref.current) {\n            domNodes.forEach((node) => {\n                ref.current?.appendChild(node);\n            });\n        }\n    }, [domNodes]);\n\n    return ref;\n}\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n    nodes: Node[];\n}\n\nexport function DomNodeAttacher(_props: IProps) {\n    const { nodes, ...props } = _props;\n    const ref = useDomNodeAttachment(nodes);\n    return <div {...props} ref={ref} />;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useEffect } from \"react\";\n\nimport { EscapeListener } from \"@vanilla/dom-utils\";\n\n/**\n * React hook for listening for an escape press on the keyboard inside root element.\n *\n * When escape is pressed, the return element will be focused if provided or the callback will will be called.\n */\nexport function useEscapeListener({\n    root,\n    returnElement,\n    callback,\n}: {\n    root?: HTMLElement | null;\n    returnElement?: HTMLElement | null;\n    callback?: (event: KeyboardEvent) => void;\n}) {\n    useEffect(() => {\n        if (root === null || returnElement === null) {\n            // Bail out if these are null. That means we have unfilled refs. Undefined means they were not passed and we should use the defaults.\n            return;\n        }\n        const actualRoot = root || document.documentElement;\n        const escapeListener = new EscapeListener(actualRoot, returnElement, callback);\n        escapeListener.start();\n        return escapeListener.stop;\n    }, [root, returnElement, callback]);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { FocusWatcher } from \"@vanilla/dom-utils\";\n\n/**\n * React hook for creating and destroying a FocusWatcher. See FocusWatcher documentation.\n */\nexport function useFocusWatcher(\n    ref: React.RefObject<Element | null>,\n    changeHandler: (hasFocus: boolean) => void,\n    bypass?: boolean,\n) {\n    useLayoutEffect(() => {\n        if (bypass) {\n            return;\n        }\n        if (ref.current !== null) {\n            const focusWatcher = new FocusWatcher(ref.current, changeHandler);\n            focusWatcher.start();\n            return focusWatcher.stop;\n        }\n    }, [ref, changeHandler, bypass]);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\nimport { useRef, useEffect } from \"react\";\n\n/**\n * Keep a reference to the previous value of something. (during the previous render).\n *\n * @param value\n */\nexport function useLastValue<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => void (ref.current = value), [value]);\n    return ref.current;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useState } from \"react\";\n\n/**\n * Return a throw function for use inside of custom hooks & useEffect.\n *\n * This needed because throwing inside of `useEffect` does not propagate up to error boundaries.\n * @see https://github.com/facebook/react/issues/11334\n */\nexport function useThrowError(): (err: Error) => void {\n    const [error, setError] = useState<Error | null>(null);\n    if (error) {\n        throw error;\n    }\n\n    return setError;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { HTMLAttributes } from \"react\";\n\n/**\n * Deconstructs all attributes from HTML element to recreate it in React\n * This helps to avoid using dangerouslySetInnerHTML\n *\n * @param element - The element to deconstruct\n * @param options - Additionnal options. By default, \"class\" is replaced with \"className\".\n * @returns object - the attributes of that element\n */\nexport function deconstructAttributesFromElement(\n    element: Element,\n    options?: {\n        classAsClassName?: boolean;\n        hrefAsTo?: boolean; // for SmartLinks/Link components\n    },\n): HTMLAttributes<any> {\n    const { classAsClassName = true, hrefAsTo = false } = options || {};\n    const attrs = {};\n    Object.values(element.attributes).forEach(attr => {\n        attrs[attr.name] = attr.value;\n    });\n\n    // If this is to be used in React, we want to replace \"class\" with \"className\"\n    if (classAsClassName && attrs.hasOwnProperty(\"class\")) {\n        attrs[\"className\"] = attrs[\"class\"];\n        delete attrs[\"class\"];\n    }\n\n    // If this is to be used with <SmartLink/> OR <Link>. Do not use for regular <a/> tags.\n    if (hrefAsTo && attrs.hasOwnProperty(\"href\")) {\n        attrs[\"to\"] = attrs[\"href\"];\n        delete attrs[\"href\"];\n    }\n\n    return attrs;\n}\n","/**\n * Utility function related to logging/debugging.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nlet internalDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalDebugValue = newValue;\n    }\n\n    return internalDebugValue;\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function logDebug(...value: any[]) {\n    if (internalDebugValue) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode, and if outputLog is true.\n *\n * @param outputLog - Condition to render log\n * @param value - The value to log.\n */\nexport function logDebugConditionnal(outputLog = false, ...value: any[]) {\n    if (internalDebugValue && outputLog) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    if (!internalDebugValue || process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(...value);\n}\n","/**\n * @copyright 2009-2020 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { onReady, t } from \"@vanilla/library/src/scripts/utility/appUtils\";\nimport { SearchService } from \"@library/search/SearchService\";\nimport { TypeQuestionIcon } from \"@vanilla/library/src/scripts/icons/searchIcons\";\nimport { CommunityPostTypeFilter } from \"@vanilla/addon-vanilla/search/CommunityPostTypeFilter\";\n\nonReady(() => {\n    SearchService.addSubType({\n        label: t(\"Question\"),\n        icon: <TypeQuestionIcon />,\n        recordType: \"discussion\",\n        type: \"question\",\n    });\n\n    SearchService.addSubType({\n        label: t(\"Answer\"),\n        icon: <TypeQuestionIcon />,\n        recordType: \"comment\",\n        type: \"answer\",\n    });\n\n    CommunityPostTypeFilter.addPostType({\n        label: t(\"Questions\"),\n        values: [\"question\", \"answer\"],\n    });\n});\n","import { cssRaw, flattenNests } from \"@library/styles/styleShim\";\nimport { CSSObject } from \"@emotion/css\";\n\nexport function cssOut(selector: string, ...objects: CSSObject[]): void {\n    cssRaw({\n        [selector]: objects.map(flattenNests),\n    });\n}\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { assetUrl, getMeta } from \"@library/utility/appUtils\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/dist/\" + __BUILD__SECTION__ + \"/\");\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReactElement } from \"react\";\n\nexport interface IComponentMountOptions {\n    overwrite?: boolean;\n    clearContents?: boolean;\n    widgetResolver?: IWidgetResolver;\n    bypassPortalManager?: boolean;\n    unmountBeforeRender?: boolean;\n}\n\nexport interface IWidgetOptions {\n    $type?: string; // the component to get, optional because coming from API\n    children?: IWidgetOptions[]; // widgets to mount as children\n    [x: string]: any; // can take additional properties\n}\n\n/**\n * Defines an interface for a function that will turn widget options into props that can be used to render a component.\n */\nexport interface IWidgetResolver {\n    (options: IWidgetOptions): {\n        [key: string]: any;\n    };\n}\n\ninterface IPortal {\n    target: HTMLElement;\n    component: React.ReactElement;\n}\n\nlet hasRendered = false;\nconst portals: IPortal[] = [];\n\nconst PORTAL_MANAGER_ID = \"vanillaPortalManager\";\ntype PortalContextType = React.FC<{ children?: React.ReactNode }>;\nlet PortalContext: PortalContextType = (props) => {\n    return <React.Fragment>{props.children}</React.Fragment>;\n};\n\nexport function applySharedPortalContext(context: PortalContextType) {\n    PortalContext = context;\n    if (hasRendered) {\n        // Re-render the portals. We never want to be the first to initialize rendering though.\n        renderPortals();\n    }\n}\n\n/**\n * Component for managing all mounted components from a single wrapped context.\n *\n * This allows a shared context provider to be applied to parts of the site.\n */\nfunction PortalManager() {\n    return (\n        <div>\n            <PortalContext>\n                {portals.map((portal, i) => {\n                    return (\n                        <React.Fragment key={i}>\n                            {ReactDOM.createPortal(portal.component, portal.target)}\n                        </React.Fragment>\n                    );\n                })}\n            </PortalContext>\n        </div>\n    );\n}\n\nfunction renderPortals(callback?: () => void) {\n    hasRendered = true;\n    // Ensure we have our modal container.\n    let container = document.getElementById(PORTAL_MANAGER_ID);\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.id = PORTAL_MANAGER_ID;\n        document.body.appendChild(container);\n    }\n\n    ReactDOM.render(<PortalManager />, container, callback);\n}\n\n/**\n * Mount a root component of a React tree.\n *\n * - ReactDOM render.\n * - Typestyle render.\n *\n * If the overwrite option is passed this component will replace the components you passed as target.\n *\n * Default Mode:\n * <div><TARGET /></div> -> <div><TARGET><REACT></TARGET><div>\n *\n * Overwrite Mode:\n * <div><TARGET /></div> -> <div><REACT/></div>\n */\nexport function mountReact(\n    component: React.ReactElement,\n    target: HTMLElement,\n    callback?: () => void,\n    options?: IComponentMountOptions & { bypassPortalManager?: boolean },\n) {\n    if (options?.bypassPortalManager) {\n        const doRender = () => {\n            ReactDOM.render(<PortalContext>{component}</PortalContext>, target, callback);\n        };\n        if (options?.unmountBeforeRender) {\n            ReactDOM.unmountComponentAtNode(target);\n        }\n        setImmediate(doRender);\n        return;\n    }\n\n    let mountPoint = target;\n    let cleanupContainer: HTMLElement | undefined;\n    if (options?.clearContents) {\n        target.innerHTML = \"\";\n    }\n\n    if (options && options.overwrite) {\n        const container = document.createElement(\"span\");\n        cleanupContainer = container;\n        target.parentElement!.insertBefore(container, target);\n        mountPoint = container;\n    }\n    portals.push({ target: mountPoint, component });\n\n    renderPortals(() => {\n        if (cleanupContainer) {\n            target.remove();\n            if (cleanupContainer.firstElementChild) {\n                cleanupContainer.parentElement!.insertBefore(cleanupContainer.firstElementChild, cleanupContainer);\n                cleanupContainer.remove();\n                target.remove();\n            }\n        }\n        callback && callback();\n    });\n}\n\nexport interface IMountable {\n    target: HTMLElement;\n    component: React.ReactElement;\n}\n\nexport function mountReactMultiple(components: IMountable[], callback?: () => void, options?: IComponentMountOptions) {\n    if (!components.length) {\n        return;\n    }\n\n    let toCleanup: Array<{ target: HTMLElement; cleanup: HTMLElement }> = [];\n    components.forEach(({ component, target }) => {\n        let mountPoint = target;\n        if (options?.clearContents) {\n            target.innerHTML = \"\";\n        }\n\n        if (options && options.overwrite) {\n            const container = document.createElement(\"span\");\n            toCleanup.push({\n                target,\n                cleanup: container,\n            });\n            target.parentElement!.insertBefore(container, target);\n            mountPoint = container;\n        }\n        portals.push({ target: mountPoint, component });\n    });\n\n    renderPortals(() => {\n        toCleanup.forEach(({ cleanup, target }) => {\n            if (cleanup.firstElementChild) {\n                cleanup.parentElement!.insertBefore(cleanup.firstElementChild, cleanup);\n                cleanup.remove();\n                target.remove();\n            }\n        });\n        callback && callback();\n    });\n}\n\n/**\n * Mount a modal with ReactDOM. This is only needed at the top level context.\n *\n * If you are already in a react context, just use `<Modal />`.\n * Note: Using this will clear any other modals mounted with this component.\n *\n * @param element The <Modal /> element to render.\n * @param containerID The container to render the modal into. Defaults to modal container.\n * @param asRealPortal Whether or not we should render this as a real portal, or one managed by the portal manager.\n */\nexport function mountPortal(element: ReactElement<any>, containerID: string, asRealPortal: boolean = false) {\n    // Ensure we have our modal container.\n    let container = document.getElementById(containerID);\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.id = containerID;\n        document.body.appendChild(container);\n    }\n\n    if (asRealPortal) {\n        return ReactDOM.createPortal(element, container);\n    } else {\n        return new Promise((resolve) => mountReact(element, container!, () => resolve()));\n    }\n}\n"],"sourceRoot":""}