{"version":3,"sources":["webpack://vanilla-forum/./packages/vanilla-utils/src/fileUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/mathUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/stringUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/systemUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/typeUtils.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/localeStore.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/LocaleProvider.tsx","webpack://vanilla-forum/./packages/vanilla-i18n/src/translationStore.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/ContentTranslator.tsx","webpack://vanilla-forum/./packages/vanilla-i18n/src/ContentTranslationProvider.tsx","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/domData.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/emoji.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/EscapeListener.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/events.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/FocusWatcher.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/sanitization.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/scripts.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/shadowDom.tsx","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/TabHandler.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/index.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/debugUtils.ts","webpack://vanilla-forum/./addons/themes/lavendermoon/src/scripts/entries/forum.tsx","webpack://vanilla-forum/./build/entries/public-path.ts"],"names":["IMAGE_REGEX","isFileImage","file","test","type","logDebug","name","simplifyFraction","numerator","denominator","gcd","findGCD","a","b","shorthand","hashString","str","split","reduce","prevHash","currVal","charCodeAt","uuidv4","replace","c","r","Math","random","toString","slugify","options","whiteSpaceNormalizeRegexp","allowMultipleDashes","normalize","trim","toLocaleLowerCase","normalizeString","splitStringLoosely","toSplit","splitWith","normalizedName","normalizedSplitTerm","normalizedPieces","RegExp","charactersUsed","map","piece","start","length","substring","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","match","exec","rawMatch","OS","SAFE_PROTOCOL_REGEX","sanitizeUrl","url","capitalizeFirstLetter","charAt","toUpperCase","slice","guessOperatingSystem","userAgent","navigator","vendor","window","opera","ANDROID","MSStream","IOS","UNKNOWN","indexArrayByKey","array","key","object","item","push","notEmpty","value","ensureString","maybeString","TypeError","forceInt","fallback","result","Number","parseInt","isNaN","currentLocale","localeStore","callbacks","getLocales","setCurrentLocale","localeKey","forEach","callback","getCurrentLocale","getJSLocaleKey","loadLocales","locales","LocaleContext","React","createContext","LocaleProvider","props","useState","setLocales","logWarning","useEffect","Provider","children","useLocaleInfo","useContext","translationStore","internalTranslationDebugValue","translationDebug","newValue","undefined","loadTranslations","translations","translate","defaultTranslation","substr","message","TranslationPropertyType","t","NullContentTranslator","logError","context","shouldDisplay","Translator","_TranslationComponent","ContentTranslationProvider","setTranslator","dataMap","WeakMap","setData","element","initialValue","has","get","set","getData","defaultValue","attributeString","hasAttribute","getAttribute","emojiSupportedCache","isEmojiSupported","canvas","document","createElement","getContext","ctx","fillText","getImageData","data","emojiOptions","className","size","convertToSafeEmojiCharacters","stringOrNode","twemoji","parse","EscapeListener","root","returnElement","addEventListener","keydownListener","removeEventListener","event","contains","activeElement","preventDefault","focus","delegatedEventListeners","delegateEvent","eventName","filterSelector","scopeSelector","scope","functionKey","querySelector","Error","HTMLElement","eventHash","Object","keys","includes","wrappedCallback","target","closest","call","removeDelegatedEvent","getDraggedFile","dataTransfer","files","getPastedFile","clipboardData","items","Array","from","getAsFile","filter","Boolean","FocusWatcher","watchedNode","changeHandler","handleFocusOut","handleFocusIn","handleClick","checkDomTreeHasFocus","triggeringElement","checkDomTreeWasClicked","clickedElement","this","setTimeout","relatedTarget","explicitOriginalTarget","body","isWatchedInBody","isFocusedInBody","isModal","getElementById","hasFocus","escapeHTML","div","appendChild","createTextNode","innerHTML","ensureHtmlElement","selectorOrElement","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","Promise","resolve","reject","existingScript","head","getElementsByTagName","script","src","onerror","error","timeout","onload","clearTimeout","delete","prepareShadowRoot","cloneElement","newElementTag","html","ns","append","startsWith","remove","browserEscapesNoScript","escapedString","child","childNodes","nodeValue","unescapeHTML","newElement","classList","id","parentNode","insertBefore","attachShadow","mode","TabHandler","documentElement","excludedElements","excludedRoots","exemption","elementToFilter","excludedRoot","tabbableElements","tabbable","reverse","allowLooping","tabbables","createExcludeFilterWithExemption","currentTabIndex","indexOf","targetIndex","filterAllExcluded","smoothscroll","polyfill","internalDebugValue","debug","console","log","logDebugConditionnal","outputLog","warn","__webpack_public_path__","assetUrl"],"mappings":"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","file":"addons/lavendermoon.min.js?251bc26a5b9facdd867c","sourcesContent":["/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { logDebug } from \"./debugUtils\";\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    logDebug(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get various information about a fraction.\n *\n * @param numerator The fraction numerator.\n * @param denominator The fraction denominator.\n */\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n","/**\n * Utilities related to strings.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport mergeWith from \"lodash/mergeWith\";\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\n/**\n * Generate a RFC4122 compliant uuid. NOTE!!! Not cryptographically secure.\n *\n * This does not use a true random source (Eg. using Math.random()).\n * To use a better source would require dropping IE in order to use the crypto module.\n */\nexport function uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0,\n            v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n\n/**\n * Convert a camel case variable to a title case label.\n *\n * @param str - The string to labelize.\n * @returns Returns a new string suitable for a label.\n */\nexport function labelize(str: string): string {\n    /**\n     * $labelCode = preg_replace('`(?<![A-Z0-9])([A-Z0-9])`', ' $1', $labelCode);\n     * $labelCode = preg_replace('`([A-Z0-9])(?=[a-z])`', ' $1', $labelCode);\n     * $labelCode = preg_replace('`\\s+`', ' ', $labelCode);\n     * $labelCode = ucfirst(trim($labelCode));\n     */\n    let label = str.replace(/([^A-Z0-9])([A-Z0-9])/, \"$1 $2\");\n    label = label.replace(/([A-Z0-9])(?=[a-z])/, \" $1\");\n    label = label.replace(/[_-]/, \" \");\n    label = label.replace(/\\s+/, \" \");\n    let parts = label.split(\" \");\n    label = parts.map((s) => s.charAt(0).toLocaleUpperCase() + s.slice(1)).join(\" \");\n    return label;\n}\n\n/**\n * Hash an object into a short key, that is stable no matter what order the parameters are.\n */\nexport function stableObjectHash<T extends object>(obj: T): number {\n    // Sort the object first.\n    const ordered: any = {};\n    Object.keys(obj)\n        .sort()\n        .forEach(function (key) {\n            ordered[key] = obj[key];\n        });\n    return hashString(JSON.stringify(ordered));\n}\n\ntype CompareReturn = -1 | 0 | 1;\n\n/**\n * Utility for sorting values. Similar to the <=> operator in PHP.\n *\n * @param val1 The first value to compare.\n * @param val2 The second value to compare.\n *\n * @returns -1, 0, or 1\n */\nexport function compare<T extends string | number>(val1: T, val2: T): CompareReturn {\n    if (typeof val1 === \"string\" && typeof val2 === \"string\") {\n        return val1.localeCompare(val2) as CompareReturn;\n    } else {\n        if (val1 > val2) {\n            return 1;\n        } else if (val1 < val2) {\n            return -1;\n        }\n        return 0;\n    }\n}\n\n/**\n * Parse a string into a URL friendly format.\n *\n * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber\n *\n * @param str The string to parse.\n */\nexport function slugify(\n    str: string,\n    options?: {\n        allowMultipleDashes?: boolean;\n    },\n): string {\n    const whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\\s]+/g : /[-\\s]+/g;\n    return str\n        .normalize(\"NFD\") // Normalize accented characters into ASCII equivalents\n        .replace(/[^\\w\\s$*_+~.()'\"\\-!:@]/g, \"\") // REmove characters that don't URL encode well\n        .trim() // Trim whitespace\n        .replace(whiteSpaceNormalizeRegexp, \"-\") // Normalize whitespace\n        .toLocaleLowerCase(); // Convert to locale aware lowercase.\n}\n\nexport function normalizeString(str: string): string {\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = normalizeString(toSplit);\n    const normalizedSplitTerm = normalizeString(splitWith);\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map((piece) => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/|\\/|#)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n * - \"#\"\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n\n/**\n * Capitalize the first character of a string.\n *\n * @param str The string to modify.\n */\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Simple utility function for waiting some duration in promise.\n *\n * @param duration The amount of time to wait.\n */\nexport function promiseTimeout(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction mergeCustomizer(into: any, source: any) {\n    if (Array.isArray(into) || Array.isArray(source)) {\n        return source;\n    }\n}\n\n/**\n * Merge 2 objects, but replace arrays instead of merging them.\n */\nexport function mergeAndReplaceArrays(item1: Record<any, any>, item2: Record<any, any>) {\n    return mergeWith({}, item1, item2, mergeCustomizer);\n}\n","/**\n * Utilities related to the user's system.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport enum OS {\n    IOS = \"ios\",\n    ANDROID = \"android\",\n    UNKNOWN = \"unkwown\",\n}\n\n/**\n * Provide relatively rough detection of mobile OS.\n *\n * This is not even close to perfect but can be used to try and offer,\n * OS specific input elements for things like datetimes.\n */\nexport function guessOperatingSystem(): OS {\n    const userAgent = navigator.userAgent || navigator.vendor || (window as any).opera;\n\n    if (/android/i.test(userAgent)) {\n        return OS.ANDROID;\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n        return OS.IOS;\n    }\n\n    return OS.UNKNOWN;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface IClass {\n    new (): any;\n}\n\n/**\n * Determine if an instance is an instance of any of the listed classes.\n *\n * @param needle The instance.\n * @param haystack The classes to check.\n */\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n    return value !== null && value !== undefined;\n}\n\nexport function ensureString(maybeString: any) {\n    if (typeof maybeString !== \"string\") throw new TypeError(\"Expected maybeString to have type string\");\n    return maybeString;\n}\n\nexport function forceInt(value: string | null, fallback: number): number {\n    let result = Number.parseInt(value ?? \"\", 10);\n    return Number.isNaN(result) ? fallback : result;\n}\n\nexport type RecordID = string | number;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport interface ILocale {\n    localeID: string;\n    localeKey: string;\n    regionalKey: string;\n    displayNames: {\n        [localeKey: string]: string;\n    };\n}\n\nlet currentLocale = \"en\";\nlet localeStore: ILocale[] = [];\nlet callbacks: Array<() => void> = [];\n\n/**\n * Get the available locales.\n */\nexport function getLocales(): ILocale[] {\n    return localeStore;\n}\n\n/**\n * Register a handler for if the locales change.\n * @param callback\n */\nexport function onLocaleChange(callback: () => void) {\n    callbacks.push(callback);\n}\n\n/**\n * Set the current locale.\n */\nexport function setCurrentLocale(localeKey: string) {\n    currentLocale = localeKey;\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Get the current locale.\n */\nexport function getCurrentLocale() {\n    return currentLocale;\n}\n\n/**\n * Get the current locale in format accepted by Javascript localization functions.\n *\n * PHP canonicalized locales use `_` for the regional separator.\n * Javascript uses `-`.\n */\nexport function getJSLocaleKey() {\n    return currentLocale.replace(\"_\", \"-\");\n}\n\n/**\n * Load a group of locales.\n */\nexport function loadLocales(locales: ILocale[]) {\n    localeStore = [...localeStore, ...locales];\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Clear the loaded locales.\n */\nexport function clearLocales() {\n    localeStore = [];\n    callbacks.forEach(callback => callback());\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ILocale, getLocales, onLocaleChange, getCurrentLocale } from \"./localeStore\";\nimport { logWarning } from \"@vanilla/utils\";\n\nconst LocaleContext = React.createContext<{\n    locales: ILocale[];\n    currentLocale: string | null;\n}>({\n    locales: [],\n    currentLocale: null,\n});\n\nexport function LocaleProvider(props: { children?: React.ReactNode }) {\n    const [locales, setLocales] = useState(getLocales());\n    const [currentLocale, setCurrentLocale] = useState(getCurrentLocale());\n\n    if (!currentLocale) {\n        logWarning(\"No locale loaded for <LocaleProvider />\");\n    }\n\n    useEffect(() => {\n        setLocales(getLocales());\n        setCurrentLocale(getCurrentLocale());\n\n        onLocaleChange(() => {\n            setLocales(getLocales());\n            setCurrentLocale(getCurrentLocale());\n        });\n    }, [setLocales, setCurrentLocale]);\n\n    return (\n        <LocaleContext.Provider\n            value={{\n                locales,\n                currentLocale,\n            }}\n        >\n            {props.children}\n        </LocaleContext.Provider>\n    );\n}\n\nexport function useLocaleInfo() {\n    return useContext(LocaleContext);\n}\n","import { logError, logWarning } from \"@vanilla/utils\";\n\n/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface ITranslations {\n    [key: string]: string;\n}\n\nlet translationStore: ITranslations | null = null;\n\nlet internalTranslationDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function translationDebug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalTranslationDebugValue = newValue;\n    }\n\n    return internalTranslationDebugValue;\n}\n\n/**\n * Load a set of key value pairs as translation resources.\n */\nexport function loadTranslations(translations: ITranslations) {\n    translationStore = { ...translations };\n}\n\n/**\n * Clear all translation resources.\n */\nexport function clearTranslations() {\n    translationStore = null;\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    const fallback = defaultTranslation !== undefined ? defaultTranslation : str;\n\n    if (!translationStore) {\n        // Test environment allows top level static initialization.\n        const message = `Attempted to translate a value '${str}' before the translation store was initialized.`;\n        switch (process.env.NODE_ENV) {\n            case \"production\":\n                logWarning(message);\n                break;\n            case \"development\":\n                throw new Error(message + \" Don't use t() in the top level of a file or a static property.\");\n            case \"test\":\n                // Tests (like storybook and unit testing) don't need to actually bootstrap a full translation store all the time.\n                break;\n        }\n        return fallback;\n    }\n\n    if (translationStore[str] !== undefined) {\n        return translationStore[str];\n    }\n\n    if (translationDebug()) {\n        return \"☢️☢️☢️\" + fallback + \"☢️☢️☢️\";\n    } else {\n        return fallback;\n    }\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { logError, RecordID } from \"@vanilla/utils\";\n\nexport interface IContentTranslatorProps {\n    isLoading?: boolean;\n    isFullScreen?: boolean;\n    properties: ITranslationProperty[];\n    resource: string;\n    title: string;\n    sourceLocale?: string | null;\n    activeLocale?: string | null; // for organizecategories\n    afterSave?: () => void;\n}\n\n// Subtypes\nexport enum TranslationPropertyType {\n    TEXT = \"text\",\n    TEXT_MULTILINE = \"\",\n}\n\nexport interface ITranslationProperty {\n    recordType: string; // Ex. knowledgeCategory\n    recordID?: RecordID; // Ex. 425\n    recordKey?: string; // Ex. Garden.Description\n    sourceText: string; // Ex. \"Howdy Stranger\"\n    propertyName: string; // Ex. name\n    propertyValidation: ITranslationPropertyValidation;\n    propertyType: TranslationPropertyType;\n}\n\nexport interface ITranslationPropertyValidation {\n    minLength?: number;\n    maxLength?: number;\n}\n\nexport const NullContentTranslator: React.FC<IContentTranslatorProps> = (props) => {\n    logError(\"Rendering a Null Content translator. Be sure to check `shouldDisplay` before rendering.\");\n    return null;\n};\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useContext } from \"react\";\nimport { IContentTranslatorProps, NullContentTranslator } from \"./ContentTranslator\";\nimport { useLocaleInfo } from \"./LocaleProvider\";\n\ninterface IContentTranslator {\n    shouldDisplay: boolean;\n    Translator: React.ComponentType<IContentTranslatorProps>;\n}\n\nconst context = React.createContext<IContentTranslator>({\n    shouldDisplay: false,\n    Translator: NullContentTranslator,\n});\n\nlet _TranslationComponent: React.ComponentType<IContentTranslatorProps> | null = null;\n\n/**\n * Provider of the translation component.\n */\nexport const ContentTranslationProvider = (props: { children: React.ReactNode }) => {\n    const { locales } = useLocaleInfo();\n\n    return (\n        <context.Provider\n            value={{\n                shouldDisplay: _TranslationComponent !== null && locales.length > 1,\n                Translator: _TranslationComponent !== null ? _TranslationComponent : NullContentTranslator,\n            }}\n        >\n            {props.children}\n        </context.Provider>\n    );\n};\n\nContentTranslationProvider.setTranslator = (Translator: React.ComponentType<IContentTranslatorProps>) => {\n    _TranslationComponent = Translator;\n};\n\nexport function useContentTranslator(): IContentTranslator {\n    return useContext(context);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get the form data out of a form element.\n *\n * @param formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement: Node | null) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue ? \"true\" : \"false\");\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport twemoji from \"twemoji\";\n\nlet emojiSupportedCache: boolean | null = null;\n\n/**\n * Determine if the browser/OS combo has support for real unicode emojis.\n */\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n            if (ctx) {\n                ctx.fillText(\"😗\", -2, 4);\n                emojiSupportedCache = ctx.getImageData(0, 0, 1, 1).data[3] > 0;\n            } else {\n                emojiSupportedCache = false;\n            }\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Register an keyboard listener for the escape key.\n */\nexport class EscapeListener {\n    /**\n     * @param root - The element to watch for the escape listener in.\n     * @param returnElement - The element to return to when escape is pressed.\n     * @param callback\n     */\n    public constructor(\n        private root: HTMLElement,\n        private returnElement?: HTMLElement,\n        private callback?: (event: KeyboardEvent) => void,\n    ) {}\n\n    /**\n     * Start the listeners.\n     */\n    public start = () => {\n        this.root.addEventListener(\"keydown\", this.keydownListener);\n    };\n\n    /**\n     * Stop the listeners.\n     */\n    public stop = () => {\n        this.root.removeEventListener(\"keydown\", this.keydownListener);\n    };\n\n    /**\n     * Handler that checks for the key of an keyboard event and:\n     *\n     * - Returns focous to the element from the constructor.\n     * - Calls the optional callback.\n     */\n    private keydownListener = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            if (this.root.contains(document.activeElement)) {\n                event.preventDefault();\n                this.returnElement && this.returnElement.focus();\n                this.callback && this.callback(event);\n            }\n        }\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { hashString } from \"@vanilla/utils\";\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n    }\n\n    return eventHash;\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    if (delegatedEventListeners[eventHash]) {\n        const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n        scope.removeEventListener(eventName, wrappedCallback);\n        delete delegatedEventListeners[eventHash];\n    }\n}\n\n/**\n * Remove all delegated event listeners that have been registered.\n */\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Handler for files being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedFile(event: DragEvent): FileList | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n\n        return event.dataTransfer.files;\n    }\n}\n\n/**\n * Handler for files being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedFile(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n */\nexport class FocusWatcher {\n    /**\n     * @param watchedNode - The watched dom node.\n     * @param callback - A callback for when the tree focuses and blurs.\n     */\n    public constructor(private watchedNode: Element, private changeHandler: (hasFocus: boolean) => void) {}\n\n    /**\n     * Register the event listeners from this class.\n     */\n    public start = () => {\n        this.watchedNode.addEventListener(\"focusout\", this.handleFocusOut, true);\n        this.watchedNode.addEventListener(\"focusin\", this.handleFocusIn, true);\n        document.addEventListener(\"click\", this.handleClick);\n    };\n\n    /**\n     * Remove the event listeners from this class.\n     */\n    public stop = () => {\n        this.watchedNode.removeEventListener(\"focusout\", this.handleFocusOut, true);\n        this.watchedNode.removeEventListener(\"focusin\", this.handleFocusIn, true);\n        document.removeEventListener(\"click\", this.handleClick);\n    };\n\n    /**\n     * Handle when an element loses focus.\n     */\n    private handleFocusOut = (event: FocusEvent) => {\n        this.checkDomTreeHasFocus(event, this.changeHandler);\n    };\n\n    /**\n     * Handle an element gaining focus.\n     */\n    private handleFocusIn = (event: FocusEvent) => {\n        this.checkDomTreeHasFocus(event, this.changeHandler);\n    };\n\n    /**\n     * Handle an element being clicked.\n     */\n    private handleClick = (event: MouseEvent) => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = this.checkDomTreeWasClicked(triggeringElement);\n        if (!wasClicked) {\n            this.changeHandler(false);\n        }\n    };\n\n    /**\n     * Determine whether or not our DOM tree was clicked.\n     */\n    private checkDomTreeWasClicked(clickedElement: Element) {\n        return (\n            this.watchedNode &&\n            clickedElement &&\n            (this.watchedNode.contains(clickedElement as Element) || this.watchedNode === clickedElement)\n        );\n    }\n\n    /**\n     * Determine if the currently focused element is somewhere inside of (or the same as)\n     * a given Element.\n     *\n     * @param watchedNode - The watched node to look in.\n     */\n    private checkDomTreeHasFocus(event: FocusEvent, callback: (hasFocus: boolean) => void) {\n        setTimeout(() => {\n            const possibleTargets = [\n                // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n                document.activeElement, // IE11, Safari.\n                event.relatedTarget as Element, // Chrome (The actual standard)\n                (event as any).explicitOriginalTarget, // Firefox\n            ];\n\n            let activeElement = null;\n            for (const target of possibleTargets) {\n                if (target && target !== document.body) {\n                    activeElement = target;\n                    break;\n                }\n            }\n\n            if (activeElement !== null) {\n                const isWatchedInBody = document.body.contains(this.watchedNode);\n                const isFocusedInBody = document.body.contains(activeElement);\n                const isModal = Boolean(document.getElementById(\"modals\")?.contains(activeElement));\n                const hasFocus = Boolean(\n                    this.watchedNode &&\n                        activeElement &&\n                        (activeElement === this.watchedNode || this.watchedNode.contains(activeElement)),\n                );\n\n                // We will only invalidate based on something actually getting focus.\n                // Make sure we are still mounted before calling this.\n                // It could happen that our flyout is unmounted in between the setTimeout call.\n                // We might have focused on a modal which can't be in the watched tree.\n                if (isWatchedInBody && isFocusedInBody) {\n                    callback(hasFocus || isModal);\n                }\n            }\n        }, 0);\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Determine if the browser is escaping the inner contents of our <noscript /> browser.\n */\nexport function browserEscapesNoScript(): boolean {\n    const ns = document.createElement(\"noscript\");\n    ns.innerHTML = \"<test></test>\";\n    document.body.append(ns);\n    const result = ns.innerHTML.startsWith(\"&lt;\");\n    ns.remove();\n    return result;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws If no element was found.\n * @returns An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement: string | Node | null): HTMLElement {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript && loadEventCallbacks.has(existingScript)) {\n            // Add another resolveCallback into the weakmap.\n            const callbacks = loadEventCallbacks.get(existingScript);\n            callbacks && callbacks.push(resolve);\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { browserEscapesNoScript, unescapeHTML } from \"./sanitization\";\n\n/**\n * Prepare an element and it's contents for use in a shadow root.\n *\n * @param element\n * @param cloneElement - If true, clone the element into a `newElementTag`. Preserves CSS classes and IDs.\n *      Particularly useful for when the initial content is inside of a <noscript /> tag.\n * @param newElementTag\n */\nexport function prepareShadowRoot(\n    element: HTMLElement,\n    cloneElement: boolean = false,\n    newElementTag = \"div\",\n): HTMLElement {\n    let html = element.innerHTML;\n    // This is likely a noscript tag.\n    if (browserEscapesNoScript() || html.trim().startsWith(\"&lt;\")) {\n        html = unescapeHTML(html);\n    }\n    // Safari escapes the contents of the noscript.\n    if (cloneElement) {\n        const newElement = document.createElement(newElementTag);\n\n        // Clone various attributes.\n        newElement.classList.value = element.classList.value;\n        newElement.id = element.id;\n\n        // Insert the element & remove the old old.\n        element.parentNode!.insertBefore(newElement, element);\n        element.remove();\n        element = newElement;\n    } else {\n        // If we aren't making a new real root, we need to empty it out.\n        // Otherwise we'll have duplicate contents.\n        element.innerHTML = \"\";\n    }\n\n    const shadowHeader = element.attachShadow({ mode: \"open\" });\n    shadowHeader.innerHTML = html;\n    return element;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport tabbable from \"tabbable\";\nimport { logError } from \"@vanilla/utils\";\n\n/**\n * A class for handling tabbing inside of a container with various exclusions.\n *\n * The goal is here is to be able to programatically implement various tabbing behaviours\n * required for accessibility.\n */\nexport class TabHandler {\n    private tabbableElements: HTMLElement[];\n\n    /**\n     * Determine if an element is tabbable.\n     */\n    public static isTabbable(element: Node) {\n        const children = tabbable(element.parentNode);\n        return children.includes(element);\n    }\n\n    /**\n     * Construct the handler. Don't be afraid to construct multiple of these.\n     *\n     * The elements in a particular TabHandler are very moment specific.\n     * If the DOM changes underneath it it will likely no longer be valid.\n     *\n     * @param root - The root element to look in.\n     * @param excludedElements - Elements to ignore.\n     * @param excludedRoots - These element's children will be ignored.\n     */\n    public constructor(\n        root: Element = document.documentElement!,\n        private excludedElements: Element[] = [],\n        private excludedRoots: Element[] = [],\n    ) {\n        this.tabbableElements = tabbable(root);\n    }\n\n    /**\n     * Get the next tabbable item within a given tabindex.\n     *\n     * WARNING: Performance can be poor if you pass many excluded roots and do not\n     * sufficiently narrow the tree your are looking in.\n     *\n     * @param from - The currently focused element.\n     * @param reverse - True to get the previous element instead.\n     * @param allowLooping - Whether or not the focus should loop around from beginning <-> end.\n     */\n    public getNext(\n        from: Element | null = document.activeElement,\n        reverse: boolean = false,\n        allowLooping: boolean = true,\n    ): HTMLElement | null {\n        if (!(from instanceof HTMLElement)) {\n            logError(\"Unable to tab to next element, `fromElement` given is not valid: \", from);\n            return null;\n        }\n        const tabbables = this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));\n        const currentTabIndex = tabbables.indexOf(from);\n\n        if (currentTabIndex < 0) {\n            return null;\n        }\n\n        let targetIndex = reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n        if (allowLooping) {\n            // Loop over the beginning and ends\n            if (targetIndex < 0) {\n                targetIndex = tabbables.length - 1;\n            } else if (targetIndex >= tabbables.length) {\n                targetIndex = 0;\n            }\n        }\n\n        return tabbables[targetIndex] || null;\n    }\n\n    /**\n     * Get all.\n     */\n    public getAll(from: Element | null = document.activeElement) {\n        if (!(from instanceof HTMLElement)) {\n            logError(\"Unable to tab to next element, `fromElement` given is not valid: \", from);\n            return null;\n        }\n        return this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));\n    }\n\n    /**\n     * Get the first focusable element.\n     */\n    public getInitial(): HTMLElement | null {\n        const tabbables = this.tabbableElements.filter(this.filterAllExcluded);\n        if (tabbables.length > 0) {\n            return tabbables[0];\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Get the last focusable element.\n     */\n    public getLast(): HTMLElement | null {\n        const tabbables = this.tabbableElements.filter(this.filterAllExcluded);\n        if (tabbables.length > 0) {\n            return tabbables[tabbables.length - 1];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Filter out all excluded elements. Allows 1 element and its parents to be exempted.\n     *\n     * The exemption is necessary so we can find our place\n     * if the focus is already in an item that we are trying to exclude.\n     *\n     * @returns A filter for use with [].filter()\n     */\n    private createExcludeFilterWithExemption = (exemption: Element) => {\n        return (elementToFilter: Element): boolean => {\n            const elementIsActiveOrChildOfActive = exemption === elementToFilter || elementToFilter.contains(exemption);\n\n            if (!elementIsActiveOrChildOfActive) {\n                if (this.excludedElements.includes(elementToFilter)) {\n                    return false;\n                }\n                for (const excludedRoot of this.excludedRoots) {\n                    if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        };\n    };\n\n    /**\n     * A filter for use with [].filter().\n     *\n     * Filters out all excluded elements and roots.\n     */\n    private filterAllExcluded = (elementToFilter: Element): boolean => {\n        if (this.excludedElements.includes(elementToFilter)) {\n            return false;\n        }\n        for (const excludedRoot of this.excludedRoots) {\n            if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n// Some polyfills\nimport \"focus-visible\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nsmoothscroll.polyfill();\n\nexport * from \"./domData\";\nexport * from \"./emoji\";\nexport * from \"./EscapeListener\";\nexport * from \"./events\";\nexport * from \"./FocusWatcher\";\nexport * from \"./sanitization\";\nexport * from \"./scripts\";\nexport * from \"./shadowDom\";\nexport * from \"./TabHandler\";\nexport * from \"./visibility\";\n","/**\n * Utility function related to logging/debugging.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nlet internalDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalDebugValue = newValue;\n    }\n\n    return internalDebugValue;\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function logDebug(...value: any[]) {\n    if (internalDebugValue) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode, and if outputLog is true.\n *\n * @param outputLog - Condition to render log\n * @param value - The value to log.\n */\nexport function logDebugConditionnal(outputLog = false, ...value: any[]) {\n    if (internalDebugValue && outputLog) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    if (!internalDebugValue || process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(...value);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport \"../../scss/custom.scss\";\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { assetUrl, getMeta } from \"@library/utility/appUtils\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/dist/\" + __BUILD__SECTION__ + \"/\");\n"],"sourceRoot":""}